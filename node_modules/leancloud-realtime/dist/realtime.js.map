{"version":3,"file":null,"sources":["/home/travis/build/leancloud/js-realtime-sdk/proto/message-compiled.js","/home/travis/build/leancloud/js-realtime-sdk/proto/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/global.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/expirable.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/cache.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/index.js","/home/travis/build/leancloud/js-realtime-sdk/src/websocket-plus.js","/home/travis/build/leancloud/js-realtime-sdk/src/error.js","/home/travis/build/leancloud/js-realtime-sdk/src/connection.js","/home/travis/build/leancloud/js-realtime-sdk/src/plugin.js","/home/travis/build/leancloud/js-realtime-sdk/src/realtime.js","/home/travis/build/leancloud/js-realtime-sdk/src/signature-factory-runner.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/helpers.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/typed-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/recalled-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation-query.js","/home/travis/build/leancloud/js-realtime-sdk/src/im-client.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/text-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/message-parser.js","/home/travis/build/leancloud/js-realtime-sdk/src/plugin-im.js","/home/travis/build/leancloud/js-realtime-sdk/src/index.js"],"sourcesContent":["module.exports = require(\"protobufjs/dist/protobuf-light\").newBuilder({})['import']({\n    \"package\": \"push_server.messages2\",\n    \"syntax\": \"proto2\",\n    \"options\": {\n        \"objc_class_prefix\": \"AVIM\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"JsonObjectMessage\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadTuple\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"unread\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"LogItem\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msgId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"ackAt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"readAt\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"DataCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"msg\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"SessionCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"ua\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tag\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceId\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"onlineSessionPeerIds\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"st\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"stTtl\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceToken\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"sp\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 16\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"lastUnreadNotifTime\",\n                    \"id\": 17\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"lastPatchTime\",\n                    \"id\": 18\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"configBitmap\",\n                    \"id\": 19\n                }\n            ]\n        },\n        {\n            \"name\": \"ErrorCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"DirectCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msg\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"fromPeerId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"hasMore\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"toPeerIds\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"dt\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"pushData\",\n                    \"id\": 16\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"will\",\n                    \"id\": 17\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 18\n                }\n            ]\n        },\n        {\n            \"name\": \"AckCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"fromts\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tots\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 11\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"UnreadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"notifTime\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"ConvCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"m\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"unique\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cdate\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"initBy\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"sort\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"skip\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"flag\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"count\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"udate\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"statusSub\",\n                    \"id\": 16\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"statusPub\",\n                    \"id\": 17\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"statusTTL\",\n                    \"id\": 18\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uniqueId\",\n                    \"id\": 19\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"targetClientId\",\n                    \"id\": 20\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxReadTimestamp\",\n                    \"id\": 21\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxAckTimestamp\",\n                    \"id\": 22\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"queryAllMembers\",\n                    \"id\": 23\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"MaxReadTuple\",\n                    \"name\": \"maxReadTuples\",\n                    \"id\": 24\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 25\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"results\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"where\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"attr\",\n                    \"id\": 103\n                }\n            ]\n        },\n        {\n            \"name\": \"RoomCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"roomPeerIds\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"byPeerId\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"LogsCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"l\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tmid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"checksum\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"stored\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"reversed\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"LogItem\",\n                    \"name\": \"logs\",\n                    \"id\": 105\n                }\n            ]\n        },\n        {\n            \"name\": \"RcpCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"read\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadTuple\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"MaxReadTuple\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"pid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxAckTimestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"maxReadTimestamp\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"ReadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PresenceCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"StatusType\",\n                    \"name\": \"status\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReportCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"initiative\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PatchItem\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"recall\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"patchTimestamp\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"PatchCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"PatchItem\",\n                    \"name\": \"patches\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"lastPatchTime\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"GenericCommand\",\n            \"syntax\": \"proto2\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"CommandType\",\n                    \"name\": \"cmd\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"OpType\",\n                    \"name\": \"op\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"appId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"peerId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"i\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"installationId\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"priority\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"service\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DataCommand\",\n                    \"name\": \"dataMessage\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"SessionCommand\",\n                    \"name\": \"sessionMessage\",\n                    \"id\": 102\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ErrorCommand\",\n                    \"name\": \"errorMessage\",\n                    \"id\": 103\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DirectCommand\",\n                    \"name\": \"directMessage\",\n                    \"id\": 104\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"AckCommand\",\n                    \"name\": \"ackMessage\",\n                    \"id\": 105\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"UnreadCommand\",\n                    \"name\": \"unreadMessage\",\n                    \"id\": 106\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReadCommand\",\n                    \"name\": \"readMessage\",\n                    \"id\": 107\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RcpCommand\",\n                    \"name\": \"rcpMessage\",\n                    \"id\": 108\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LogsCommand\",\n                    \"name\": \"logsMessage\",\n                    \"id\": 109\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ConvCommand\",\n                    \"name\": \"convMessage\",\n                    \"id\": 110\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RoomCommand\",\n                    \"name\": \"roomMessage\",\n                    \"id\": 111\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PresenceCommand\",\n                    \"name\": \"presenceMessage\",\n                    \"id\": 112\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReportCommand\",\n                    \"name\": \"reportMessage\",\n                    \"id\": 113\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PatchCommand\",\n                    \"name\": \"patchMessage\",\n                    \"id\": 114\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"CommandType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"session\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"conv\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"direct\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"ack\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"rcp\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"unread\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"logs\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"error\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"login\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"data\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"room\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"read\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"presence\",\n                    \"id\": 12\n                },\n                {\n                    \"name\": \"report\",\n                    \"id\": 13\n                },\n                {\n                    \"name\": \"echo\",\n                    \"id\": 14\n                },\n                {\n                    \"name\": \"loggedin\",\n                    \"id\": 15\n                },\n                {\n                    \"name\": \"logout\",\n                    \"id\": 16\n                },\n                {\n                    \"name\": \"loggedout\",\n                    \"id\": 17\n                },\n                {\n                    \"name\": \"patch\",\n                    \"id\": 18\n                }\n            ]\n        },\n        {\n            \"name\": \"OpType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"open\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"add\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"remove\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"close\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"opened\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"closed\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"query\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"query_result\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"conflict\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"added\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"removed\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"start\",\n                    \"id\": 30\n                },\n                {\n                    \"name\": \"started\",\n                    \"id\": 31\n                },\n                {\n                    \"name\": \"joined\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"members_joined\",\n                    \"id\": 33\n                },\n                {\n                    \"name\": \"left\",\n                    \"id\": 39\n                },\n                {\n                    \"name\": \"members_left\",\n                    \"id\": 40\n                },\n                {\n                    \"name\": \"results\",\n                    \"id\": 42\n                },\n                {\n                    \"name\": \"count\",\n                    \"id\": 43\n                },\n                {\n                    \"name\": \"result\",\n                    \"id\": 44\n                },\n                {\n                    \"name\": \"update\",\n                    \"id\": 45\n                },\n                {\n                    \"name\": \"updated\",\n                    \"id\": 46\n                },\n                {\n                    \"name\": \"mute\",\n                    \"id\": 47\n                },\n                {\n                    \"name\": \"unmute\",\n                    \"id\": 48\n                },\n                {\n                    \"name\": \"status\",\n                    \"id\": 49\n                },\n                {\n                    \"name\": \"members\",\n                    \"id\": 50\n                },\n                {\n                    \"name\": \"max_read\",\n                    \"id\": 51\n                },\n                {\n                    \"name\": \"is_member\",\n                    \"id\": 52\n                },\n                {\n                    \"name\": \"join\",\n                    \"id\": 80\n                },\n                {\n                    \"name\": \"invite\",\n                    \"id\": 81\n                },\n                {\n                    \"name\": \"leave\",\n                    \"id\": 82\n                },\n                {\n                    \"name\": \"kick\",\n                    \"id\": 83\n                },\n                {\n                    \"name\": \"reject\",\n                    \"id\": 84\n                },\n                {\n                    \"name\": \"invited\",\n                    \"id\": 85\n                },\n                {\n                    \"name\": \"kicked\",\n                    \"id\": 86\n                },\n                {\n                    \"name\": \"upload\",\n                    \"id\": 100\n                },\n                {\n                    \"name\": \"uploaded\",\n                    \"id\": 101\n                },\n                {\n                    \"name\": \"modify\",\n                    \"id\": 150\n                },\n                {\n                    \"name\": \"modified\",\n                    \"id\": 151\n                }\n            ]\n        },\n        {\n            \"name\": \"StatusType\",\n            \"syntax\": \"proto2\",\n            \"values\": [\n                {\n                    \"name\": \"on\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"off\",\n                    \"id\": 2\n                }\n            ]\n        }\n    ],\n    \"isNamespace\": true\n}).build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages2;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","/* eslint-disable */\nexport default typeof global !== 'undefined' ? global :\n  typeof window !== 'undefined' ? window : {};\n","import d from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this._value = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt < Date.now();\n    if (expired) debug(`expired: ${this._value}`);\n    return expired ? EXPIRED : this._value;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import d from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const value = cache.value;\n      if (value !== Expirable.EXPIRED) {\n        debug('[%s] hit: %s %O', this.name, key, value);\n        return value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug('[%s] set: %s %O %d', this.name, key, value, ttl);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\nimport global from './global';\n\nexport { global };\n\nexport const tryAll = (promiseConstructors) => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\nexport const tap = interceptor => value => ((interceptor(value), value));\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\nexport const decodeDate = (date) => {\n  if (!date) return date;\n  if (typeof date === 'string') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  // Long\n  if (typeof date.toNumber === 'function') {\n    return new Date(date.toNumber());\n  }\n  return date;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 = (\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1\n);\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  (klass[property] || (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined));\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) => Array.from(\n  (bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b))\n);\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = (object) => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\n// debug utility\nconst removeNull = (obj) => {\n  if (!isPlainObject(obj)) return obj;\n  const object = Object.assign({}, obj);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const prop in object) {\n    if ({}.hasOwnProperty.call(object, prop)) {\n      const value = object[prop];\n      if (value === null) {\n        delete object[prop];\n      } else {\n        object[prop] = removeNull(value);\n      }\n    }\n  }\n  return object;\n};\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = (target) => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach((seg) => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n\n// eslint-disable-next-line no-undef\nexport const isWeapp = typeof wx === 'object' && typeof wx.connectSocket === 'function';\n\n// throttle decorator\nexport const throttle = wait => (target, property, descriptor) => {\n  const callback = descriptor.value;\n  // very naive, internal use only\n  if (callback.length) {\n    throw new Error('throttled function should not accept any arguments');\n  }\n  return {\n    ...descriptor,\n    value() {\n      let {\n        throttleMeta,\n      } = internal(this);\n      if (!throttleMeta) throttleMeta = internal(this).throttleMeta = {};\n      let {\n        [property]: propertyMeta,\n      } = throttleMeta;\n      if (!propertyMeta) propertyMeta = throttleMeta[property] = {};\n      const {\n        previouseTimestamp = 0,\n        timeout,\n      } = propertyMeta;\n      const now = Date.now();\n      const remainingTime = wait - (now - previouseTimestamp);\n      if (remainingTime <= 0) {\n        throttleMeta[property].previouseTimestamp = now;\n        callback.apply(this);\n      } else if (!timeout) {\n        propertyMeta.timeout = setTimeout(() => {\n          propertyMeta.previouseTimestamp = Date.now();\n          delete propertyMeta.timeout;\n          callback.apply(this);\n        }, remainingTime);\n      }\n    },\n  };\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\n\nimport WebSocket from 'ws';\n\nimport { tryAll, global } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nconst HEARTBEAT_TIME = 180000;\nconst TIMEOUT_TIME = 380000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 * Math.pow(2, attempt), 300000);\n\nconst requireConnected = (target, name, descriptor) =>\n  Object.assign({}, descriptor, {\n    value: function requireConnectedWrapper(...args) {\n      if (!this.is('connected')) {\n        const currentState = this.current;\n        console.warn(`${name} should not be called when the connection is ${currentState}`);\n        if (this.is('disconnected') || this.is('reconnecting')) {\n          console.warn('disconnect and reconnect event should be handled to avoid such calls.');\n        }\n        throw new Error('Connection unavailable');\n      }\n      return descriptor.value.call(this, ...args);\n    },\n  });\n\nclass WebSocketPlus extends EventEmitter {\n  constructor(getUrls, protocol) {\n    if (typeof WebSocket === 'undefined') {\n      throw new Error('WebSocket is undefined. Polyfill is required in this runtime.');\n    }\n    super();\n    if (typeof getUrls !== 'function') {\n      this._getUrls = () => Promise.resolve(getUrls);\n    } else {\n      this._getUrls = getUrls;\n    }\n    this._protocol = protocol;\n    this.init();\n    this._createWs(this._getUrls, this._protocol).then(\n      () => {\n        this.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\n        if (global.addEventListener) {\n          this.__pause = () => this.pause();\n          this.__resume = () => this.resume();\n          global.addEventListener('offline', this.__pause);\n          global.addEventListener('online', this.__resume);\n        }\n        this.open();\n      }\n    ).catch(this.throw.bind(this));\n  }\n\n  _createWs(getUrls, protocol) {\n    return getUrls().then((wsUrls) => {\n      let urls = wsUrls;\n      if (!(urls instanceof Array)) {\n        urls = [urls];\n      }\n      return tryAll(\n        urls.map(url => (resolve, reject) => {\n          debug(`connect [${url}] ${protocol}`);\n          const ws = protocol ? new WebSocket(\n            url, protocol\n          ) : new WebSocket(url);\n          ws.binaryType = this.binaryType || (global.Buffer ? 'nodebuffer' : 'arraybuffer');\n          ws.onopen = () => resolve(ws);\n          ws.onerror = ws.onclose = (error) => {\n            if (error instanceof Error) {\n              return reject(error);\n            }\n            // in browser, error event is useless\n            return reject(new Error(`Failed to connect [${url}]`));\n          };\n        })\n      ).then((ws) => {\n        this._ws = ws;\n        this._ws.onclose = this._handleClose.bind(this);\n        this._ws.onmessage = this._handleMessage.bind(this);\n        return ws;\n      });\n    });\n  }\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = ws.onclose = ws.onerror = ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onbeforeevent(event, from, to, ...payload) {\n    debug(`${event}: ${from} -> ${to}`, ...payload);\n  }\n  onopen() {\n    this.emit('open');\n  }\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n  onleaveconnected(event, from, to) {\n    this._stopConnectionKeeper();\n    this._destroyWs();\n    if (to === 'offline' || to === 'disconnected') {\n      this.emit('disconnect');\n    }\n  }\n  onpause() {\n    this.emit('offline');\n  }\n  onbeforeresume() {\n    this.emit('online');\n  }\n  onreconnect() {\n    this.emit('reconnect');\n  }\n  ondisconnected(event, from, to, attempt = 0) {\n    const delay = DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit('schedule', attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('disconnected')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n  onretry(event, from, to, attempt = 0) {\n    this.emit('retry', attempt);\n    this._createWs(this._getUrls, this._protocol).then(\n      () => (this.can('reconnect') ? this.reconnect() : this._destroyWs()),\n      () => this.can('fail') && this.fail(attempt + 1)\n    );\n  }\n  onerror(event, from, to, error) {\n    this.emit('error', error);\n  }\n  onclose() {\n    if (global.removeEventListener) {\n      if (this.__pause) global.removeEventListener('offline', this.__pause);\n      if (this.__resume) global.removeEventListener('online', this.__resume);\n    }\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimeoutTimer() {\n    debug('_postponeTimeoutTimer');\n    this._clearTimeoutTimers();\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n  _clearTimeoutTimers() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    addListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    addListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._postponeTimeoutTimer();\n  }\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener = this._ws.removeListener || this._ws.removeEventListener;\n    removeListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    removeListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._clearTimeoutTimers();\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n  handleMessage(message) {\n    this.emit('message', message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [{\n    name: 'open',\n    from: 'initialized',\n    to: 'connected',\n  }, {\n    name: 'disconnect',\n    from: 'connected',\n    to: 'disconnected',\n  }, {\n    name: 'retry',\n    from: 'disconnected',\n    to: 'reconnecting',\n  }, {\n    name: 'fail',\n    from: 'reconnecting',\n    to: 'disconnected',\n  }, {\n    name: 'reconnect',\n    from: 'reconnecting',\n    to: 'connected',\n  }, {\n    name: 'pause',\n    from: ['connected', 'disconnected', 'reconnecting'],\n    to: 'offline',\n  }, {\n  }, {\n    name: 'resume',\n    from: 'offline',\n    to: 'disconnected',\n  }, {\n    name: 'close',\n    from: ['connected', 'disconnected', 'reconnecting', 'offline'],\n    to: 'closed',\n  }, {\n    name: 'throw',\n    from: '*',\n    to: 'error',\n  }],\n});\n\nexport default WebSocketPlus;\n","export const error = Object.freeze({\n  1000: {\n    name: 'CLOSE_NORMAL',\n  },\n  1006: {\n    name: 'CLOSE_ABNORMAL',\n  },\n  4100: {\n    name: 'APP_NOT_AVAILABLE',\n    message: 'App not exists or realtime message service is disabled.',\n  },\n  4103: {\n    name: 'INVALID_LOGIN',\n    message: 'Malformed clientId.',\n  },\n  4105: {\n    name: 'SESSION_REQUIRED',\n    message: 'Message sent before session opened. ',\n  },\n  4107: {\n    name: 'READ_TIMEOUT',\n  },\n  4108: {\n    name: 'LOGIN_TIMEOUT',\n  },\n  4109: {\n    name: 'FRAME_TOO_LONG',\n  },\n  4110: {\n    name: 'INVALID_ORIGIN',\n    message: 'Access denied by domain whitelist.',\n  },\n  4111: {\n    name: 'SESSION_CONFLICT',\n  },\n  4112: {\n    name: 'SESSION_TOKEN_EXPIRED',\n  },\n  4200: {\n    name: 'INTERNAL_ERROR',\n    message: 'Internal error, please contact LeanCloud for support.',\n  },\n  4201: {\n    name: 'SEND_MESSAGE_TIMEOUT',\n  },\n  4302: {\n    name: 'CONVERSATION_SIGNATURE_FAILED',\n  },\n  4303: {\n    name: 'CONVERSATION_NOT_FOUND',\n  },\n  4304: {\n    name: 'CONVERSATION_FULL',\n  },\n  4305: {\n    name: 'CONVERSATION_REJECTED_BY_APP',\n  },\n  4306: {\n    name: 'CONVERSATION_UPDATE_FAILED',\n  },\n  4307: {\n    name: 'CONVERSATION_READ_ONLY',\n  },\n  4308: {\n    name: 'CONVERSATION_NOT_ALLOWED',\n  },\n  4401: {\n    name: 'INVALID_MESSAGING_TARGET',\n  },\n  4402: {\n    name: 'MESSAGE_REJECTED_BY_APP',\n  },\n});\n\nexport const ErrorCode = Object.freeze(\n  Object.keys(error).reduce((result, code) => Object.assign(result, {\n    [error[code].name]: Number(code),\n  }), {})\n);\n\nexport const createError = (errorMessage) => {\n  const {\n    code, reason, appCode, detail,\n  } = errorMessage;\n  let message = reason || detail;\n  if (!message && error[code]) {\n    message = error[code].message || error[code].name;\n  }\n  if (!message) {\n    message = `Unknow Error: ${code}`;\n  }\n  const err = new Error(message);\n  return Object.assign(err, {\n    code, appCode, detail,\n  });\n};\n","import d from 'debug';\nimport WebSocketPlus from './websocket-plus';\nimport { createError } from './error';\nimport { GenericCommand, CommandType } from '../proto/message';\nimport { trim, isWeapp } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    if (!isWeapp) {\n      super(getUrl, protocolString);\n    } else {\n      super(getUrl().then(urls => urls.map(url =>\n        `${url}${url.indexOf('?') === -1 ? '?' : '&'}subprotocol=${encodeURIComponent(protocolString)}`\n      )));\n    }\n    this._protocalFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  send(command, waitingForRespond = true) {\n    let serialId;\n    if (waitingForRespond) {\n      this._serialId += 1;\n      serialId = this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    debug('↑ %O sent', trim(command));\n\n    let message;\n    if (this._protocalFormat === 'proto2base64') {\n      message = command.toBase64();\n    } else if (command.toBuffer) {\n      message = command.toBuffer();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        resolve,\n        reject,\n      };\n      setTimeout(\n        () => {\n          if (this._commands[serialId]) {\n            debug('✗ %O timeout', trim(command));\n            reject(new Error('Command Timeout.'));\n            delete this._commands[serialId];\n          }\n        },\n        COMMAND_TIMEOUT\n      );\n    });\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      debug('↓ %O received', trim(message));\n    } catch (e) {\n      console.warn('Decode message failed', msg);\n    }\n    this.emit('allmessage', message);\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        if (message.cmd === CommandType.error) {\n          this\n            ._commands[serialId]\n            .reject(createError(message.errorMessage));\n        } else {\n          this\n            ._commands[serialId]\n            .resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else if (message.cmd === CommandType.error) {\n      this.emit('error', createError(message.errorMessage));\n    } else {\n      this.emit('message', message);\n    }\n  }\n\n  ping() {\n    return this.send(new GenericCommand({\n      cmd: CommandType.echo,\n    })).catch(error => debug('ping failed:', error));\n  }\n}\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * <p>\n * 插件是由一个或多个扩展点组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。\n * 其中 <code>beforeMessageParse</code>，<code>afterMessageParse</code> 可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <code>beforeMessageDispatch</code> 可以通过返回一个 boolean 类型的 shouldDispatch 值来控制是否要继续派发收到的消息。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息 JSON 化（<code>message.toJSON()</code>）的返回值，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.afterMessageParse\n * @type Function\n */\n\n/**\n * 在收到消息之后，派发消息之前，控制是否派发这条消息。\n * <p>\n * 接受参数为 message 与 conversation。\n * 该方法需要返回 boolean 类型的值，如果返回 false 则 SDK 不再派发这条消息，后续的 beforeMessageDispatch 也不会执行。\n * 如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageDispatch\n * @type Function\n * @since 3.4.0\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => (param) => {\n  const { constructor } = param;\n  return Promise.resolve(param).then(middleware).then(tap((result) => {\n    if (result === undefined || result === null) {\n      // eslint-disable-next-line max-len\n      return console.warn(`Middleware[${middleware._pluginName || 'anonymous plugin'}:${middleware.name || 'anonymous middleware'}] param/return types not match. It returns ${result} while a ${param.constructor.name} expected.`);\n    }\n    if (!(result instanceof constructor)) {\n      // eslint-disable-next-line max-len\n      return console.warn(`Middleware[${middleware._pluginName || 'anonymous plugin'}:${middleware.name || 'anonymous middleware'}] param/return types not match. It returns a ${result.constructor.name} while a ${param.constructor.name} expected.`);\n    }\n    return 0;\n  }));\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    decorators.forEach((decorator) => {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    });\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) => previousPromise\n      .then(checkType(middleware))\n      .catch((error) => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target)\n  );\n\nexport const applyDispatcher = (dispatchers, payload) =>\n  ensureArray(dispatchers).reduce(\n    (resultPromise, dispatcher) => resultPromise.then(shouldDispatch =>\n      (shouldDispatch === false ? false : dispatcher(...payload))\n    ).catch((error) => {\n      if (dispatcher._pluginName) {\n        // eslint-disable-next-line no-param-reassign\n        error.message += `[${dispatcher._pluginName}]`;\n      }\n      throw error;\n    }), Promise.resolve(true)\n  );\n","import d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport axios from 'axios';\nimport Connection from './connection';\nimport { ErrorCode, createError } from './error';\nimport { tap, Cache, trim, internal, ensureArray, isWeapp } from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\n\nconst debug = d('LC:Realtime');\n\nconst pushRouterCache = new Cache('push-router');\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} [options.region='cn'] 节点 id\n   * @param  {Boolean} [options.pushOfflineMessages=false] 启用推送离线消息模式（默认为发送未读消息通知模式）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况（如 React Native）\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor(options) {\n    debug('initializing Realtime');\n    super();\n    if (typeof options.appId !== 'string') {\n      throw new TypeError(`appId [${options.appId}] is not a string`);\n    }\n    this._options = Object.assign({\n      appId: undefined,\n      region: 'cn',\n      pushOfflineMessages: false,\n      noBinary: isWeapp,\n      ssl: true,\n      server: process.env.SERVER,\n    }, options);\n    this._cache = new Cache('endpoints');\n    internal(this).clients = new Set();\n    this._plugins = [\n      ...ensureArray(Realtime.__preRegisteredPlugins),\n      ...ensureArray(options.plugins),\n    ].reduce(\n      (result, plugin) => {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const hook in plugin) {\n          if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n            if (plugin.name) {\n              ensureArray(plugin[hook]).forEach((value) => {\n                // eslint-disable-next-line no-param-reassign\n                value._pluginName = plugin.name;\n              });\n            }\n            // eslint-disable-next-line no-param-reassign\n            result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n          }\n        }\n        return result;\n      },\n      {}\n    );\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf2';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'proto2base64';\n    }\n    let version = 3;\n    if (this._options.pushOfflineMessages) {\n      // 不推送离线消息，而是发送对话的未读通知\n      version = 1;\n    }\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getEndpoints(this._options),\n        protocol\n      );\n      connection.on('open', () => resolve(connection));\n      connection.on('error', reject);\n      connection.on('message', this._dispatchCommand.bind(this));\n      /**\n       * 连接断开。\n       * 连接断开可能是因为 SDK 进入了离线状态（see {@link Realtime#event:offline}），或长时间没有收到服务器心跳。\n       * 连接断开后所有的网络操作都会失败，请在连接断开后禁用相关的 UI 元素。\n       * @event Realtime#disconnect\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#schedule\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#retry\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 连接恢复正常。\n       * 请重新启用在 {@link Realtime#event:disconnect} 事件中禁用的相关 UI 元素\n       * @event Realtime#reconnect\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#disconnect\n       * @see Realtime#event:disconnect\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#schedule\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#retry\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      /**\n       * 客户端进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event Realtime#offline\n       * @since 3.4.0\n       */\n      /**\n       * 客户端恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event Realtime#online\n       * @since 3.4.0\n       */\n      /**\n       * 进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event IMClient#offline\n       * @since 3.4.0\n       */\n      /**\n       * 恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event IMClient#online\n       * @since 3.4.0\n       */\n\n      // event proxy\n      ['disconnect', 'reconnect', 'retry', 'schedule', 'offline', 'online'].forEach(\n        event => connection.on(event, (...payload) => {\n          debug(`${event} event emitted. %O`, payload);\n          this.emit(event, ...payload);\n          if (event !== 'reconnect') {\n            internal(this).clients.forEach((client) => {\n              client.emit(event, ...payload);\n            });\n          }\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const isFatal = [\n          ErrorCode.APP_NOT_AVAILABLE,\n          ErrorCode.INVALID_LOGIN,\n          ErrorCode.INVALID_ORIGIN,\n        ].some(errorCode => errorCode === event.code);\n        if (isFatal) {\n          // in these cases, SDK should throw.\n          this.throw(createError(event));\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  _getEndpoints(options) {\n    return Promise.resolve(\n      this._cache.get('endpoints') ||\n      this\n        .constructor\n        ._fetchEndpointsInfo(options)\n        .then(\n          tap(info => this._cache.set('endpoints', info, info.ttl * 1000))\n        )\n    ).then((info) => {\n      debug('endpoint info: %O', info);\n      return [info.server, info.secondary];\n    });\n  }\n\n  static _fetchPushRouter({ appId, region }) {\n    debug('fetch router');\n    switch (region) {\n      case 'cn': {\n        const cachedPushRouter = pushRouterCache.get(appId);\n        if (cachedPushRouter) {\n          return Promise.resolve(cachedPushRouter);\n        }\n        return axios\n          .get('https://app-router.leancloud.cn/1/route', {\n            params: {\n              appId,\n            },\n            timeout: 20000,\n          })\n          .then(\n            res => res.data\n          )\n          .then(tap(debug))\n          .then(\n            (route) => {\n              const pushRouter = route.push_router_server;\n              if (!pushRouter) {\n                throw new Error('push router not exists');\n              }\n              let ttl = route.ttl;\n              if (typeof ttl !== 'number') {\n                ttl = 3600;\n              }\n              pushRouterCache.set(appId, pushRouter, ttl * 1000);\n              return pushRouter;\n            }\n          )\n          .catch(() => 'router-g0-push.leancloud.cn');\n      }\n      case 'us':\n        return Promise.resolve('router-a0-push.leancloud.cn');\n      default:\n        throw new Error(`Region [${region}] is not supported.`);\n    }\n  }\n\n  static _fetchEndpointsInfo({ appId, region, ssl, server }) {\n    debug('fetch endpoint info');\n    return this._fetchPushRouter({ appId, region })\n      .then(tap(debug))\n      .then(router =>\n        axios.get(`https://${router}/v1/route`, {\n          params: {\n            appId,\n            secure: ssl,\n            features: isWeapp ? 'wechat' : undefined,\n            server,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        }).then(\n          res => res.data\n        ).then(tap(debug))\n    );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `schedule` 事件之后，`retry` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const connection = internal(this).connection;\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not disconnected. the connection is now ${connection.current}`\n      );\n    }\n    return connection.retry();\n  }\n  /**\n   * 暂停，使 SDK 进入离线状态。\n   * 你可以在网络断开、应用进入后台等时刻调用该方法让 SDK 进入离线状态，离线状态下不会尝试重连。\n   * 在浏览器中 SDK 会自动监听网络变化，因此无需手动调用该方法。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:offline\n   */\n  pause() {\n    // 这个方法常常在网络断开、进入后台时被调用，此时 connection 可能没有建立或者已经 close。\n    // 因此不像 retry，这个方法应该尽可能 loose\n    const connection = internal(this).connection;\n    if (!connection) return;\n    if (connection.can('pause')) connection.pause();\n  }\n  /**\n   * 恢复在线状态。\n   * 你可以在网络恢复、应用回到前台等时刻调用该方法让 SDK 恢复在线状态，恢复在线状态后 SDK 会开始尝试重连。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:online\n   */\n  resume() {\n    // 与 pause 一样，这个方法应该尽可能 loose\n    const connection = internal(this).connection;\n    if (!connection) return;\n    if (connection.can('resume')) connection.resume();\n  }\n\n  _register(client) {\n    internal(this).clients.add(client);\n  }\n\n  _deregister(client) {\n    internal(this).clients.delete(client);\n    if (internal(this).clients.size === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchCommand(command) {\n    return applyDispatcher(this._plugins.beforeCommandDispatch, [command, this])\n      .then((shouldDispatch) => {\n        // no plugin handled this command\n        if (shouldDispatch) return debug('[WARN] Unexpected message received: %O', trim(command));\n        return false;\n      });\n  }\n}\n","import d from 'debug';\nimport { tap } from './utils';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const {\n    signature,\n    timestamp,\n    nonce,\n  } = signatureResult;\n  if (typeof signature !== 'string'\n      || typeof timestamp !== 'number'\n      || typeof nonce !== 'string') {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport default (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug(`call signatureFactory with ${params}`);\n      return signatureFactory(...params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result %O', signatureResult)),\n      (error) => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      }\n    )\n    .then(_validateSignature);\n","import uuid from 'uuid/v4';\n\n\n/**\n * 消息状态枚举\n * @enum {Symbol}\n * @since 3.2.0\n * @memberof module:leancloud-realtime\n */\nconst MessageStatus = {\n  /** 初始状态、未知状态 */\n  NONE: Symbol('none'),\n  /** 正在发送 */\n  SENDING: Symbol('sending'),\n  /** 已发送 */\n  SENT: Symbol('sent'),\n  /** 已送达 */\n  DELIVERED: Symbol('delivered'),\n  /** 发送失败 */\n  FAILED: Symbol('failed'),\n};\nObject.freeze(MessageStatus);\n\nconst rMessageStatus = {\n  [MessageStatus.NONE]: true,\n  [MessageStatus.SENDING]: true,\n  [MessageStatus.SENT]: true,\n  [MessageStatus.DELIVERED]: true,\n  [MessageStatus.READ]: true,\n  [MessageStatus.FAILED]: true,\n};\n\nexport { MessageStatus };\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(this, { content }, {\n      /**\n       * @type {String}\n       * @memberof Message#\n       */\n      id: uuid(),\n      /**\n       * 消息所在的 conversation id\n       * @memberof Message#\n       * @type {String?}\n       */\n      cid: null,\n      /**\n       * 消息发送时间\n       * @memberof Message#\n       * @type {Date}\n       */\n      timestamp: new Date(),\n      /**\n       * 消息发送者\n       * @memberof Message#\n       * @type {String}\n       */\n      from: undefined,\n      /**\n       * 标记需要回执\n       * @memberof Message#\n       * @type {Boolean}\n       * @deprecated 指定是否需要送达回执请使用 {@link Conversation#send} 方法的 `options.receipt` 参数。\n       */\n      needReceipt: false,\n      /**\n       * 标记暂态消息\n       * @memberof Message#\n       * @type {Boolean}\n       * @deprecated 指定是否作为暂态消息发送请使用 {@link Conversation#send} 方法的 `options.transient` 参数。\n       * 请不要将是否为暂态作为区分某些消息的标记，请使用富媒体消息的属性（attributes）或使用自定义消息类型。\n       * 该字段将在 v4.0 中移除。\n       */\n      transient: false,\n      /**\n       * @var deliveredAt {?Date} 消息送达时间\n       * @memberof Message#\n       */\n      // deliveredAt,\n    });\n    this._setStatus(MessageStatus.NONE);\n  }\n\n  /**\n   * 设置是否需要送达回执\n   * @param {Boolean} needReceipt\n   * @return {Message} self\n   * @deprecated 请使用 {@link Conversation#send} 方法的 `options.receipt` 选项代替。\n   */\n  setNeedReceipt(needReceipt) {\n    console.warn('DEPRECATION Message#setNeedReceipt: Use Conversation#send with sendOptions.receipt instead.');\n    this.needReceipt = needReceipt;\n    return this;\n  }\n\n  /**\n   * 设置是否是暂态消息\n   * @param {Boolean} transient\n   * @return {Message} self\n   * @deprecated 请使用 {@link Conversation#send} 方法的 `options.transient` 选项代替。\n   */\n  setTransient(transient) {\n    console.warn('DEPRECATION Message#setTransient: Use Conversation#send with sendOptions.transient instead.');\n    this.transient = transient;\n    return this;\n  }\n\n  /**\n   * 将当前消息序列化为 JSON 对象\n   * @protected\n   * @return {Object}\n   */\n  toJSON() {\n    return this.content;\n  }\n\n  /**\n   * 消息状态，值为 {@link module:leancloud-realtime.MessageStatus} 之一\n   * @type {Symbol}\n   * @readonly\n   * @since 3.2.0\n   */\n  get status() {\n    return this._status;\n  }\n\n  _setStatus(status) {\n    if (!rMessageStatus[status]) {\n      throw new Error('Invalid message status');\n    }\n    this._status = status;\n  }\n\n  /**\n   * 消息修改或撤回时间，可以通过比较其与消息的 timestamp 是否相等判断消息是否被修改过或撤回过。\n   * @type {Date}\n   * @since 3.5.0\n   */\n  get updatedAt() {\n    return this._updatedAt || this.timestamp;\n  }\n  set updatedAt(value) {\n    this._updatedAt = value;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @protected\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// documented in ../index.js\nexport const messageType = (type) => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return (target) => {\n    target.TYPE = type;\n    target.validate = json => (json._lctype === type);\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n// documented in ../index.js\nexport const messageField = (fields) => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else if (fields.some(value => typeof value !== 'string')) {\n      throw new TypeError('fields contains non-string typed member');\n    }\n  }\n  return (target) => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = (target) => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\nexport default class TypedMessage extends Message {\n  /**\n   * 所有内置的富媒体消息均继承自本类\n   * @extends Message\n   */\n  constructor() {\n    super();\n    this._ = {};\n  }\n\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，\n   * 如 <code>[红包] 新春快乐</code>。\n   * 默认值为消息的 text。\n   * @type {String}\n   * @readonly\n   */\n  get summary() {\n    return this.text;\n  }\n\n  /**\n   * @param {String} text\n   * @return {TypedMessage} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {TypedMessage} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  /* eslint-disable class-methods-use-this */\n  _getType() {\n    throw new Error('not implemented');\n  }\n  /* eslint-enable class-methods-use-this */\n\n  toJSON() {\n    return Object.assign({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n    }, this._getCustomFields(), this._getType());\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-127)\n// jsdoc-ignore-end\n/**\n * 已撤回类型消息，当消息被撤回时，SDK 会使用该类型的消息替代原始消息\n * @extends TypedMessage\n */\nclass RecalledMessage extends TypedMessage {\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，值为 <code>[该消息已撤回]</code>\n   * @type {String}\n   * @readonly\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get summary() {\n    return '[该消息已撤回]';\n  }\n}\nexport default RecalledMessage;\n","import EventEmitter from 'eventemitter3';\nimport isEmpty from 'lodash/isEmpty';\nimport isPlainObject from 'lodash/isPlainObject';\nimport cloneDeep from 'lodash/cloneDeep';\nimport d from 'debug';\nimport { decodeDate, keyRemap, union, difference, internal, setValue } from './utils';\nimport { applyDecorators } from './plugin';\nimport IMClient from './im-client';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  DirectCommand,\n  LogsCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport runSignatureFactory from './signature-factory-runner';\nimport { createError } from './error';\nimport Message, { MessageStatus } from './messages/message';\nimport RecalledMessage from './messages/recalled-message';\n\nconst debug = d('LC:Conversation');\n\nexport default class Conversation extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的对话\n   * @extends EventEmitter\n   */\n  constructor({\n    id,\n    creator,\n    createdAt,\n    updatedAt,\n    lastMessageAt,\n    lastMessage,\n    mutedMembers = [],\n    members = [],\n    transient = false,\n    system = false,\n    muted = false,\n    // jsdoc-ignore-start\n    ...attributes\n    // jsdoc-ignore-end\n  }, client) {\n    super();\n    Object.assign(this, {\n      /**\n       * 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof Conversation#\n       * @type {String}\n       */\n      id,\n      /**\n       * 对话创建者\n       * @memberof Conversation#\n       * @type {String}\n       */\n      creator,\n      /**\n       * 对话创建时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      createdAt,\n      /**\n       * 对话更新时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      updatedAt,\n      /**\n       * 最后一条消息时间\n       * @memberof Conversation#\n       * @type {?Date}\n       */\n      lastMessageAt,\n      /**\n       * 最后一条消息\n       * @memberof Conversation#\n       * @type {?Message}\n       */\n      lastMessage,\n      /**\n       * 对该对话设置了静音的用户列表\n       * @memberof Conversation#\n       * @type {?String[]}\n       */\n      mutedMembers,\n      /**\n       * 参与该对话的用户列表\n       * @memberof Conversation#\n       * @type {String[]}\n       */\n      members,\n      /**\n       * 暂态对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      transient,\n      /**\n       * 系统对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       * @since 3.3\n       */\n      system,\n      /**\n       * 当前用户静音该对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      muted,\n    });\n    this._attributes = attributes;\n    this._reset();\n    this.members = Array.from(new Set(this.members));\n    Object.assign(internal(this), {\n      messagesWaitingForReceipt: {},\n      lastDeliveredAt: null,\n      lastReadAt: null,\n      unreadMessagesCount: 0,\n    });\n    if (client instanceof IMClient) {\n      this._client = client;\n    } else {\n      throw new TypeError('Conversation must be initialized with a client');\n    }\n    [\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'receipt',\n      'lastdeliveredatupdate',\n      'lastreadatupdate',\n      'messagerecall',\n      'messageupdate',\n    ].forEach(event => this.on(\n      event,\n      (...payload) => this._debug(`${event} event emitted. %O`, payload)\n    ));\n    // onConversationCreate hook\n    applyDecorators(this._client._plugins.onConversationCreate, this);\n  }\n\n  set unreadMessagesCount(value) {\n    if (value !== this.unreadMessagesCount) {\n      internal(this).unreadMessagesCount = value;\n      this._client.emit('unreadmessagescountupdate', [this]);\n    }\n  }\n  /**\n   * 当前用户在该对话的未读消息数\n   * @type {Number}\n   */\n  get unreadMessagesCount() {\n    return internal(this).unreadMessagesCount;\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n  get createdAt() {\n    return this._createdAt;\n  }\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n  get updatedAt() {\n    return this._updatedAt;\n  }\n  set lastMessageAt(value) {\n    const time = decodeDate(value);\n    if (time <= this._lastMessageAt) return;\n    this._lastMessageAt = time;\n  }\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n  /**\n   * 最后消息送达时间，常用来实现消息的「已送达」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastDeliveredAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastDeliveredAt;\n  }\n  _setLastDeliveredAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastDeliveredAt)) {\n      internal(this).lastDeliveredAt = date;\n      /**\n       * 最后消息送达时间更新\n       * @event Conversation#lastdeliveredatupdate\n       * @since 3.4.0\n       */\n      this.emit('lastdeliveredatupdate');\n    }\n  }\n  /**\n   * 最后消息被阅读时间，常用来实现发送消息的「已读」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastReadAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastReadAt;\n  }\n  _setLastReadAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastReadAt)) {\n      internal(this).lastReadAt = date;\n      /**\n       * 最后消息被阅读时间更新\n       * @event Conversation#lastreadatupdate\n       * @since 3.4.0\n       */\n      this.emit('lastreadatupdate');\n    }\n  }\n\n  /**\n   * 对话额外属性，对应 _Conversation 表中的 attr\n   * @type {Object}\n   * @deprecated Use {@link Conversation#get conversation.get('attr')},\n   * {@link Conversation#set conversation.set('attr', value)} instead\n   */\n  get attributes() {\n    console.warn('DEPRECATION Conversation.attributes: Use conversation.get(\\'attr\\') instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    return this.get('attr');\n  }\n  set attributes(value) {\n    console.warn('DEPRECATION Conversation.attributes: Use conversation.set(\\'attr\\', value) instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    this.set('attr', value);\n  }\n  /**\n   * 设置对话额外属性\n   * @param {Object} map    key-value 对\n   * @param {Boolean} [assign=false] 使用 Object.assign 更新属性，而不是替换整个 attributes\n   * @return {Conversation} self\n   * @deprecated Use {@link Conversation#set} instead. See {@link https://url.leanapp.cn/DeprecateAttributes} for more details.\n   */\n  setAttributes(map, assign = false) {\n    console.warn('DEPRECATION Conversation#setAttributes: Use conversation.set() instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    this._debug(`set attributes: value=${JSON.stringify(map)}, assign=${assign}`);\n    if (!isPlainObject(map)) {\n      throw new TypeError('attributes must be a plain object');\n    }\n    if (!assign) {\n      this.set('attr', map);\n    } else {\n      Object.keys(map).forEach(key => this.setAttribute(key, map[key]));\n    }\n    return this;\n  }\n  /**\n   * 设置对话额外属性\n   * @param {String} key\n   * @param {Any} value\n   * @return {Conversation} self\n   * @deprecated Use {@link Conversation#set conversation.set('attr.key', value)} instead\n   */\n  setAttribute(key, value) {\n    console.warn('DEPRECATION Conversation#setAttribute: Use conversation.set(\\'attr.key\\', value) instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    return this.set(`attr.${key}`, value);\n  }\n  /**\n   * 对话名字，对应 _Conversation 表中的 name\n   * @type {String}\n   */\n  get name() {\n    return this.get('name');\n  }\n  set name(value) {\n    this.set('name', value);\n  }\n  /**\n   * 设置对话名字\n   * @param {String} value\n   * @return {Conversation} self\n   * @deprecated Use {@link Conversation#set conversation.set('name', value)} instead\n   */\n  setName(value) {\n    console.warn('DEPRECATION Conversation#setName: Use conversation.set(\\'name\\', value) instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    return this.set('name', value);\n  }\n\n  /**\n   * 获取对话的自定义属性\n   * @since 3.2.0\n   * @param  {String} key key 属性的键名，'x' 对应 Conversation 表中的 x 列\n   * @return {Any} 属性的值\n   */\n  get(key) {\n    return internal(this).currentAttributes[key];\n  }\n\n  /**\n   * 设置对话的自定义属性\n   * @since 3.2.0\n   * @param {String} key 属性的键名，'x' 对应 Conversation 表中的 x 列，支持使用 'x.y.z' 来修改对象的部分字段。\n   * @param {Any} value 属性的值\n   * @return {Conversation} self\n   * @example\n   *\n   * // 设置对话的 color 属性\n   * conversation.set('color', {\n   *   text: '#000',\n   *   background: '#DDD',\n   * });\n   * // 设置对话的 color.text 属性\n   * conversation.set('color.text', '#333');\n   */\n  set(key, value) {\n    this._debug(`set [${key}]: ${value}`);\n    const pendingAttributes = internal(this).pendingAttributes;\n    const pendingKeys = Object.keys(pendingAttributes);\n    // suppose pendingAttributes = { 'a.b': {} }\n    // set 'a' or 'a.b': delete 'a.b'\n    const re = new RegExp(`^${key}`);\n    const childKeys = pendingKeys.filter(re.test.bind(re));\n    childKeys.forEach((k) => {\n      delete pendingAttributes[k];\n    });\n    if (childKeys.length) {\n      pendingAttributes[key] = value;\n    } else {\n      // set 'a.c': nothing to do\n      // set 'a.b.c.d': assign c: { d: {} } to 'a.b'\n      // CAUTION: non-standard API, provided by core-js\n      const parentKey = Array.find(pendingKeys, k => key.indexOf(k) === 0); // 'a.b'\n      if (parentKey) {\n        setValue(pendingAttributes[parentKey], key.slice(parentKey.length + 1), value);\n      } else {\n        pendingAttributes[key] = value;\n      }\n    }\n    // build currentAttributes\n    internal(this).currentAttributes = Object.keys(pendingAttributes)\n      .reduce(\n        (target, k) => setValue(target, k, pendingAttributes[k]),\n        cloneDeep(this._attributes)\n      );\n    return this;\n  }\n\n  _reset() {\n    internal(this).pendingAttributes = {};\n    internal(this).currentAttributes = this._attributes;\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<Conversation>} self\n   */\n  save() {\n    this._debug('save');\n    const attr = internal(this).pendingAttributes;\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return Promise.resolve(this);\n    }\n    this._debug('attr: %O', attr);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(attr),\n      }),\n    });\n    return this\n      ._send(new GenericCommand({\n        op: 'update',\n        convMessage,\n      }))\n      .then((resCommand) => {\n        this.updatedAt = resCommand.convMessage.udate;\n        this._attributes = internal(this).currentAttributes;\n        internal(this).pendingAttributes = {};\n        return this;\n      });\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<Conversation>} self\n   */\n  fetch() {\n    return this\n      ._client\n      .getQuery()\n      .equalTo('objectId', this.id)\n      .find()\n      .then(() => this);\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<Conversation>} self\n   */\n  mute() {\n    this._debug('mute');\n    return this._send(new GenericCommand({\n      op: 'mute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = true;\n        this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<Conversation>} self\n   */\n  unmute() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'unmute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = false;\n        this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  count() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'count',\n    })).then(resCommand => resCommand.convMessage.count);\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return Promise.resolve(\n      new GenericCommand({\n        op: 'add',\n        convMessage,\n      })\n    ).then((command) => {\n      if (this._client.options.conversationSignatureFactory) {\n        const params = [this.id, this._client.id, clientIds.sort(), 'add'];\n        return runSignatureFactory(this._client.options.conversationSignatureFactory, params)\n          .then((signatureResult) => {\n            Object.assign(command.convMessage, keyRemap({\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            }, signatureResult));\n            return command;\n          });\n      }\n      return command;\n    }).then(\n      this._send.bind(this)\n    ).then(() => {\n      if (!this.transient && !this.system) {\n        this.members = union(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return Promise.resolve(\n      new GenericCommand({\n        op: 'remove',\n        convMessage,\n      })\n    ).then((command) => {\n      if (this._client.options.conversationSignatureFactory) {\n        const params = [this.id, this._client.id, clientIds.sort(), 'remove'];\n        return runSignatureFactory(this._client.options.conversationSignatureFactory, params)\n          .then((signatureResult) => {\n            Object.assign(command.convMessage, keyRemap({\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            }, signatureResult));\n            return command;\n          });\n      }\n      return command;\n    }).then(\n      this._send.bind(this)\n    ).then(() => {\n      if (!this.transient && !this.system) {\n        this.members = difference(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<Conversation>} self\n   */\n  join() {\n    this._debug('join');\n    return this.add(this._client.id);\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<Conversation>} self\n   */\n  quit() {\n    this._debug('quit');\n    return this.remove(this._client.id);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @param {Object} [options] since v3.3.0，发送选项\n   * @param {Boolean} [options.transient] since v3.3.1，是否作为暂态消息发送\n   * @param {Boolean} [options.receipt] 是否需要送达回执，仅在普通对话中有效\n   * @param {Boolean} [options.will] since v3.4.0，是否指定该消息作为「掉线消息」发送，\n   * 「掉线消息」会延迟到当前用户掉线后发送，常用来实现「下线通知」功能\n   * @param {MessagePriority} [options.priority] 消息优先级，仅在暂态对话中有效，\n   * see: {@link module:leancloud-realtime.MessagePriority MessagePriority}\n   * @param {Object} [options.pushData] 消息对应的离线推送内容，如果消息接收方不在线，会推送指定的内容。其结构说明参见: {@link https://url.leanapp.cn/pushData 推送消息内容}\n   * @return {Promise.<Message>} 发送的消息\n   */\n  send(message, options) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    const _options = Object.assign({}, options);\n    // support typo reciept option\n    if (_options.reciept !== undefined) {\n      console.warn('DEPRECATION Conversation#send options.reciept: please use receipt option instead');\n      if (_options.receipt === undefined) _options.receipt = _options.reciept;\n    }\n    const {\n      transient,\n      receipt,\n      priority,\n      pushData,\n      will,\n    } = Object.assign(\n      // support deprecated attribute: message.needReceipt\n      {\n        transient: message.transient,\n        receipt: message.needReceipt,\n      },\n      // support Message static property: sendOptions\n      message.constructor.sendOptions,\n      _options\n    );\n    if (receipt) {\n      if (this.transient) {\n        console.warn('receipt option is ignored as the conversation is transient.');\n      } else if (transient) {\n        console.warn('receipt option is ignored as the message is sent transiently.');\n      } else if (this.members.length > 2) {\n        console.warn('receipt option is recommended to be used in one-on-one conversation.'); // eslint-disable-line max-len\n      }\n    }\n    if (priority && !this.transient) {\n      console.warn('priority option is ignored as the conversation is not transient.');\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    message._setStatus(MessageStatus.SENDING);\n    let msg = message.toJSON();\n    if (typeof msg !== 'string') {\n      msg = JSON.stringify(msg);\n    }\n    let sendPromise = this._send(new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        cid: this.id,\n        r: receipt,\n        transient,\n        dt: message.id,\n        pushData: JSON.stringify(pushData),\n        will,\n      }),\n      priority,\n    }), !transient);\n    if (!transient) {\n      sendPromise = sendPromise.then((resCommand) => {\n        const {\n          ackMessage: {\n            uid,\n            t,\n            code,\n            reason,\n            appCode,\n            },\n          } = resCommand;\n        if (code !== null) {\n          throw createError({\n            code, reason, appCode,\n          });\n        }\n        Object.assign(message, {\n          id: uid,\n          timestamp: new Date(t.toNumber()),\n        });\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n      });\n    }\n    return sendPromise.then(() => {\n      message._setStatus(MessageStatus.SENT);\n      if (receipt) {\n        internal(this).messagesWaitingForReceipt[message.id] = message;\n      }\n      return message;\n    }, (error) => {\n      message._setStatus(MessageStatus.FAILED);\n      throw error;\n    });\n  }\n\n  _update(message, newMessage, recall) {\n    this._debug('patch %O %O %O', message, newMessage, recall);\n    if (message instanceof Message) {\n      if (message.from !== this._client.id) {\n        throw new Error('Updating message from others is not allowed');\n      }\n      if (message.status !== MessageStatus.SENT && message.status !== MessageStatus.DELIVERED) {\n        throw new Error('Message is not sent');\n      }\n    } else if (!(message.id && message.timestamp)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    let data = null;\n    if (!recall) {\n      data = newMessage.toJSON();\n      if (typeof data !== 'string') {\n        data = JSON.stringify(data);\n      }\n    }\n    return this._send(new GenericCommand({\n      cmd: CommandType.patch,\n      op: OpType.modify,\n      patchMessage: new PatchCommand({\n        patches: [new PatchItem({\n          cid: this.id,\n          mid: message.id,\n          timestamp: Number(message.timestamp),\n          recall,\n          data,\n        })],\n        lastPatchTime: this._client._lastPatchTime,\n      }),\n    })).then(() => {\n      const {\n        id, cid, timestamp, from, _status,\n      } = message;\n      Object.assign(newMessage, {\n        id, cid, timestamp, from, _status,\n      });\n      if (this.lastMessage.id === newMessage.id) {\n        this.lastMessage = newMessage;\n      }\n      return newMessage;\n    });\n  }\n\n  /**\n   * 修改已发送的消息\n   * @param {AVMessage} message 要修改的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @param {AVMessage} newMessage 新的消息\n   */\n  update(message, newMessage) {\n    if (!(newMessage instanceof Message)) {\n      throw new TypeError(`${newMessage} is not a Message`);\n    }\n    return this._update(message, newMessage, false);\n  }\n\n  /**\n   * 撤回已发送的消息\n   * @param {AVMessage} message 要撤回的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   */\n  recall(message) {\n    return this._update(message, new RecalledMessage(), true);\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] 限制查询结果为大于这个该时间之前的消息\n   * @param  {String} [options.afterMessageId] 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  queryMessages(options = {}) {\n    this._debug('query messages %O', options);\n    if (options.beforeMessageId && !options.beforeTime) {\n      throw new Error('query option beforeMessageId must be used with option beforeTime');\n    }\n    if (options.afterMessageId && !options.afterTime) {\n      throw new Error('query option afterMessageId must be used with option afterTime');\n    }\n    const conditions = keyRemap({\n      beforeTime: 't',\n      beforeMessageId: 'mid',\n      afterTime: 'tt',\n      afterMessageId: 'tmid',\n      limit: 'l',\n    }, options);\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    return this._send(new GenericCommand({\n      cmd: 'logs',\n      logsMessage: new LogsCommand(\n        Object.assign(conditions, {\n          cid: this.id,\n        })\n      ),\n    })).then(resCommand =>\n      Promise.all(resCommand.logsMessage.logs.map(({\n        msgId,\n        timestamp,\n        patchTimestamp,\n        from,\n        ackAt,\n        readAt,\n        data,\n      }) =>\n        this._client._messageParser.parse(data).then((message) => {\n          const messageProps = {\n            id: msgId,\n            cid: this.id,\n            timestamp: new Date(timestamp.toNumber()),\n            from,\n            deliveredAt: ackAt,\n          };\n          if (patchTimestamp) {\n            messageProps.updatedAt = new Date(patchTimestamp.toNumber());\n          }\n          Object.assign(message, messageProps);\n          let status = MessageStatus.SENT;\n          if (this.members.length === 2) {\n            if (ackAt) status = MessageStatus.DELIVERED;\n            if (ackAt) this._setLastDeliveredAt(ackAt);\n            if (readAt) this._setLastReadAt(readAt);\n          }\n          message._setStatus(status);\n          return message;\n        })\n      ))\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            beforeTime,\n            beforeMessageId,\n          });\n        } else {\n          promise = promise.then((prevMessages) => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              beforeTime: prevMessages[0].timestamp,\n              beforeMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<Conversation>} self\n   */\n  read() {\n    this.unreadMessagesCount = 0;\n    // 跳过暂态会话\n    if (this.transient) return Promise.resolve(this);\n    const client = this._client;\n    if (!internal(client).readConversationsBuffer) {\n      internal(client).readConversationsBuffer = new Set();\n    }\n    internal(client).readConversationsBuffer.add(this);\n    client._doSendRead();\n    return Promise.resolve(this);\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @deprecated in favor of {@link Conversation#read}\n   * @return {Promise.<Conversation>} self\n   */\n  markAsRead() {\n    console.warn('DEPRECATION Conversation#markAsRead: Use Conversation#read instead.');\n    return this.read();\n  }\n\n  _handleReceipt({ messageId, timestamp, read }) {\n    if (read) {\n      this._setLastReadAt(timestamp);\n    } else {\n      this._setLastDeliveredAt(timestamp);\n    }\n    const { messagesWaitingForReceipt } = internal(this);\n    const message = messagesWaitingForReceipt[messageId];\n    if (!message) return;\n    message._setStatus(MessageStatus.DELIVERED);\n    message.deliveredAt = timestamp;\n    delete messagesWaitingForReceipt[messageId];\n    /**\n     * 消息已送达。只有在发送时设置了需要回执的情况下才会收到送达回执，该回执并不代表用户已读。\n     * @event Conversation#receipt\n     * @deprecated use {@link Conversation#event:lastdeliveredatupdate}\n     * and {@link Conversation#event:lastreadatupdate} instead\n     * @since 3.2.0\n     * @param {Object} payload\n     * @param {Message} payload.message 送达的消息\n     */\n    this.emit('receipt', { message });\n  }\n\n  /**\n   * 更新对话的最新回执时间戳（lastDeliveredAt、lastReadAt）\n   * @since 3.4.0\n   * @return {Promise.<Conversation>} this\n   */\n  fetchReceiptTimestamps() {\n    return this._send(new GenericCommand({\n      op: 'max_read',\n    })).then(({\n      convMessage: {\n        maxReadTimestamp,\n        maxAckTimestamp,\n      },\n    }) => {\n      this._setLastDeliveredAt(maxAckTimestamp);\n      this._setLastReadAt(maxReadTimestamp);\n      return this;\n    });\n  }\n\n  _fetchAllReceiptTimestamps() {\n    const convMessage = new ConvCommand({\n      queryAllMembers: true,\n    });\n    return this._send(new GenericCommand({\n      op: 'max_read',\n      convMessage,\n    })).then(({\n      convMessage: {\n        maxReadTuples,\n      },\n    }) => maxReadTuples\n      .filter(maxReadTuple => maxReadTuple.maxAckTimestamp || maxReadTuple.maxReadTimestamp)\n      .map(({ pid, maxAckTimestamp, maxReadTimestamp }) => ({\n        pid,\n        lastDeliveredAt: decodeDate(maxAckTimestamp),\n        lastReadAt: decodeDate(maxReadTimestamp),\n      })));\n  }\n}\n","import d from 'debug';\n\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return [\n      'withLastMessagesRefreshed',\n      'compact',\n    ].reduce(\n      // eslint-disable-next-line no-bitwise\n      (prev, key) => (prev << 1) + (Boolean)(options[key]),\n      0\n    );\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    if (typeof this._order !== 'undefined') json.sort = this._order;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  exists(key) {\n    return this._addCondition(key, '$exists', true);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 不存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  doesNotExist(key) {\n    return this._addCondition(key, '$exists', false);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(key, '$regex', ConversationQuery._quote(subString));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(key, '$regex', `^${ConversationQuery._quote(prefix)}`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(key, '$regex', `${ConversationQuery._quote(suffix)}$`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) { _modifiers += 'i'; }\n    if (regex.multiline) { _modifiers += 'm'; }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * @deprecated 请替换为 {@link ConversationQuery#withLastMessagesRefreshed}\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessages(enabled) {\n    console.warn('DEPRECATION ConversationQuery#withLastMessages: ' +\n      'Use ConversationQuery#withLastMessagesRefreshed instead.');\n    return this.withLastMessagesRefreshed(enabled);\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<Conversation[]>}\n   */\n  find() {\n    return this._client._executeQuery(this);\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport d from 'debug';\nimport Conversation from './conversation';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport { ErrorCode } from './error';\nimport { tap, Expirable, Cache, keyRemap, union, difference, trim, internal, throttle } from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport runSignatureFactory from './signature-factory-runner';\nimport { MessageStatus } from './messages/message';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nexport default class IMClient extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @extends EventEmitter\n   * @param  {String} [id] 客户端 id\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   */\n  constructor(id, options = {}, connection, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(this, {\n      /**\n       * @var id {String} 客户端 id\n       * @memberof IMClient#\n       */\n      id,\n      _connection: connection,\n      options,\n    }, props);\n\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    internal(this).lastPatchTime = Date.now();\n    internal(this)._eventemitter = new EventEmitter();\n    [\n      'invited',\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'unreadmessages',\n      'unreadmessagescountupdate',\n      'close',\n      'conflict',\n      'unhandledmessage',\n      'reconnect',\n      'reconnecterror',\n    ].forEach(event => this.on(\n      event,\n      (...payload) => this._debug(`${event} event emitted. %O`, payload)\n    ));\n    // onIMClientCreate hook\n    applyDecorators(this._plugins.onIMClientCreate, this);\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _dispatchCommand(command) {\n    this._debug(trim(command), 'received');\n    switch (command.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(command);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(command);\n      case CommandType.session:\n        return this._dispatchSessionMessage(command);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(command);\n      case CommandType.rcp:\n        return this._dispatchRcpMessage(command);\n      case CommandType.patch:\n        return this._dispatchPatchMessage(command);\n      default:\n        this.emit('unhandledmessage', command);\n        return Promise.resolve();\n    }\n  }\n\n  _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: {\n        code, reason,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        if (code === ErrorCode.SESSION_CONFLICT) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#conflict\n           */\n          return this.emit('conflict', {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#close\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit('close', {\n          code, reason,\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized session command'));\n    }\n  }\n\n  _dispatchUnreadMessage({\n    unreadMessage: {\n      convs,\n      notifTime,\n    },\n  }) {\n    internal(this).lastUnreadNotifTime = notifTime;\n    // ensure all converstions are cached\n    return this.getConversations(convs.map(conv => conv.cid)).then(() =>\n      // update conversations data\n      Promise.all(convs.map(({\n          cid,\n          unread,\n          mid,\n          timestamp: ts,\n          from,\n          data,\n          patchTimestamp,\n        }) => this.getConversation(cid).then((conversation) => {\n          // deleted conversation\n          if (!conversation) return null;\n          let timestamp;\n          if (ts) {\n            timestamp = new Date(ts.toNumber());\n            conversation.lastMessageAt = timestamp; // eslint-disable-line no-param-reassign\n          }\n          return (mid ? this._messageParser.parse(data).then((message) => {\n            const messageProps = {\n              id: mid,\n              cid,\n              timestamp,\n              from,\n            };\n            if (patchTimestamp) {\n              messageProps.updatedAt = new Date(patchTimestamp.toNumber());\n            }\n            Object.assign(message, messageProps);\n            conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n          }) : Promise.resolve()).then(() => {\n            const countNotUpdated = unread === internal(conversation).unreadMessagesCount;\n            if (countNotUpdated) return null; // to be filtered\n            // manipulate internal property directly to skip unreadmessagescountupdate event\n            internal(conversation).unreadMessagesCount = unread;\n            /**\n             * 未读消息数目更新\n             * @event IMClient#unreadmessages\n             * @deprecated 请使用新的未读消息数目批量更新事件 {@link IMClient#event:unreadmessagescountupdate}\n             * @param {Object} payload\n             * @param {Number} payload.count 未读消息数\n             * @param {String} [payload.lastMessageId] 最新一条未读消息 id\n             * @param {Date} [payload.lastMessageTimestamp] 最新一条未读消息时间戳\n             * @param {Conversation} conversation 未读消息数目有更新的对话\n             */\n            this.emit('unreadmessages', {\n              count: unread,\n              lastMessageId: mid,\n              lastMessageTimestamp: timestamp,\n            }, conversation);\n            return conversation;\n          });\n        })\n      // filter conversations without unread count update\n      )).then(conversations => conversations.filter(conversation => conversation))\n    ).then((conversations) => {\n      if (conversations.length) {\n        /**\n         * 未读消息数目更新\n         * @event IMClient#unreadmessagescountupdate\n         * @since 3.4.0\n         * @param {Conversation[]} conversations 未读消息数目有更新的对话列表\n         */\n        this.emit('unreadmessagescountupdate', conversations);\n      }\n    });\n  }\n\n  _dispatchRcpMessage(message) {\n    const {\n      rcpMessage,\n      rcpMessage: {\n        read,\n      },\n    } = message;\n    const conversationId = rcpMessage.cid;\n    const messageId = rcpMessage.id;\n    const timestamp = new Date(rcpMessage.t.toNumber());\n    const conversation = this._conversationCache.get(conversationId);\n    // conversation not cached means the client does not send the message\n    // during this session\n    if (!conversation) return;\n    conversation._handleReceipt({ messageId, timestamp, read });\n  }\n\n  _dispatchPatchMessage({\n      patchMessage: {\n        patches,\n      },\n    }) {\n    // ensure all converstions are cached\n    return this.getConversations(patches.map(patch => patch.cid)).then(() =>\n      Promise.all(patches.map(({\n        cid, mid, timestamp, recall, data, patchTimestamp, from,\n      }) =>\n        this.getConversation(cid).then((conversation) => {\n          // deleted conversation\n          if (!conversation) return null;\n          return this._messageParser.parse(data).then((message) => {\n            const patchTime = patchTimestamp.toNumber();\n            const messageProps = {\n              id: mid,\n              cid,\n              timestamp: new Date(timestamp.toNumber()),\n              updatedAt: new Date(patchTime),\n              from,\n            };\n            Object.assign(message, messageProps);\n            message._setStatus(MessageStatus.SENT);\n            if (internal(this).lastPatchTime < patchTime) {\n              internal(this).lastPatchTime = patchTime;\n            }\n            // update conversation lastMessage\n            if (conversation.lastMessage && conversation.lastMessage.id === mid) {\n              conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n            }\n            if (recall) {\n              /**\n               * 消息被撤回\n               * @event IMClient#messagerecall\n               * @param {AVMessage} message 被撤回的消息\n               * @param {Conversation} conversation 消息所在的会话\n               */\n              this.emit('messagerecall', message, conversation);\n              /**\n               * 消息被撤回\n               * @event Conversation#messagerecall\n               * @param {AVMessage} message 被撤回的消息\n               */\n              conversation.emit('messagerecall', message);\n            } else {\n              /**\n               * 消息被修改\n               * @event IMClient#messageupdate\n               * @param {AVMessage} message 被修改的消息\n               * @param {Conversation} conversation 消息所在的会话\n               */\n              this.emit('messageupdate', message, conversation);\n              /**\n               * 消息被修改\n               * @event Conversation#messageupdate\n               * @param {AVMessage} message 被修改的消息\n               */\n              conversation.emit('messageupdate', message);\n            }\n          });\n        })\n      ))\n    );\n  }\n\n  _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: {\n        initBy, m,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.joined: {\n        return this.getConversation(convMessage.cid).then((conversation) => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = union(conversation.members, [this.id]);\n          }\n          const payload = {\n            invitedBy: initBy,\n          };\n          /**\n           * 当前用户被添加至某个对话\n           * @event IMClient#invited\n           * @param {Object} payload\n           * @param {String} payload.invitedBy 邀请者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('invited', payload, conversation);\n          /**\n           * 当前用户被添加至当前对话\n           * @event Conversation#invited\n           * @param {Object} payload\n           * @param {String} payload.invitedBy 该移除操作的发起者 id\n           */\n          conversation.emit('invited', payload);\n        });\n      }\n      case OpType.left: {\n        return this.getConversation(convMessage.cid).then((conversation) => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = difference(conversation.members, [this.id]);\n          }\n          const payload = {\n            kickedBy: initBy,\n          };\n          /**\n           * 当前用户被从某个对话中移除\n           * @event IMClient#kicked\n           * @param {Object} payload\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('kicked', payload, conversation);\n          /**\n           * 当前用户被从当前对话中移除\n           * @event Conversation#kicked\n           * @param {Object} payload\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           */\n          conversation.emit('kicked', payload);\n        });\n      }\n      case OpType.members_joined: {\n        return this.getConversation(convMessage.cid).then((conversation) => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = union(conversation.members, convMessage.m);\n          }\n          const payload = {\n            invitedBy: initBy,\n            members: m,\n          };\n          /**\n           * 有用户被添加至某个对话\n           * @event IMClient#membersjoined\n           * @param {Object} payload\n           * @param {String[]} payload.members 被添加的用户 id 列表\n           * @param {String} payload.invitedBy 邀请者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('membersjoined', payload, conversation);\n          /**\n           * 有成员被添加至当前对话\n           * @event Conversation#membersjoined\n           * @param {Object} payload\n           * @param {String[]} payload.members 被添加的成员 id 列表\n           * @param {String} payload.invitedBy 邀请者 id\n           */\n          conversation.emit('membersjoined', payload);\n        });\n      }\n      case OpType.members_left: {\n        return this.getConversation(convMessage.cid).then((conversation) => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = difference(conversation.members, convMessage.m);\n          }\n          const payload = {\n            kickedBy: initBy,\n            members: m,\n          };\n          /**\n           * 有成员被从某个对话中移除\n           * @event IMClient#membersleft\n           * @param {Object} payload\n           * @param {String[]} payload.members 被移除的成员 id 列表\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('membersleft', payload, conversation);\n          /**\n           * 有成员被从当前对话中移除\n           * @event Conversation#membersleft\n           * @param {Object} payload\n           * @param {String[]} payload.members 被移除的成员 id 列表\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           */\n          conversation.emit('membersleft', payload);\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized conversation command'));\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id, cid, fromPeerId, timestamp, transient, patchTimestamp,\n      },\n    } = originalMessage;\n    return Promise.all([\n      this.getConversation(directMessage.cid),\n      this._messageParser.parse(directMessage.msg),\n    ]).then(([conversation, message]) => {\n      // deleted conversation\n      if (!conversation) return undefined;\n      const messageProps = {\n        id,\n        cid,\n        timestamp: new Date(timestamp.toNumber()),\n        from: fromPeerId,\n        transient,\n      };\n      if (patchTimestamp) {\n        messageProps.updatedAt = new Date(patchTimestamp.toNumber());\n      }\n      Object.assign(message, messageProps);\n      message._setStatus(MessageStatus.SENT);\n      return this._dispatchParsedMessage(message, conversation);\n    });\n  }\n\n  _dispatchParsedMessage(message, conversation) {\n    // beforeMessageDispatch hook\n    return applyDispatcher(this._plugins.beforeMessageDispatch, [message, conversation])\n      .then((shouldDispatch) => {\n        if (shouldDispatch === false) return;\n        conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n        conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n        // filter outgoing message sent from another device\n        if (message.from !== this.id) {\n          conversation.unreadMessagesCount += 1; // eslint-disable-line no-param-reassign\n          if (!(message.transient || conversation.transient)) {\n            this._sendAck(message);\n          }\n        }\n        /**\n         * 当前用户收到消息\n         * @event IMClient#message\n         * @param {Message} message\n         * @param {Conversation} conversation 收到消息的对话\n         */\n        this.emit('message', message, conversation);\n        /**\n         * 当前对话收到消息\n         * @event Conversation#message\n         * @param {Message} message\n         */\n        conversation.emit('message', message);\n      });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for %O', message);\n    const { cid } = message;\n    if (!cid) {\n      throw new Error('missing cid');\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    return this._doSendAck();\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendAck() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    this._debug('do send ack %O', this._ackMessageBuffer);\n    Promise.all(Object.keys(this._ackMessageBuffer).map((cid) => {\n      const convAckMessages = this._ackMessageBuffer[cid];\n      const timestamps = convAckMessages.map(message => message.timestamp);\n      const command = new GenericCommand({\n        cmd: 'ack',\n        ackMessage: new AckCommand({\n          cid,\n          fromts: Math.min.apply(null, timestamps),\n          tots: Math.max.apply(null, timestamps),\n        }),\n      });\n      delete this._ackMessageBuffer[cid];\n      return this._send(command, false).catch((error) => {\n        this._debug('send ack failed: %O', error);\n        this._ackMessageBuffer[cid] = convAckMessages;\n      });\n    }));\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    const {\n      lastUnreadNotifTime,\n      lastPatchTime,\n    } = internal(this);\n    return Promise\n      .resolve(new GenericCommand({\n        cmd: 'session',\n        op: 'open',\n        appId,\n        sessionMessage: new SessionCommand({\n          ua: `js/${VERSION}`,\n          r: isReconnect,\n          lastUnreadNotifTime,\n          lastPatchTime,\n          configBitmap: 1,\n        }),\n      }))\n      .then((command) => {\n        if (isReconnect) {\n          // if sessionToken is not expired, skip signature/tag/deviceId\n          const sessionToken = internal(this).sessionToken;\n          if (sessionToken) {\n            const value = sessionToken.value;\n            if (value && value !== Expirable.EXPIRED) {\n              Object.assign(command.sessionMessage, {\n                st: value,\n              });\n              return command;\n            }\n          }\n        }\n        Object.assign(command.sessionMessage, trim({\n          tag,\n          deviceId,\n        }));\n        if (this.options.signatureFactory) {\n          return runSignatureFactory(this.options.signatureFactory, [this.id])\n            .then((signatureResult) => {\n              Object.assign(command.sessionMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then((resCommand) => {\n        const {\n          peerId,\n          sessionMessage: {\n            st: token,\n            stTtl: tokenTTL,\n          },\n        } = resCommand;\n        if (!peerId) {\n          console.warn('Unexpected session opened without peerId.');\n          return;\n        }\n        this.id = peerId;\n        if (token) {\n          internal(this).sessionToken = new Expirable(token, tokenTTL * 1000);\n        }\n      }, (error) => {\n        if (error.code === ErrorCode.SESSION_TOKEN_EXPIRED) {\n          if (internal(this).sessionToken === undefined) {\n            // let it fail if sessoinToken not cached but command rejected as token expired\n            // to prevent session openning flood\n            throw new Error('Unexpected session expiration');\n          }\n          debug('Session token expired, reopening');\n          delete internal(this).sessionToken;\n          return this._open(appId, tag, deviceId, isReconnect);\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  close() {\n    this._debug('close session');\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'close',\n    });\n    return this._send(command).then(\n      () => {\n        internal(this)._eventemitter.emit('close', {\n          code: 0,\n        });\n        this.emit('close', {\n          code: 0,\n        });\n      }\n    );\n  }\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    return this._send(command)\n      .then(resCommand => resCommand.sessionMessage.onlineSessionPeerIds);\n  }\n\n  /**\n   * 获取某个特定的对话\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<Conversation>} 如果 id 对应的对话不存在则返回 null\n   */\n  getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return Promise.resolve(cachedConversation);\n      }\n    }\n    return this\n      .getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 通过 id 批量获取某个特定的对话\n   * @since 3.4.0\n   * @param  {String[]} ids 对话 id 列表，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<Conversation[]>} 如果 id 对应的对话不存在则返回 null\n   */\n  getConversations(ids, noCache = false) {\n    const remoteConversationIds =\n      noCache ? ids : ids.filter(id => this._conversationCache.get(id) === null);\n    return (\n      remoteConversationIds.length ?\n      this.getQuery().containedIn('objectId', remoteConversationIds).find() :\n      Promise.resolve()\n    ).then(() => ids.map(id => this._conversationCache.get(id)));\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(queryJSON.where),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    return this\n      ._send(command)\n      .then((resCommand) => {\n        try {\n          return JSON.parse(resCommand.convMessage.results.data);\n        } catch (error) {\n          const commandString = JSON.stringify(trim(resCommand));\n          throw new Error(`Parse query result failed: ${error.message}. Command: ${commandString}`);\n        }\n      })\n      .then(conversations => Promise.all(conversations.map(\n        this._parseConversationFromRawData.bind(this)\n      )))\n      .then(conversations => conversations.map((fetchedConversation) => {\n        let conversation = this._conversationCache.get(fetchedConversation.id);\n        if (!conversation) {\n          conversation = fetchedConversation;\n          this._debug('no match, set cache');\n          this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n        } else {\n          this._debug('update cached conversation');\n          [\n            'creator',\n            'createdAt',\n            'updatedAt',\n            'lastMessageAt',\n            'lastMessage',\n            'mutedMembers',\n            'members',\n            '_attributes',\n            'transient',\n            'muted',\n          ].forEach((key) => {\n            const value = fetchedConversation[key];\n            if (value !== undefined) conversation[key] = value;\n          });\n          conversation._reset();\n        }\n        return conversation;\n      }));\n  }\n\n  _parseConversationFromRawData(rawData) {\n    const data = keyRemap({\n      objectId: 'id',\n      lm: 'lastMessageAt',\n      msg: 'lastMessage',\n      msg_from: 'lastMessageFrom',\n      msg_mid: 'lastMessageId',\n      msg_timestamp: 'lastMessageTimestamp',\n      patch_timestamp: 'lastMessagePatchTimestamp',\n      m: 'members',\n      tr: 'transient',\n      sys: 'system',\n      c: 'creator',\n      mu: 'mutedMembers',\n    }, rawData);\n    return Promise.resolve().then(() => {\n      if (data.lastMessage) {\n        return this._messageParser.parse(data.lastMessage).then(\n          (message) => {\n            /* eslint-disable no-param-reassign */\n            data.lastMessage = message;\n            message.from = data.lastMessageFrom;\n            message.id = data.lastMessageId;\n            message.timestamp = new Date(data.lastMessageTimestamp);\n            if (data.lastMessagePatchTimestamp) {\n              message.updatedAt = new Date(data.lastMessagePatchTimestamp);\n            }\n            message._setStatus(MessageStatus.SENT);\n            delete data.lastMessageFrom;\n            delete data.lastMessageId;\n            delete data.lastMessageTimestamp;\n            delete data.lastMessagePatchTimestamp;\n            /* eslint-enable no-param-reassign */\n          }\n        );\n      }\n      return Promise.resolve();\n    }).then(() => new Conversation(data, this));\n  }\n\n  /**\n   * 创建一个 conversation\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Object} [options.attributes] DEPRECATED: 额外属性，对应 _Conversation 表的 attr 列\n   * @param {Boolean} [options.transient=false] 暂态会话\n   * @param {Boolean} [options.unique=false] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  createConversation(options = {}) {\n    const {\n      members: m,\n      name,\n      attributes,\n      transient,\n      unique,\n      ...properties\n    } = options;\n    if (!(transient || Array.isArray(m))) {\n      throw new TypeError(`conversation members ${m} is not an array`);\n    }\n    let members = new Set(m);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    let attr = properties || {};\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    if (attributes) {\n      console.warn('DEPRECATION createConversation options.attributes param: Use options[propertyName] instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n      attr.attr = attributes;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(attr),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n    };\n\n    return Promise.resolve(\n        new GenericCommand({\n          cmd: 'conv',\n          op: 'start',\n          convMessage: new ConvCommand(startCommandJson),\n        })\n      )\n      .then((command) => {\n        if (this.options.conversationSignatureFactory) {\n          const params = [null, this.id, members, 'create'];\n          return runSignatureFactory(this.options.conversationSignatureFactory, params)\n            .then((signatureResult) => {\n              Object.assign(command.convMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then(resCommand => new Conversation({\n        name,\n        attr: attributes,\n        transient,\n        unique,\n        id: resCommand.convMessage.cid,\n        createdAt: resCommand.convMessage.cdate,\n        updatedAt: resCommand.convMessage.cdate,\n        lastMessageAt: null,\n        creator: this.id,\n        members: transient ? [] : members,\n        ...properties,\n      }, this))\n      .then(tap(conversation =>\n        this._conversationCache.set(conversation.id, conversation)\n      ));\n  }\n\n  /**\n   * 将指定的所有会话标记为已读\n   * @deprecated 请遍历调用 conversations 的 {@link Conversation#read read} 方法\n   * @param {Conversation[]} conversations 指定的会话列表\n   * @return {Promise.<Conversation[]>} conversations 返回输入的会话列表\n   */\n  // eslint-disable-next-line class-methods-use-this\n  markAllAsRead(conversations) {\n    console.warn('DEPRECATION IMClient.markAllAsRead: Use Conversation#read instead.');\n    if (!Array.isArray(conversations)) {\n      throw new TypeError(`${conversations} is not an Array`);\n    }\n    return Promise.all(conversations.map(conversation => conversation.read()));\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendRead() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    const buffer = internal(this).readConversationsBuffer;\n    const conversations = Array.from(buffer);\n    if (!conversations.length) return;\n    const ids = conversations.map((conversation) => {\n      if (!(conversation instanceof Conversation)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    buffer.clear();\n    this._sendReadCommand(conversations).catch((error) => {\n      this._debug('send read failed: %O', error);\n      conversations.forEach(buffer.add.bind(buffer));\n    });\n  }\n  _sendReadCommand(conversations) {\n    return this._send(new GenericCommand({\n      cmd: 'read',\n      readMessage: new ReadCommand({\n        convs: conversations.map(conversation => new ReadTuple({\n          cid: conversation.id,\n          mid: (conversation.lastMessage && conversation.lastMessage.from !== this.id)\n            ? conversation.lastMessage.id : undefined,\n          timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n        })),\n      }),\n    }), false);\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { applyMiddlewares } from './plugin';\n\nconst debug = d('LC:MessageParser');\n\nconst tryParseJson = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(param) {\n    let content;\n    if (typeof param !== 'string') {\n      content = param;\n    } else {\n      try {\n        content = JSON.parse(param);\n      } catch (error) {\n        content = param;\n      }\n    }\n    return fn.call(this, content);\n  };\n};\n\nconst applyPlugins = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(json) {\n    return Promise.resolve(json)\n      .then(applyMiddlewares(this._plugins.beforeMessageParse))\n      .then(decoratedJson => fn.call(this, decoratedJson))\n      .then(applyMiddlewares(this._plugins.afterMessageParse));\n  };\n};\n\nexport default class MessageParser {\n  constructor(plugins = {}) {\n    this._plugins = plugins;\n    this._messageClasses = [];\n  }\n\n  register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.toJSON\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @tryParseJson\n  @applyPlugins\n  // jsdoc-ignore-end\n  parse(content) {\n    debug('parsing message: %O', content);\n    // eslint-disable-next-line no-restricted-syntax\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? Object.assign({}, content) : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result: %O', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/** @module leancloud-realtime */\nimport d from 'debug';\nimport uuid from 'uuid/v4';\nimport IMClient from './im-client';\nimport Conversation from './conversation';\nimport Message, { MessageStatus } from './messages/message';\nimport TextMessage from './messages/text-message';\nimport TypedMessage from './messages/typed-message';\nimport RecalledMessage from './messages/recalled-message';\nimport MessageParser from './message-parser';\nimport { trim, internal, ensureArray } from './utils';\n\nconst debug = d('LC:IMPlugin');\n\n/**\n * 消息优先级枚举\n * @enum {Number}\n * @since 3.3.0\n */\nconst MessagePriority = {\n  /** 高 */\n  HIGH: 1,\n  /** 普通 */\n  NORMAL: 2,\n  /** 低 */\n  LOW: 3,\n};\nObject.freeze(MessagePriority);\n\n/**\n * 为 Conversation 定义一个新属性\n * @param {String} prop 属性名\n * @param {Object} [descriptor] 属性的描述符，参见 {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description getOwnPropertyDescriptor#Description - MDN}，默认为该属性名对应的 Conversation 自定义属性的 getter/setter\n * @returns void\n * @example\n *\n * conversation.get('type');\n * conversation.set('type', 1);\n *\n * // equals to\n * defineConversationProperty('type');\n * conversation.type;\n * conversation.type = 1;\n */\nconst defineConversationProperty = (prop, descriptor = {\n  get() { return this.get(prop); },\n  set(value) { this.set(prop, value); },\n}) => {\n  Object.defineProperty(Conversation.prototype, prop, descriptor);\n};\n\nexport {\n  /**\n   * @see Message\n   */\n  Message,\n  /**\n   * @see TypedMessage\n   */\n  TypedMessage,\n  /**\n   * @see TextMessage\n   */\n  TextMessage,\n  /**\n   * @see RecalledMessage\n   */\n  RecalledMessage,\n  MessagePriority,\n  MessageStatus,\n  defineConversationProperty,\n};\n\nexport {\n  /**\n   * decorator，定义消息类的类型常量\n   * @function\n   * @param {Number} type 自定义类型请使用正整数\n   * @example @messageType(1)\n   * class CustomMessage extends TypedMessage {}\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   //...\n   * }\n   * messageType(1)(CustomMessage);\n   */\n  messageType,\n  /**\n   * decorator，定义消息类的自定义字段\n   * @function\n   * @param {String[]} fields 自定义字段\n   * @example @messageField(['foo'])\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   * }\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   *   //...\n   * }\n   * messageField(['foo'])(CustomMessage);\n   */\n  messageField,\n  IE10Compatible,\n} from './messages/helpers';\n\nconst onRealtimeCreate = (realtime) => {\n  /* eslint-disable no-param-reassign */\n  const deviceId = uuid();\n  realtime._IMClients = {};\n  const messageParser = realtime._messageParser = new MessageParser(realtime._plugins);\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @function register\n   * @memberof Realtime\n   * @instance\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  realtime.register = messageClass =>\n    ensureArray(messageClass).map(messageParser.register.bind(messageParser));\n  realtime.register(ensureArray(realtime._plugins.messageClasses));\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @function createIMClient\n   * @memberof Realtime\n   * @instance\n   * @param  {String} [id] 客户端 id，如果不指定，服务端会随机生成一个\n   * @param  {Object} [clientOptions] 详细参数 @see {@link IMClient}\n   * @param  {String} [tag] 客户端类型标记，以支持单点登录功能\n   * @return {Promise.<IMClient>}\n   */\n  realtime.createIMClient = (id, clientOptions, tag) => {\n    const idIsString = typeof id === 'string';\n    if (idIsString && realtime._IMClients[id] !== undefined) {\n      return Promise.resolve(realtime._IMClients[id]);\n    }\n    const promise = realtime._open().then((connection) => {\n      const client = new IMClient(id, clientOptions, connection, {\n        _messageParser: messageParser,\n        _plugins: realtime._plugins,\n      });\n      connection.on('reconnect', () =>\n        client._open(realtime._options.appId, tag, deviceId, true)\n          /**\n           * 客户端连接恢复正常，该事件通常在 {@link Realtime#event:reconnect} 之后发生\n           * @event IMClient#reconnect\n           * @see Realtime#event:reconnect\n           * @since 3.2.0\n           */\n          /**\n           * 客户端重新登录发生错误（网络连接已恢复，但重新登录错误）\n           * @event IMClient#reconnecterror\n           * @since 3.2.0\n           */\n          .then(\n            () => client.emit('reconnect'),\n            error => client.emit('reconnecterror', error)\n          )\n      );\n      internal(client)._eventemitter.on('close', () => {\n        delete realtime._IMClients[client.id];\n        realtime._deregister(client);\n      }, realtime);\n      return client._open(realtime._options.appId, tag, deviceId)\n        .then(() => {\n          realtime._IMClients[client.id] = client;\n          realtime._register(client);\n          return client;\n        });\n    });\n    if (idIsString) {\n      realtime._IMClients[id] = promise;\n    }\n    return promise;\n  };\n  /* eslint-enable no-param-reassign */\n};\n\nconst beforeCommandDispatch = (command, realtime) => {\n  if (command.peerId === null) return true;\n  const targetClient = realtime._IMClients[command.peerId];\n  if (targetClient) {\n    targetClient._dispatchCommand(command).catch(debug);\n  } else {\n    debug(\n      '[WARN] Unexpected message received without any live client match: %O',\n      trim(command)\n    );\n  }\n  return false;\n};\n\nexport const IMPlugin = {\n  name: 'leancloud-realtime-plugin-im',\n  onRealtimeCreate,\n  beforeCommandDispatch,\n  messageClasses: [\n    Message,\n    RecalledMessage,\n    TextMessage,\n  ],\n};\n","import { Realtime } from './core';\nimport { IMPlugin, defineConversationProperty } from './plugin-im';\n\nRealtime.defineConversationProperty = defineConversationProperty;\nRealtime.__preRegisteredPlugins = [IMPlugin];\n\nexport * from './core';\n\nexport * from './plugin-im';\n"],"names":["module","require","newBuilder","build","messages","push_server","messages2","JsonObjectMessage","UnreadTuple","LogItem","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","MaxReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","PatchCommand","PatchItem","CommandType","OpType","StatusType","global","window","EXPIRED","debug","d","Expirable","value","ttl","_value","expiredAt","Date","now","expired","Cache","name","_map","get","key","cache","set","tryAll","promiseConstructors","promise","length","catch","slice","tap","interceptor","decodeDate","date","__type","iso","toNumber","keyRemap","keymap","obj","reduce","newObj","newKey","isIE10","navigator","userAgent","indexOf","getStaticProperty","klass","property","__proto__","undefined","union","a","b","difference","filter","bSet","has","x","map","internal","object","removeNull","isPlainObject","prop","hasOwnProperty","call","trim","JSON","parse","message","ensureArray","target","Array","isArray","setValue","segs","split","lastSeg","pop","currentTarget","forEach","seg","isWeapp","wx","connectSocket","throttle","descriptor","callback","Error","throttleMeta","propertyMeta","previouseTimestamp","timeout","remainingTime","wait","apply","setTimeout","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","Math","min","pow","attempt","requireConnected","requireConnectedWrapper","is","currentState","current","warn","args","WebSocketPlus","getUrls","protocol","WebSocket","_getUrls","resolve","_protocol","init","_createWs","then","__postponeTimeoutTimer","_postponeTimeoutTimer","bind","addEventListener","__pause","pause","__resume","resume","open","throw","wsUrls","urls","reject","url","ws","binaryType","Buffer","onopen","onerror","onclose","error","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","onbeforeevent","event","from","to","payload","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onpause","onbeforeresume","onreconnect","ondisconnected","delay","__scheduledRetry","retry","onretry","can","reconnect","fail","removeEventListener","_ping","ping","_clearTimeoutTimers","_timeoutTimer","disconnect","_heartbeatTimer","setInterval","addListener","removeListener","code","reason","isFinished","handleClose","send","data","handleMessage","EventEmitter","StateMachine","create","prototype","ErrorCode","result","Number","createError","errorMessage","appCode","detail","err","COMMAND_TIMEOUT","Connection","getUrl","format","version","protocolString","encodeURIComponent","_protocalFormat","_commands","_serialId","command","waitingForRespond","serialId","i","toBase64","toBuffer","toArrayBuffer","TypeError","msg","decode","e","cmd","echo","checkType","param","constructor","middleware","console","_pluginName","applyDecorators","decorators","decorator","applyMiddlewares","middlewares","previousPromise","applyDispatcher","dispatchers","resultPromise","dispatcher","shouldDispatch","pushRouterCache","Realtime","options","appId","_options","process","env","SERVER","_cache","clients","_plugins","__preRegisteredPlugins","plugins","plugin","hook","concat","onRealtimeCreate","_open","_openPromise","noBinary","pushOfflineMessages","connection","_getEndpoints","on","_dispatchCommand","client","isFatal","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","some","errorCode","_fetchEndpointsInfo","info","server","secondary","_fetchPushRouter","region","cachedPushRouter","axios","res","route","pushRouter","push_router_server","ssl","router","_close","cannot","_register","add","_deregister","delete","size","beforeCommandDispatch","_validateSignature","signatureResult","signature","timestamp","nonce","signatureFactory","params","MessageStatus","rMessageStatus","NONE","SENDING","SENT","DELIVERED","READ","FAILED","Message","content","uuid","_setStatus","setNeedReceipt","needReceipt","setTransient","transient","toJSON","status","_status","validate","json","_updatedAt","messageType","type","TYPE","_lctype","_getType","messageField","fields","originalCustomFields","_customFields","IE10Compatible","TypedMessage","_","setText","text","_lctext","getText","setAttributes","attributes","_lcattrs","getAttributes","_getCustomFields","field","customFields","RecalledMessage","Conversation","id","creator","createdAt","updatedAt","lastMessageAt","lastMessage","mutedMembers","members","system","muted","_attributes","_reset","IMClient","_client","_debug","onConversationCreate","_setLastDeliveredAt","lastDeliveredAt","_setLastReadAt","lastReadAt","assign","setAttribute","setName","currentAttributes","pendingAttributes","pendingKeys","re","RegExp","childKeys","test","k","parentKey","cloneDeep","_send","convMessage","cid","save","attr","isEmpty","resCommand","udate","fetch","getQuery","equalTo","find","mute","unmute","count","clientIds","conversationSignatureFactory","sort","runSignatureFactory","remove","join","quit","reciept","receipt","sendOptions","priority","pushData","will","sendPromise","ackMessage","uid","t","messagesWaitingForReceipt","_update","newMessage","recall","patch","modify","_lastPatchTime","update","queryMessages","beforeMessageId","beforeTime","afterMessageId","afterTime","conditions","getTime","tt","all","logsMessage","logs","msgId","patchTimestamp","ackAt","readAt","_messageParser","messageProps","createMessagesIterator","limit","prevMessages","read","unreadMessagesCount","readConversationsBuffer","_doSendRead","markAsRead","_handleReceipt","messageId","deliveredAt","fetchReceiptTimestamps","maxReadTimestamp","maxAckTimestamp","_fetchAllReceiptTimestamps","maxReadTuples","maxReadTuple","pid","_createdAt","time","_lastMessageAt","ConversationQuery","_encode","source","_quote","s","replace","_calculateFlag","prev","Boolean","_where","_extraOptions","_addCondition","condition","_skip","skip","_limit","_order","containsMembers","peerIds","containsAll","withMembers","includeSelf","peerIdsSet","sizeEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","notEqualTo","exists","doesNotExist","containedIn","values","notContainsIn","contains","subString","startsWith","prefix","endsWith","suffix","matches","regex","_modifiers","ignoreCase","multiline","ascending","addAscending","descending","addDescending","withLastMessagesRefreshed","enabled","withLastMessages","compact","_executeQuery","props","_conversationCache","_ackMessageBuffer","lastPatchTime","_eventemitter","onIMClientCreate","conv","_dispatchConvMessage","direct","_dispatchDirectMessage","session","_dispatchSessionMessage","unread","_dispatchUnreadMessage","rcp","_dispatchRcpMessage","_dispatchPatchMessage","sessionMessage","op","closed","SESSION_CONFLICT","unreadMessage","convs","notifTime","lastUnreadNotifTime","getConversations","mid","ts","getConversation","conversation","countNotUpdated","conversations","rcpMessage","conversationId","patches","patchMessage","patchTime","initBy","m","joined","left","members_joined","members_left","originalMessage","directMessage","fromPeerId","_dispatchParsedMessage","beforeMessageDispatch","_sendAck","push","_doSendAck","_connection","convAckMessages","timestamps","max","peerId","tag","deviceId","isReconnect","VERSION","sessionToken","token","st","tokenTTL","stTtl","SESSION_TOKEN_EXPIRED","onlineSessionPeerIds","noCache","cachedConversation","ids","remoteConversationIds","query","queryJSON","where","results","commandString","_parseConversationFromRawData","fetchedConversation","rawData","lastMessageFrom","lastMessageId","lastMessageTimestamp","lastMessagePatchTimestamp","createConversation","unique","properties","startCommandJson","cdate","markAllAsRead","buffer","clear","_sendReadCommand","TextMessage","tryParseJson","fn","wrapper","applyPlugins","beforeMessageParse","decoratedJson","afterMessageParse","MessageParser","_messageClasses","register","messageClass","unshift","Klass","contentCopy","valid","MessagePriority","defineConversationProperty","realtime","_IMClients","messageParser","messageClasses","createIMClient","clientOptions","idIsString","targetClient","IMPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,mBAAA,GAAiBC,cAA0CC,UAA1C,CAAqD,EAArD,EAAyD,QAAzD,EAAmE;eACrE,uBADqE;cAEtE,QAFsE;eAGrE;6BACc;KAJuD;gBAMpE,CACR;gBACY,mBADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SALJ;KAJN,EAaR;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,OAFZ;oBAGY,QAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,gBAHZ;kBAIU;SAzCJ;KAhBN,EA6DR;gBACY,SADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,OAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,OAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,QAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,gBAHZ;kBAIU;SAzCJ;KAhEN,EA6GR;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,mBAFZ;oBAGY,KAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,SAHZ;kBAIU;SAjBJ;KAhHN,EAqIR;gBACY,gBADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,IAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,GAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,UAHZ;kBAIU;SAzCJ,EA2CN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,gBAHZ;kBAIU;SA/CJ,EAiDN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,sBAHZ;kBAIU;SArDJ,EAuDN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,IAHZ;kBAIU;SA3DJ,EA6DN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,OAHZ;kBAIU;SAjEJ,EAmEN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,MAHZ;kBAIU;SAvEJ,EAyEN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SA7EJ,EA+EN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,aAHZ;kBAIU;SAnFJ,EAqFN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,IAHZ;kBAIU;SAzFJ,EA2FN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SA/FJ,EAiGN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,qBAHZ;kBAIU;SArGJ,EAuGN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,eAHZ;kBAIU;SA3GJ,EA6GN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,cAHZ;kBAIU;SAjHJ;KAxIN,EA6PR;gBACY,cADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,MAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,SAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SAvBJ;KAhQN,EA2RR;gBACY,eADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,YAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,SAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,SAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,WAHZ;kBAIU;SAzCJ,EA2CN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,GAHZ;kBAIU;SA/CJ,EAiDN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SArDJ,EAuDN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,IAHZ;kBAIU;SA3DJ,EA6DN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,WAHZ;kBAIU;SAjEJ,EAmEN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,IAHZ;kBAIU;SAvEJ,EAyEN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SA7EJ,EA+EN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,UAHZ;kBAIU;SAnFJ,EAqFN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,MAHZ;kBAIU;SAzFJ,EA2FN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,gBAHZ;kBAIU;SA/FJ;KA9RN,EAiYR;gBACY,YADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,MAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,QAHZ;kBAIU;SAzCJ,EA2CN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,MAHZ;kBAIU;SA/CJ,EAiDN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SArDJ,EAuDN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SA3DJ,EA6DN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,SAHZ;kBAIU;SAjEJ;KApYN,EAycR;gBACY,eADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,OAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SAXJ;KA5cN,EA2dR;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,MAFZ;oBAGY,WAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,QAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,OAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAzCJ,EA2CN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,OAHZ;kBAIU;SA/CJ,EAiDN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,MAHZ;kBAIU;SArDJ,EAuDN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,MAHZ;kBAIU;SA3DJ,EA6DN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,OAHZ;kBAIU;SAjEJ,EAmEN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,OAHZ;kBAIU;SAvEJ,EAyEN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SA7EJ,EA+EN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SAnFJ,EAqFN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SAzFJ,EA2FN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,WAHZ;kBAIU;SA/FJ,EAiGN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,WAHZ;kBAIU;SArGJ,EAuGN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SA3GJ,EA6GN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,UAHZ;kBAIU;SAjHJ,EAmHN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,gBAHZ;kBAIU;SAvHJ,EAyHN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,kBAHZ;kBAIU;SA7HJ,EA+HN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,iBAHZ;kBAIU;SAnIJ,EAqIN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,iBAHZ;kBAIU;SAzIJ,EA2IN;oBACY,UADZ;oBAEY,cAFZ;oBAGY,eAHZ;kBAIU;SA/IJ,EAiJN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SArJJ,EAuJN;oBACY,UADZ;oBAEY,mBAFZ;oBAGY,SAHZ;kBAIU;SA3JJ,EA6JN;oBACY,UADZ;oBAEY,mBAFZ;oBAGY,OAHZ;kBAIU;SAjKJ,EAmKN;oBACY,UADZ;oBAEY,mBAFZ;oBAGY,MAHZ;kBAIU;SAvKJ;KA9dN,EAyoBR;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,GAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,WAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,aAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,UAHZ;kBAIU;SAzCJ;KA5oBN,EAyrBR;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,OAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,IAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAzCJ,EA2CN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,UAHZ;kBAIU;SA/CJ,EAiDN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,QAHZ;kBAIU;SArDJ,EAuDN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,UAHZ;kBAIU;SA3DJ,EA6DN;oBACY,UADZ;oBAEY,SAFZ;oBAGY,MAHZ;kBAIU;SAjEJ;KA5rBN,EAiwBR;gBACY,YADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,IAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,MAHZ;kBAIU;SAvBJ;KApwBN,EA+xBR;gBACY,WADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAjBJ;KAlyBN,EAuzBR;gBACY,cADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,OAFZ;oBAGY,iBAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,kBAHZ;kBAIU;SAjBJ;KA1zBN,EA+0BR;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,WAFZ;oBAGY,OAHZ;kBAIU;SAjBJ;KAl1BN,EAu2BR;gBACY,iBADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,YAFZ;oBAGY,QAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,gBAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAjBJ;KA12BN,EA+3BR;gBACY,eADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,YAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAjBJ;KAl4BN,EAu5BR;gBACY,WADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,KAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,WAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,MAFZ;oBAGY,QAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,gBAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,MAHZ;kBAIU;SAzCJ;KA15BN,EAu8BR;gBACY,cADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,WAFZ;oBAGY,SAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,OAFZ;oBAGY,eAHZ;kBAIU;SAXJ;KA18BN,EAy9BR;gBACY,gBADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,KAHZ;kBAIU;SALJ,EAON;oBACY,UADZ;oBAEY,QAFZ;oBAGY,IAHZ;kBAIU;SAXJ,EAaN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,OAHZ;kBAIU;SAjBJ,EAmBN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,QAHZ;kBAIU;SAvBJ,EAyBN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,GAHZ;kBAIU;SA7BJ,EA+BN;oBACY,UADZ;oBAEY,QAFZ;oBAGY,gBAHZ;kBAIU;SAnCJ,EAqCN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,UAHZ;kBAIU;SAzCJ,EA2CN;oBACY,UADZ;oBAEY,OAFZ;oBAGY,SAHZ;kBAIU;SA/CJ,EAiDN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,aAHZ;kBAIU;SArDJ,EAuDN;oBACY,UADZ;oBAEY,gBAFZ;oBAGY,gBAHZ;kBAIU;SA3DJ,EA6DN;oBACY,UADZ;oBAEY,cAFZ;oBAGY,cAHZ;kBAIU;SAjEJ,EAmEN;oBACY,UADZ;oBAEY,eAFZ;oBAGY,eAHZ;kBAIU;SAvEJ,EAyEN;oBACY,UADZ;oBAEY,YAFZ;oBAGY,YAHZ;kBAIU;SA7EJ,EA+EN;oBACY,UADZ;oBAEY,eAFZ;oBAGY,eAHZ;kBAIU;SAnFJ,EAqFN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,aAHZ;kBAIU;SAzFJ,EA2FN;oBACY,UADZ;oBAEY,YAFZ;oBAGY,YAHZ;kBAIU;SA/FJ,EAiGN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,aAHZ;kBAIU;SArGJ,EAuGN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,aAHZ;kBAIU;SA3GJ,EA6GN;oBACY,UADZ;oBAEY,aAFZ;oBAGY,aAHZ;kBAIU;SAjHJ,EAmHN;oBACY,UADZ;oBAEY,iBAFZ;oBAGY,iBAHZ;kBAIU;SAvHJ,EAyHN;oBACY,UADZ;oBAEY,eAFZ;oBAGY,eAHZ;kBAIU;SA7HJ,EA+HN;oBACY,UADZ;oBAEY,cAFZ;oBAGY,cAHZ;kBAIU;SAnIJ;KA59BN,CANoE;aA0mCvE,CACL;gBACY,aADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,SADZ;kBAEU;SAHJ,EAKN;oBACY,MADZ;kBAEU;SAPJ,EASN;oBACY,QADZ;kBAEU;SAXJ,EAaN;oBACY,KADZ;kBAEU;SAfJ,EAiBN;oBACY,KADZ;kBAEU;SAnBJ,EAqBN;oBACY,QADZ;kBAEU;SAvBJ,EAyBN;oBACY,MADZ;kBAEU;SA3BJ,EA6BN;oBACY,OADZ;kBAEU;SA/BJ,EAiCN;oBACY,OADZ;kBAEU;SAnCJ,EAqCN;oBACY,MADZ;kBAEU;SAvCJ,EAyCN;oBACY,MADZ;kBAEU;SA3CJ,EA6CN;oBACY,MADZ;kBAEU;SA/CJ,EAiDN;oBACY,UADZ;kBAEU;SAnDJ,EAqDN;oBACY,QADZ;kBAEU;SAvDJ,EAyDN;oBACY,MADZ;kBAEU;SA3DJ,EA6DN;oBACY,UADZ;kBAEU;SA/DJ,EAiEN;oBACY,QADZ;kBAEU;SAnEJ,EAqEN;oBACY,WADZ;kBAEU;SAvEJ,EAyEN;oBACY,OADZ;kBAEU;SA3EJ;KAJT,EAmFL;gBACY,QADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,MADZ;kBAEU;SAHJ,EAKN;oBACY,KADZ;kBAEU;SAPJ,EASN;oBACY,QADZ;kBAEU;SAXJ,EAaN;oBACY,OADZ;kBAEU;SAfJ,EAiBN;oBACY,QADZ;kBAEU;SAnBJ,EAqBN;oBACY,QADZ;kBAEU;SAvBJ,EAyBN;oBACY,OADZ;kBAEU;SA3BJ,EA6BN;oBACY,cADZ;kBAEU;SA/BJ,EAiCN;oBACY,UADZ;kBAEU;SAnCJ,EAqCN;oBACY,OADZ;kBAEU;SAvCJ,EAyCN;oBACY,SADZ;kBAEU;SA3CJ,EA6CN;oBACY,OADZ;kBAEU;SA/CJ,EAiDN;oBACY,SADZ;kBAEU;SAnDJ,EAqDN;oBACY,QADZ;kBAEU;SAvDJ,EAyDN;oBACY,gBADZ;kBAEU;SA3DJ,EA6DN;oBACY,MADZ;kBAEU;SA/DJ,EAiEN;oBACY,cADZ;kBAEU;SAnEJ,EAqEN;oBACY,SADZ;kBAEU;SAvEJ,EAyEN;oBACY,OADZ;kBAEU;SA3EJ,EA6EN;oBACY,QADZ;kBAEU;SA/EJ,EAiFN;oBACY,QADZ;kBAEU;SAnFJ,EAqFN;oBACY,SADZ;kBAEU;SAvFJ,EAyFN;oBACY,MADZ;kBAEU;SA3FJ,EA6FN;oBACY,QADZ;kBAEU;SA/FJ,EAiGN;oBACY,QADZ;kBAEU;SAnGJ,EAqGN;oBACY,SADZ;kBAEU;SAvGJ,EAyGN;oBACY,UADZ;kBAEU;SA3GJ,EA6GN;oBACY,WADZ;kBAEU;SA/GJ,EAiHN;oBACY,MADZ;kBAEU;SAnHJ,EAqHN;oBACY,QADZ;kBAEU;SAvHJ,EAyHN;oBACY,OADZ;kBAEU;SA3HJ,EA6HN;oBACY,MADZ;kBAEU;SA/HJ,EAiIN;oBACY,QADZ;kBAEU;SAnIJ,EAqIN;oBACY,SADZ;kBAEU;SAvIJ,EAyIN;oBACY,QADZ;kBAEU;SA3IJ,EA6IN;oBACY,QADZ;kBAEU;SA/IJ,EAiJN;oBACY,UADZ;kBAEU;SAnJJ,EAqJN;oBACY,QADZ;kBAEU;SAvJJ,EAyJN;oBACY,UADZ;kBAEU;SA3JJ;KAtFT,EAqPL;gBACY,YADZ;kBAEc,QAFd;kBAGc,CACN;oBACY,IADZ;kBAEU;SAHJ,EAKN;oBACY,KADZ;kBAEU;SAPJ;KAxPT,CA1mCuE;mBA82CjE;CA92CF,EA+2CdC,KA/2Cc,EAAjB;;4BC2BIC,gBAASC,WAAT,CAAqBC;IAxBvBC,0CAAAA;IACAC,oCAAAA;IACAC,gCAAAA;IACAC,oCAAAA;IACAC,uCAAAA;IACAC,qCAAAA;IACAC,sCAAAA;IACAC,mCAAAA;IACAC,sCAAAA;IACAC,oCAAAA;IACAC,oCAAAA;IACAC,oCAAAA;IACAC,mCAAAA;IACAC,kCAAAA;IACAC,qCAAAA;IACAC,oCAAAA;IACAC,wCAAAA;IACAC,sCAAAA;IACAC,uCAAAA;IACAC,qCAAAA;IACAC,kCAAAA;IACAC,oCAAAA;IACAC,+BAAAA;IACAC,mCAAAA;;;AAGF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA,eAAe,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GACb,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,EAD3C;;ACCA,IAAMC,UAAU,QAAO,SAAP,CAAhB;AACA,IAAMC,UAAQC,EAAE,cAAF,CAAd;;IACqBC;qBACPC,KAAZ,EAAmBC,GAAnB,EAAwB;;;SACjBC,MAAL,GAAcF,KAAd;QACI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;WACtBE,SAAL,GAAiBC,KAAKC,GAAL,KAAaJ,GAA9B;;;;;;wBAIQ;UACJK,UAAU,KAAKH,SAAL,IAAkB,KAAKA,SAAL,GAAiBC,KAAKC,GAAL,EAAnD;UACIC,OAAJ,EAAaT,sBAAkB,KAAKK,MAAvB;aACNI,UAAUV,OAAV,GAAoB,KAAKM,MAAhC;;;;;;;AAGJH,UAAUH,OAAV,GAAoBA,OAApB;;ACfA,IAAMC,UAAQC,EAAE,UAAF,CAAd;;IACqBS;mBACa;QAApBC,IAAoB,uEAAb,WAAa;;;;SACzBA,IAAL,GAAYA,IAAZ;SACKC,IAAL,GAAY,EAAZ;;;kBAGFC,mBAAIC,KAAK;QACDC,QAAQ,KAAKH,IAAL,CAAUE,GAAV,CAAd;QACIC,KAAJ,EAAW;UACHZ,QAAQY,MAAMZ,KAApB;UACIA,UAAUD,UAAUH,OAAxB,EAAiC;gBACzB,iBAAN,EAAyB,KAAKY,IAA9B,EAAoCG,GAApC,EAAyCX,KAAzC;eACOA,KAAP;;aAEK,KAAKS,IAAL,CAAUE,GAAV,CAAP;;kBAEQ,KAAKH,IAAf,kBAAgCG,GAAhC;WACO,IAAP;;;kBAGFE,mBAAIF,KAAKX,OAAOC,KAAK;YACb,oBAAN,EAA4B,KAAKO,IAAjC,EAAuCG,GAAvC,EAA4CX,KAA5C,EAAmDC,GAAnD;SACKQ,IAAL,CAAUE,GAAV,IAAiB,IAAIZ,SAAJ,CAAcC,KAAd,EAAqBC,GAArB,CAAjB;;;;;;ACrBG,IAAMa,SAAS,SAATA,MAAS,CAACC,mBAAD,EAAyB;MACvCC,UAAU,aAAYD,oBAAoB,CAApB,CAAZ,CAAhB;MACIA,oBAAoBE,MAApB,KAA+B,CAAnC,EAAsC;WAC7BD,OAAP;;SAEKA,QAAQE,KAAR,CAAc;WAAMJ,OAAOC,oBAAoBI,KAApB,CAA0B,CAA1B,CAAP,CAAN;GAAd,CAAP;CALK;;AAQP,AAAO,IAAMC,MAAM,SAANA,GAAM;SAAe;WAAWC,YAAYrB,KAAZ,GAAoBA,KAA/B;GAAf;CAAZ;;AAEP,AACA,AAEA,AAAO,IAAMsB,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAU;MAC9B,CAACA,IAAL,EAAW,OAAOA,IAAP;MACP,OAAOA,IAAP,KAAgB,QAApB,EAA8B;WACrB,IAAInB,IAAJ,CAASmB,IAAT,CAAP;;MAEEA,KAAKC,MAAL,KAAgB,MAAhB,IAA0BD,KAAKE,GAAnC,EAAwC;WAC/B,IAAIrB,IAAJ,CAASmB,KAAKE,GAAd,CAAP;;;MAGE,OAAOF,KAAKG,QAAZ,KAAyB,UAA7B,EAAyC;WAChC,IAAItB,IAAJ,CAASmB,KAAKG,QAAL,EAAT,CAAP;;SAEKH,IAAP;CAZK;;AAeP,AAAO,IAAMI,WAAW,SAAXA,QAAW,CAACC,MAAD,EAASC,GAAT;SACtB,aAAYA,GAAZ,EAAiBC,MAAjB,CAAwB,UAACC,MAAD,EAASpB,GAAT,EAAiB;QACjCqB,SAASJ,OAAOjB,GAAP,KAAeA,GAA9B;WACO,eAAcoB,MAAd,sBACJC,MADI,EACKH,IAAIlB,GAAJ,CADL,EAAP;GAFF,EAKG,EALH,CADsB;CAAjB;;AAQP,AAAO,IAAMsB,SACXvC,SAAOwC,SAAP,IACAxC,SAAOwC,SAAP,CAAiBC,SADjB,IAEAzC,SAAOwC,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,UAAnC,MAAmD,CAAC,CAH/C;;;AAOP,AAAO,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,QAAR;SAC9BD,MAAMC,QAAN,MAAoBD,MAAME,SAAN,GAAkBH,kBAAkBC,MAAME,SAAxB,EAAmCD,QAAnC,CAAlB,GAAiEE,SAArF,CAD8B;CAA1B;;;AAIP,AAAO,IAAMC,QAAQ,SAARA,KAAQ,CAACC,CAAD,EAAIC,CAAJ;SAAU,YAAW,sCAAYD,CAAZ,sBAAkBC,CAAlB,GAAX,CAAV;CAAd;AACP,AAAO,IAAMC,aAAa,SAAbA,UAAa,CAACF,CAAD,EAAIC,CAAJ;SAAU,YACjC;WAAQ,SAAQD,EAAEG,MAAF,CAAS;aAAK,CAACC,KAAKC,GAAL,CAASC,CAAT,CAAN;KAAT,CAAR,CAAR;GAAD,CAA+C,SAAQL,CAAR,CAA/C,CADkC,CAAV;CAAnB;;AAIP,IAAMM,MAAM,cAAZ;;;AAGA,AAAO,IAAMC,WAAW,SAAXA,QAAW,CAACC,MAAD,EAAY;MAC9B,CAACF,IAAIF,GAAJ,CAAQI,MAAR,CAAL,EAAsB;QAChBvC,GAAJ,CAAQuC,MAAR,EAAgB,EAAhB;;SAEKF,IAAIxC,GAAJ,CAAQ0C,MAAR,CAAP;CAJK;;;AAQP,IAAMC,aAAa,SAAbA,UAAa,CAACxB,GAAD,EAAS;MACtB,CAACyB,cAAczB,GAAd,CAAL,EAAyB,OAAOA,GAAP;MACnBuB,SAAS,eAAc,EAAd,EAAkBvB,GAAlB,CAAf;;OAEK,IAAM0B,IAAX,IAAmBH,MAAnB,EAA2B;QACrB,GAAGI,cAAH,CAAkBC,IAAlB,CAAuBL,MAAvB,EAA+BG,IAA/B,CAAJ,EAA0C;UAClCvD,QAAQoD,OAAOG,IAAP,CAAd;UACIvD,UAAU,IAAd,EAAoB;eACXoD,OAAOG,IAAP,CAAP;OADF,MAEO;eACEA,IAAP,IAAeF,WAAWrD,KAAX,CAAf;;;;SAICoD,MAAP;CAdF;AAgBA,AAAO,IAAMM,OAAO,SAAPA,IAAO;SAAWL,WAAWM,KAAKC,KAAL,CAAW,gBAAeC,OAAf,CAAX,CAAX,CAAX;CAAb;;AAEP,AAAO,IAAMC,cAAc,SAAdA,WAAc,CAACC,MAAD,EAAY;MACjCC,MAAMC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;WAClBA,MAAP;;MAEEA,WAAWtB,SAAX,IAAwBsB,WAAW,IAAvC,EAA6C;WACpC,EAAP;;SAEK,CAACA,MAAD,CAAP;CAPK;;AAUP,AAAO,IAAMG,WAAW,SAAXA,QAAW,CAACH,MAAD,EAASpD,GAAT,EAAcX,KAAd,EAAwB;;MAExCmE,OAAOxD,IAAIyD,KAAJ,CAAU,GAAV,CAAb;MACMC,UAAUF,KAAKG,GAAL,EAAhB;MACIC,gBAAgBR,MAApB;OACKS,OAAL,CAAa,UAACC,GAAD,EAAS;QAChBF,cAAcE,GAAd,MAAuBhC,SAA3B,EAAsC8B,cAAcE,GAAd,IAAqB,EAArB;oBACtBF,cAAcE,GAAd,CAAhB;GAFF;gBAIcJ,OAAd,IAAyBrE,KAAzB;SACO+D,MAAP;CAVK;;;AAcP,AAAO,IAAMW,UAAU,QAAOC,EAAP,yCAAOA,EAAP,OAAc,QAAd,IAA0B,OAAOA,GAAGC,aAAV,KAA4B,UAAtE;;;AAGP,AAAO,IAAMC,WAAW,SAAXA,QAAW;SAAQ,UAACd,MAAD,EAASxB,QAAT,EAAmBuC,UAAnB,EAAkC;QAC1DC,WAAWD,WAAW9E,KAA5B;;QAEI+E,SAAS9D,MAAb,EAAqB;YACb,IAAI+D,KAAJ,CAAU,oDAAV,CAAN;;wBAGGF,UADL;WAAA,mBAEU;;;wBAGF3B,SAAS,IAAT,CAHE;YAEJ8B,YAFI,aAEJA,YAFI;;YAIF,CAACA,YAAL,EAAmBA,eAAe9B,SAAS,IAAT,EAAe8B,YAAf,GAA8B,EAA7C;4BAGfA,YAPE;YAMQC,YANR,iBAMH3C,QANG;;YAQF,CAAC2C,YAAL,EAAmBA,eAAeD,aAAa1C,QAAb,IAAyB,EAAxC;4BAIf2C,YAZE;kDAUJC,kBAVI;YAUJA,kBAVI,yCAUiB,CAVjB;YAWJC,OAXI,iBAWJA,OAXI;;YAaA/E,MAAMD,KAAKC,GAAL,EAAZ;YACMgF,gBAAgBC,QAAQjF,MAAM8E,kBAAd,CAAtB;YACIE,iBAAiB,CAArB,EAAwB;uBACT9C,QAAb,EAAuB4C,kBAAvB,GAA4C9E,GAA5C;mBACSkF,KAAT,CAAe,IAAf;SAFF,MAGO,IAAI,CAACH,OAAL,EAAc;uBACNA,OAAb,GAAuBI,WAAW,YAAM;yBACzBL,kBAAb,GAAkC/E,KAAKC,GAAL,EAAlC;mBACO6E,aAAaE,OAApB;qBACSG,KAAT;WAHqB,EAIpBF,aAJoB,CAAvB;;;;GA3BgB;CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GP,AACA,AACA,AAEA,AAEA,AAEA,IAAMxF,UAAQC,EAAE,kBAAF,CAAd;;AAEA,IAAM2F,iBAAiB,MAAvB;AACA,IAAMC,eAAe,MAArB;;AAEA,IAAMC,yBAAyB,SAAzBA,sBAAyB;SAAWC,KAAKC,GAAL,CAAS,OAAOD,KAAKE,GAAL,CAAS,CAAT,EAAYC,OAAZ,CAAhB,EAAsC,MAAtC,CAAX;CAA/B;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACjC,MAAD,EAASvD,IAAT,EAAesE,UAAf;SACvB,eAAc,EAAd,EAAkBA,UAAlB,EAA8B;WACrB,SAASmB,uBAAT,GAA0C;;;UAC3C,CAAC,KAAKC,EAAL,CAAQ,WAAR,CAAL,EAA2B;YACnBC,eAAe,KAAKC,OAA1B;gBACQC,IAAR,CAAgB7F,IAAhB,qDAAoE2F,YAApE;YACI,KAAKD,EAAL,CAAQ,cAAR,KAA2B,KAAKA,EAAL,CAAQ,cAAR,CAA/B,EAAwD;kBAC9CG,IAAR,CAAa,uEAAb;;cAEI,IAAIrB,KAAJ,CAAU,wBAAV,CAAN;;;wCAPuCsB,IAAM;YAAA;;;aASxC,gCAAWtG,KAAX,EAAiByD,IAAjB,2BAAsB,IAAtB,SAA+B6C,IAA/B,EAAP;;GAVJ,CADuB;CAAzB;;IAeMC;;;yBACQC,OAAZ,EAAqBC,QAArB,EAA+B;;;QACzB,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;YAC9B,IAAI1B,KAAJ,CAAU,+DAAV,CAAN;;;iDAEF,wBAJ6B;;QAKzB,OAAOwB,OAAP,KAAmB,UAAvB,EAAmC;YAC5BG,QAAL,GAAgB;eAAM,SAAQC,OAAR,CAAgBJ,OAAhB,CAAN;OAAhB;KADF,MAEO;YACAG,QAAL,GAAgBH,OAAhB;;UAEGK,SAAL,GAAiBJ,QAAjB;UACKK,IAAL;UACKC,SAAL,CAAe,MAAKJ,QAApB,EAA8B,MAAKE,SAAnC,EAA8CG,IAA9C,CACE,YAAM;YACCC,sBAAL,GAA8B,MAAKC,qBAAL,CAA2BC,IAA3B,OAA9B;UACIzH,SAAO0H,gBAAX,EAA6B;cACtBC,OAAL,GAAe;iBAAM,MAAKC,KAAL,EAAN;SAAf;cACKC,QAAL,GAAgB;iBAAM,MAAKC,MAAL,EAAN;SAAhB;iBACOJ,gBAAP,CAAwB,SAAxB,EAAmC,MAAKC,OAAxC;iBACOD,gBAAP,CAAwB,QAAxB,EAAkC,MAAKG,QAAvC;;YAEGE,IAAL;KATJ,EAWEvG,KAXF,CAWQ,MAAKwG,KAAL,CAAWP,IAAX,OAXR;;;;0BAcFJ,+BAAUP,SAASC,UAAU;;;WACpBD,UAAUQ,IAAV,CAAe,UAACW,MAAD,EAAY;UAC5BC,OAAOD,MAAX;UACI,EAAEC,gBAAgB5D,KAAlB,CAAJ,EAA8B;eACrB,CAAC4D,IAAD,CAAP;;aAEK9G,OACL8G,KAAK1E,GAAL,CAAS;eAAO,UAAC0D,OAAD,EAAUiB,MAAV,EAAqB;gCACjBC,GAAlB,UAA0BrB,QAA1B;cACMsB,KAAKtB,WAAW,IAAIC,SAAJ,CACpBoB,GADoB,EACfrB,QADe,CAAX,GAEP,IAAIC,SAAJ,CAAcoB,GAAd,CAFJ;aAGGE,UAAH,GAAgB,OAAKA,UAAL,KAAoBtI,SAAOuI,MAAP,GAAgB,YAAhB,GAA+B,aAAnD,CAAhB;aACGC,MAAH,GAAY;mBAAMtB,QAAQmB,EAAR,CAAN;WAAZ;aACGI,OAAH,GAAaJ,GAAGK,OAAH,GAAa,UAACC,KAAD,EAAW;gBAC/BA,iBAAiBrD,KAArB,EAA4B;qBACnB6C,OAAOQ,KAAP,CAAP;;;mBAGKR,OAAO,IAAI7C,KAAJ,yBAAgC8C,GAAhC,OAAP,CAAP;WALF;SAPO;OAAT,CADK,EAgBLd,IAhBK,CAgBA,UAACe,EAAD,EAAQ;eACRO,GAAL,GAAWP,EAAX;eACKO,GAAL,CAASF,OAAT,GAAmB,OAAKG,YAAL,CAAkBpB,IAAlB,QAAnB;eACKmB,GAAL,CAASE,SAAT,GAAqB,OAAKC,cAAL,CAAoBtB,IAApB,QAArB;eACOY,EAAP;OApBK,CAAP;KALK,CAAP;;;0BA6BFW,mCAAa;QACLX,KAAK,KAAKO,GAAhB;QACI,CAACP,EAAL,EAAS;OACNG,MAAH,GAAYH,GAAGK,OAAH,GAAaL,GAAGI,OAAH,GAAaJ,GAAGS,SAAH,GAAe,IAArD;SACKF,GAAL,GAAW,IAAX;OACGK,KAAH;;;;;;0BAIFC,uCAAcC,OAAOC,MAAMC,IAAgB;uCAATC,OAAS;aAAA;;;8BAChCH,KAAT,UAAmBC,IAAnB,YAA8BC,EAA9B,SAAuCC,OAAvC;;;0BAEFd,2BAAS;SACFe,IAAL,CAAU,MAAV;;;0BAEFC,qCAAc;SACPC,sBAAL;;;0BAEFC,6CAAiBP,OAAOC,MAAMC,IAAI;SAC3BM,qBAAL;SACKX,UAAL;QACIK,OAAO,SAAP,IAAoBA,OAAO,cAA/B,EAA+C;WACxCE,IAAL,CAAU,YAAV;;;;0BAGJK,6BAAU;SACHL,IAAL,CAAU,SAAV;;;0BAEFM,2CAAiB;SACVN,IAAL,CAAU,QAAV;;;0BAEFO,qCAAc;SACPP,IAAL,CAAU,WAAV;;;0BAEFQ,yCAAeZ,OAAOC,MAAMC,IAAiB;;;QAAbhD,OAAa,uEAAH,CAAG;;QACrC2D,QAAQ/D,uBAAuBlC,IAAvB,CAA4B,IAA5B,EAAkCsC,OAAlC,CAAd;kCAC0BA,OAA1B,eAA2C2D,KAA3C;SACKT,IAAL,CAAU,UAAV,EAAsBlD,OAAtB,EAA+B2D,KAA/B;QACI,KAAKC,gBAAT,EAA2B;mBACZ,KAAKA,gBAAlB;;SAEGA,gBAAL,GAAwBnE,WAAW,YAAM;UACnC,OAAKU,EAAL,CAAQ,cAAR,CAAJ,EAA6B;eACtB0D,KAAL,CAAW7D,OAAX;;KAFoB,EAIrB2D,KAJqB,CAAxB;;;0BAMFG,2BAAQhB,OAAOC,MAAMC,IAAiB;;;QAAbhD,OAAa,uEAAH,CAAG;;SAC/BkD,IAAL,CAAU,OAAV,EAAmBlD,OAAnB;SACKgB,SAAL,CAAe,KAAKJ,QAApB,EAA8B,KAAKE,SAAnC,EAA8CG,IAA9C,CACE;aAAO,OAAK8C,GAAL,CAAS,WAAT,IAAwB,OAAKC,SAAL,EAAxB,GAA2C,OAAKrB,UAAL,EAAlD;KADF,EAEE;aAAM,OAAKoB,GAAL,CAAS,MAAT,KAAoB,OAAKE,IAAL,CAAUjE,UAAU,CAApB,CAA1B;KAFF;;;0BAKFoC,2BAAQU,OAAOC,MAAMC,IAAIV,OAAO;SACzBY,IAAL,CAAU,OAAV,EAAmBZ,KAAnB;;;0BAEFD,6BAAU;QACJ1I,SAAOuK,mBAAX,EAAgC;UAC1B,KAAK5C,OAAT,EAAkB3H,SAAOuK,mBAAP,CAA2B,SAA3B,EAAsC,KAAK5C,OAA3C;UACd,KAAKE,QAAT,EAAmB7H,SAAOuK,mBAAP,CAA2B,QAA3B,EAAqC,KAAK1C,QAA1C;;;;;;;;0BAOvB2C,yBAAQ;YACA,MAAN;QACI;WACGC,IAAL;KADF,CAEE,OAAO9B,KAAP,EAAc;cACNhC,IAAR,4BAAsCgC,MAAMxE,OAA5C;;;;0BAGJsG,uBAAO;QACD,KAAK7B,GAAL,CAAS6B,IAAb,EAAmB;WACZ7B,GAAL,CAAS6B,IAAT;KADF,MAEO;cACG9D,IAAR;;;;0BAKJa,yDAAwB;;;YAChB,uBAAN;SACKkD,mBAAL;SACKC,aAAL,GAAqB7E,WAAW,YAAM;cAC9B,SAAN;aACK8E,UAAL;KAFmB,EAGlB5E,YAHkB,CAArB;;;0BAKF0E,qDAAsB;QAChB,KAAKC,aAAT,EAAwB;mBACT,KAAKA,aAAlB;;;;0BAGJlB,2DAAyB;YACjB,yBAAN;SACKoB,eAAL,GAAuBC,YAAY,KAAKN,KAAL,CAAW/C,IAAX,CAAgB,IAAhB,CAAZ,EAAmC1B,cAAnC,CAAvB;QACMgF,cAAc,KAAKnC,GAAL,CAASmC,WAAT,IAAwB,KAAKnC,GAAL,CAASlB,gBAArD;gBACY3D,IAAZ,CAAiB,KAAK6E,GAAtB,EAA2B,SAA3B,EAAsC,KAAKrB,sBAA3C;gBACYxD,IAAZ,CAAiB,KAAK6E,GAAtB,EAA2B,MAA3B,EAAmC,KAAKrB,sBAAxC;SACKC,qBAAL;;;0BAEFmC,yDAAwB;YAChB,wBAAN;;QAEMqB,iBAAiB,KAAKpC,GAAL,CAASoC,cAAT,IAA2B,KAAKpC,GAAL,CAAS2B,mBAA3D;mBACexG,IAAf,CAAoB,KAAK6E,GAAzB,EAA8B,SAA9B,EAAyC,KAAKrB,sBAA9C;mBACexD,IAAf,CAAoB,KAAK6E,GAAzB,EAA8B,MAA9B,EAAsC,KAAKrB,sBAA3C;SACKmD,mBAAL;QACI,KAAKG,eAAT,EAA0B;oBACV,KAAKA,eAAnB;;;;0BAIJhC,qCAAaM,OAAO;4BACEA,MAAM8B,IAA1B,UAAmC9B,MAAM+B,MAAzC;;QAEI,KAAKC,UAAL,EAAJ,EAAuB;SAClBC,WAAL,CAAiBjC,KAAjB;;;0BAEFiC,qCAAc;;SAEPR,UAAL;;;;;;;0BAMFS,qBAAKC,MAAM;YACH,MAAN,EAAcA,IAAd;SACK1C,GAAL,CAASyC,IAAT,CAAcC,IAAd;;;0BAGFvC,yCAAeI,OAAO;YACd,SAAN,EAAiBA,MAAMmC,IAAvB;SACKC,aAAL,CAAmBpC,MAAMmC,IAAzB;;;0BAEFC,uCAAcpH,SAAS;SAChBoF,IAAL,CAAU,SAAV,EAAqBpF,OAArB;;;;EAtMwBqH,sEA0HzBlF,wJAgEAA;;;AAgBHmF,aAAaC,MAAb,CAAoB;UACV7E,cAAc8E,SADJ;WAET;WACA,aADA;WAEA,MAFA;WAGA;GALS;YAOR,QAPQ;UAQV,CAAC;UACD,MADC;UAED,aAFC;QAGH;GAHE,EAIL;UACK,YADL;UAEK,WAFL;QAGG;GAPE,EAQL;UACK,OADL;UAEK,cAFL;QAGG;GAXE,EAYL;UACK,MADL;UAEK,cAFL;QAGG;GAfE,EAgBL;UACK,WADL;UAEK,cAFL;QAGG;GAnBE,EAoBL;UACK,OADL;UAEK,CAAC,WAAD,EAAc,cAAd,EAA8B,cAA9B,CAFL;QAGG;GAvBE,EAwBL,EAxBK,EAyBL;UACK,QADL;UAEK,SAFL;QAGG;GA5BE,EA6BL;UACK,OADL;UAEK,CAAC,WAAD,EAAc,cAAd,EAA8B,cAA9B,EAA8C,SAA9C,CAFL;QAGG;GAhCE,EAiCL;UACK,OADL;UAEK,GAFL;QAGG;GApCE;CARV,EAgDA;;AC1RO,IAAMhD,UAAQ,eAAc;QAC3B;UACE;GAFyB;QAI3B;UACE;GALyB;QAO3B;UACE,mBADF;aAEK;GATsB;QAW3B;UACE,eADF;aAEK;GAbsB;QAe3B;UACE,kBADF;aAEK;GAjBsB;QAmB3B;UACE;GApByB;QAsB3B;UACE;GAvByB;QAyB3B;UACE;GA1ByB;QA4B3B;UACE,gBADF;aAEK;GA9BsB;QAgC3B;UACE;GAjCyB;QAmC3B;UACE;GApCyB;QAsC3B;UACE,gBADF;aAEK;GAxCsB;QA0C3B;UACE;GA3CyB;QA6C3B;UACE;GA9CyB;QAgD3B;UACE;GAjDyB;QAmD3B;UACE;GApDyB;QAsD3B;UACE;GAvDyB;QAyD3B;UACE;GA1DyB;QA4D3B;UACE;GA7DyB;QA+D3B;UACE;GAhEyB;QAkE3B;UACE;GAnEyB;QAqE3B;UACE;;CAtEW,CAAd;;AA0EP,AAAO,IAAMiD,YAAY,eACvB,aAAYjD,OAAZ,EAAmBvG,MAAnB,CAA0B,UAACyJ,MAAD,EAASZ,IAAT;SAAkB,eAAcY,MAAd,sBACzClD,QAAMsC,IAAN,EAAYnK,IAD6B,EACtBgL,OAAOb,IAAP,CADsB,EAAlB;CAA1B,EAEI,EAFJ,CADuB,CAAlB;;AAMP,AAAO,IAAMc,cAAc,SAAdA,WAAc,CAACC,YAAD,EAAkB;MAEzCf,IAFyC,GAGvCe,YAHuC,CAEzCf,IAFyC;MAEnCC,MAFmC,GAGvCc,YAHuC,CAEnCd,MAFmC;MAE3Be,OAF2B,GAGvCD,YAHuC,CAE3BC,OAF2B;MAElBC,MAFkB,GAGvCF,YAHuC,CAElBE,MAFkB;;MAIvC/H,UAAU+G,UAAUgB,MAAxB;MACI,CAAC/H,OAAD,IAAYwE,QAAMsC,IAAN,CAAhB,EAA6B;cACjBtC,QAAMsC,IAAN,EAAY9G,OAAZ,IAAuBwE,QAAMsC,IAAN,EAAYnK,IAA7C;;MAEE,CAACqD,OAAL,EAAc;iCACe8G,IAA3B;;MAEIkB,MAAM,IAAI7G,KAAJ,CAAUnB,OAAV,CAAZ;SACO,eAAcgI,GAAd,EAAmB;cAAA,EAClBF,gBADkB,EACTC;GADV,CAAP;CAZK;;AC1EP,IAAM/L,UAAQC,EAAE,eAAF,CAAd;;AAEA,IAAMgM,kBAAkB,KAAxB;;IAEqBC;;;sBACPC,MAAZ,QAAyC;QAAnBC,MAAmB,QAAnBA,MAAmB;QAAXC,OAAW,QAAXA,OAAW;;;;YACjC,yBAAN;QACMC,yBAAuBF,MAAvB,SAAiCC,OAAvC;QACI,CAACxH,OAAL,EAAc;mDACZ,0BAAMsH,MAAN,EAAcG,cAAd,CADY;KAAd,MAEO;mDACL,0BAAMH,SAAShF,IAAT,CAAc;eAAQY,KAAK1E,GAAL,CAAS;sBAChC4E,GADgC,IAC1BA,IAAI1F,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAA1B,GAAgC,GADN,qBACwBgK,mBAAmBD,cAAnB,CADxB;SAAT,CAAR;OAAd,CAAN,CADK;;UAKFE,eAAL,GAAuBJ,MAAvB;UACKK,SAAL,GAAiB,EAAjB;UACKC,SAAL,GAAiB,CAAjB;;;;uBAGFxB,qBAAKyB,SAAmC;;;QAA1BC,iBAA0B,uEAAN,IAAM;;QAClCC,iBAAJ;QACID,iBAAJ,EAAuB;WAChBF,SAAL,IAAkB,CAAlB;iBACW,KAAKA,SAAhB;cACQI,CAAR,GAAYD,QAAZ,CAHqB;;YAKjB,WAAN,EAAmBhJ,KAAK8I,OAAL,CAAnB;;QAEI3I,gBAAJ;QACI,KAAKwI,eAAL,KAAyB,cAA7B,EAA6C;gBACjCG,QAAQI,QAAR,EAAV;KADF,MAEO,IAAIJ,QAAQK,QAAZ,EAAsB;gBACjBL,QAAQK,QAAR,EAAV;KADK,MAEA,IAAIL,QAAQM,aAAZ,EAA2B;gBACtBN,QAAQM,aAAR,EAAV;;QAEE,CAACjJ,OAAL,EAAc;YACN,IAAIkJ,SAAJ,CAAiBP,OAAjB,8BAAN;;;6BAGIzB,IAAN,YAAWlH,OAAX;;QAEI,CAAC4I,iBAAL,EAAwB;aACf,SAAQ7F,OAAR,EAAP;;WAEK,aAAY,UAACA,OAAD,EAAUiB,MAAV,EAAqB;aACjCyE,SAAL,CAAeI,QAAf,IAA2B;wBAAA;;OAA3B;iBAKE,YAAM;YACA,OAAKJ,SAAL,CAAeI,QAAf,CAAJ,EAA8B;kBACtB,cAAN,EAAsBhJ,KAAK8I,OAAL,CAAtB;iBACO,IAAIxH,KAAJ,CAAU,kBAAV,CAAP;iBACO,OAAKsH,SAAL,CAAeI,QAAf,CAAP;;OALN,EAQEZ,eARF;KALK,CAAP;;;uBAkBFb,uCAAc+B,KAAK;QACbnJ,gBAAJ;QACI;gBACQzE,eAAe6N,MAAf,CAAsBD,GAAtB,CAAV;cACM,eAAN,EAAuBtJ,KAAKG,OAAL,CAAvB;KAFF,CAGE,OAAOqJ,CAAP,EAAU;cACF7G,IAAR,CAAa,uBAAb,EAAsC2G,GAAtC;;SAEG/D,IAAL,CAAU,YAAV,EAAwBpF,OAAxB;QACM6I,WAAW7I,QAAQ8I,CAAzB;QACID,QAAJ,EAAc;UACR,KAAKJ,SAAL,CAAeI,QAAf,CAAJ,EAA8B;YACxB7I,QAAQsJ,GAAR,KAAgB5N,YAAY8I,KAAhC,EAAuC;eAElCiE,SADH,CACaI,QADb,EAEG7E,MAFH,CAEU4D,YAAY5H,QAAQ6H,YAApB,CAFV;SADF,MAIO;eAEFY,SADH,CACaI,QADb,EAEG9F,OAFH,CAEW/C,OAFX;;eAIK,KAAKyI,SAAL,CAAeI,QAAf,CAAP;OAVF,MAWO;gBACGrG,IAAR,iDAA2DqG,QAA3D;;KAbJ,MAgBO,IAAI7I,QAAQsJ,GAAR,KAAgB5N,YAAY8I,KAAhC,EAAuC;WACvCY,IAAL,CAAU,OAAV,EAAmBwC,YAAY5H,QAAQ6H,YAApB,CAAnB;KADK,MAEA;WACAzC,IAAL,CAAU,SAAV,EAAqBpF,OAArB;;;;uBAIJsG,uBAAO;WACE,KAAKY,IAAL,CAAU,IAAI3L,cAAJ,CAAmB;WAC7BG,YAAY6N;KADF,CAAV,EAEHlM,KAFG,CAEG;aAASrB,QAAM,cAAN,EAAsBwI,QAAtB,CAAT;KAFH,CAAP;;;;EA9FoC9B;;ACVxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA,AAEA,IAAM8G,YAAY,SAAZA,SAAY;SAAc,UAACC,KAAD,EAAW;QACjCC,WADiC,GACjBD,KADiB,CACjCC,WADiC;;WAElC,SAAQ3G,OAAR,CAAgB0G,KAAhB,EAAuBtG,IAAvB,CAA4BwG,UAA5B,EAAwCxG,IAAxC,CAA6C5F,IAAI,UAACmK,MAAD,EAAY;UAC9DA,WAAW9I,SAAX,IAAwB8I,WAAW,IAAvC,EAA6C;;eAEpCkC,QAAQpH,IAAR,kBAA2BmH,WAAWE,WAAX,IAA0B,kBAArD,WAA2EF,WAAWhN,IAAX,IAAmB,sBAA9F,oDAAkK+K,MAAlK,iBAAoL+B,MAAMC,WAAN,CAAkB/M,IAAtM,gBAAP;;UAEE,EAAE+K,kBAAkBgC,WAApB,CAAJ,EAAsC;;eAE7BE,QAAQpH,IAAR,kBAA2BmH,WAAWE,WAAX,IAA0B,kBAArD,WAA2EF,WAAWhN,IAAX,IAAmB,sBAA9F,sDAAoK+K,OAAOgC,WAAP,CAAmB/M,IAAvL,iBAAuM8M,MAAMC,WAAN,CAAkB/M,IAAzN,gBAAP;;aAEK,CAAP;KATkD,CAA7C,CAAP;GAFgB;CAAlB;;AAeA,AAAO,IAAMmN,kBAAkB,SAAlBA,eAAkB,CAACC,UAAD,EAAa7J,MAAb,EAAwB;MACjD6J,UAAJ,EAAgB;eACHpJ,OAAX,CAAmB,UAACqJ,SAAD,EAAe;UAC5B;kBACQ9J,MAAV;OADF,CAEE,OAAOsE,KAAP,EAAc;YACVwF,UAAUH,WAAd,EAA2B;gBACnB7J,OAAN,UAAqBgK,UAAUH,WAA/B;;cAEIrF,KAAN;;KAPJ;;CAFG;;AAeP,AAAO,IAAMyF,mBAAmB,SAAnBA,gBAAmB;SAAe;WAC7ChK,YAAYiK,WAAZ,EAAyBjM,MAAzB,CACE,UAACkM,eAAD,EAAkBR,UAAlB;aAAiCQ,gBAC9BhH,IAD8B,CACzBqG,UAAUG,UAAV,CADyB,EAE9BtM,KAF8B,CAExB,UAACmH,KAAD,EAAW;YACZmF,WAAWE,WAAf,EAA4B;;gBAEpB7J,OAAN,UAAqB2J,WAAWE,WAAhC;;cAEIrF,KAAN;OAP6B,CAAjC;KADF,EAUE,SAAQzB,OAAR,CAAgB7C,MAAhB,CAVF,CAD6C;GAAf;CAAzB;;AAcP,AAAO,IAAMkK,kBAAkB,SAAlBA,eAAkB,CAACC,WAAD,EAAclF,OAAd;SAC7BlF,YAAYoK,WAAZ,EAAyBpM,MAAzB,CACE,UAACqM,aAAD,EAAgBC,UAAhB;WAA+BD,cAAcnH,IAAd,CAAmB;aAC/CqH,mBAAmB,KAAnB,GAA2B,KAA3B,GAAmCD,+CAAcpF,OAAd,EADY;KAAnB,EAE7B9H,KAF6B,CAEvB,UAACmH,KAAD,EAAW;UACb+F,WAAWV,WAAf,EAA4B;;cAEpB7J,OAAN,UAAqBuK,WAAWV,WAAhC;;YAEIrF,KAAN;KAP6B,CAA/B;GADF,EASM,SAAQzB,OAAR,CAAgB,IAAhB,CATN,CAD6B;CAAxB;;ACxIP,IAAM/G,QAAQC,EAAE,aAAF,CAAd;;AAEA,IAAMwO,kBAAkB,IAAI/N,KAAJ,CAAU,aAAV,CAAxB;;IAEqBgO;;;;;;;;;;;;;;oBAYPC,OAAZ,EAAqB;;;UACb,uBAAN;;iDACA,wBAFmB;;QAGf,OAAOA,QAAQC,KAAf,KAAyB,QAA7B,EAAuC;YAC/B,IAAI1B,SAAJ,aAAwByB,QAAQC,KAAhC,uBAAN;;UAEGC,QAAL,GAAgB,eAAc;aACrBjM,SADqB;cAEpB,IAFoB;2BAGP,KAHO;gBAIlBiC,OAJkB;WAKvB,IALuB;cAMpBiK,QAAQC,GAAR,CAAYC;KANN,EAObL,OAPa,CAAhB;UAQKM,MAAL,GAAc,IAAIvO,KAAJ,CAAU,WAAV,CAAd;oBACewO,OAAf,GAAyB,UAAzB;UACKC,QAAL,GAAgB,6BACXlL,YAAYyK,SAASU,sBAArB,CADW,sBAEXnL,YAAY0K,QAAQU,OAApB,CAFW,GAGdpN,MAHc,CAId,UAACyJ,MAAD,EAAS4D,MAAT,EAAoB;;WAEb,IAAMC,IAAX,IAAmBD,MAAnB,EAA2B;YACrB,GAAG3L,cAAH,CAAkBC,IAAlB,CAAuB0L,MAAvB,EAA+BC,IAA/B,KAAwCA,SAAS,MAArD,EAA6D;cACvDD,OAAO3O,IAAX,EAAiB;wBACH2O,OAAOC,IAAP,CAAZ,EAA0B5K,OAA1B,CAAkC,UAACxE,KAAD,EAAW;;oBAErC0N,WAAN,GAAoByB,OAAO3O,IAA3B;aAFF;;;iBAMK4O,IAAP,IAAetL,YAAYyH,OAAO6D,IAAP,CAAZ,EAA0BC,MAA1B,CAAiCF,OAAOC,IAAP,CAAjC,CAAf;;;aAGG7D,MAAP;KAlBY,EAoBd,EApBc,CAAhB;;oBAuBgB,MAAKyD,QAAL,CAAcM,gBAA9B;;;;qBAGFC,yBAAQ;;;QACF,KAAKC,YAAT,EAAuB,OAAO,KAAKA,YAAZ;;QAEnBvD,SAAS,WAAb;QACI,KAAKyC,QAAL,CAAce,QAAlB,EAA4B;;eAEjB,cAAT;;QAEEvD,UAAU,CAAd;QACI,KAAKwC,QAAL,CAAcgB,mBAAlB,EAAuC;;gBAE3B,CAAV;;QAEIjJ,WAAW;oBAAA;;KAAjB;SAIK+I,YAAL,GAAoB,aAAY,UAAC5I,OAAD,EAAUiB,MAAV,EAAqB;YAC7C,8CAAN;UACM8H,aAAa,IAAI5D,UAAJ,CACjB;eAAM,OAAK6D,aAAL,CAAmB,OAAKlB,QAAxB,CAAN;OADiB,EAEjBjI,QAFiB,CAAnB;iBAIWoJ,EAAX,CAAc,MAAd,EAAsB;eAAMjJ,QAAQ+I,UAAR,CAAN;OAAtB;iBACWE,EAAX,CAAc,OAAd,EAAuBhI,MAAvB;iBACWgI,EAAX,CAAc,SAAd,EAAyB,OAAKC,gBAAL,CAAsB3I,IAAtB,QAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAsEC,YAAD,EAAe,WAAf,EAA4B,OAA5B,EAAqC,UAArC,EAAiD,SAAjD,EAA4D,QAA5D,EAAsE3C,OAAtE,CACE;eAASmL,WAAWE,EAAX,CAAchH,KAAd,EAAqB,YAAgB;4CAAZG,OAAY;mBAAA;;;gBACnCH,KAAT,yBAAoCG,OAApC;iBACKC,IAAL,gBAAUJ,KAAV,SAAoBG,OAApB;cACIH,UAAU,WAAd,EAA2B;6BACVkG,OAAf,CAAuBvK,OAAvB,CAA+B,UAACuL,MAAD,EAAY;qBAClC9G,IAAP,gBAAYJ,KAAZ,SAAsBG,OAAtB;aADF;;SAJK,CAAT;OADF;;iBAYW8B,WAAX,GAAyB,SAASA,WAAT,CAAqBjC,KAArB,EAA4B;YAC7CmH,UAAU,CACd1E,UAAU2E,iBADI,EAEd3E,UAAU4E,aAFI,EAGd5E,UAAU6E,cAHI,EAIdC,IAJc,CAIT;iBAAaC,cAAcxH,MAAM8B,IAAjC;SAJS,CAAhB;YAKIqF,OAAJ,EAAa;;eAENtI,KAAL,CAAW+D,YAAY5C,KAAZ,CAAX;SAFF,MAGO;;eAEAyB,UAAL;;OAXJ;uBAceqF,UAAf,GAA4BA,UAA5B;KAxGkB,CAApB;;WA2GO,KAAKH,YAAZ;;;qBAGFI,uCAAcpB,SAAS;;;WACd,SAAQ5H,OAAR,CACL,KAAKkI,MAAL,CAAYpO,GAAZ,CAAgB,WAAhB,KACA,KACG6M,WADH,CAEG+C,mBAFH,CAEuB9B,OAFvB,EAGGxH,IAHH,CAII5F,IAAI;aAAQ,OAAK0N,MAAL,CAAYjO,GAAZ,CAAgB,WAAhB,EAA6B0P,IAA7B,EAAmCA,KAAKtQ,GAAL,GAAW,IAA9C,CAAR;KAAJ,CAJJ,CAFK,EAQL+G,IARK,CAQA,UAACuJ,IAAD,EAAU;YACT,mBAAN,EAA2BA,IAA3B;aACO,CAACA,KAAKC,MAAN,EAAcD,KAAKE,SAAnB,CAAP;KAVK,CAAP;;;WAcKC,mDAAoC;QAAjBjC,KAAiB,QAAjBA,KAAiB;QAAVkC,MAAU,QAAVA,MAAU;;UACnC,cAAN;YACQA,MAAR;WACO,IAAL;;cACQC,mBAAmBtC,gBAAgB5N,GAAhB,CAAoB+N,KAApB,CAAzB;cACImC,gBAAJ,EAAsB;mBACb,SAAQhK,OAAR,CAAgBgK,gBAAhB,CAAP;;iBAEKC,MACJnQ,GADI,CACA,yCADA,EAC2C;oBACtC;;aADsC;qBAIrC;WALN,EAOJsG,IAPI,CAQH;mBAAO8J,IAAI9F,IAAX;WARG,EAUJhE,IAVI,CAUC5F,IAAIvB,KAAJ,CAVD,EAWJmH,IAXI,CAYH,UAAC+J,KAAD,EAAW;gBACHC,aAAaD,MAAME,kBAAzB;gBACI,CAACD,UAAL,EAAiB;oBACT,IAAIhM,KAAJ,CAAU,wBAAV,CAAN;;gBAEE/E,MAAM8Q,MAAM9Q,GAAhB;gBACI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;oBACrB,IAAN;;4BAEcY,GAAhB,CAAoB4N,KAApB,EAA2BuC,UAA3B,EAAuC/Q,MAAM,IAA7C;mBACO+Q,UAAP;WAtBC,EAyBJ9P,KAzBI,CAyBE;mBAAM,6BAAN;WAzBF,CAAP;;WA2BG,IAAL;eACS,SAAQ0F,OAAR,CAAgB,6BAAhB,CAAP;;cAEM,IAAI5B,KAAJ,cAAqB2L,MAArB,yBAAN;;;;WAICL,0DAAoD;QAA9B7B,KAA8B,SAA9BA,KAA8B;QAAvBkC,MAAuB,SAAvBA,MAAuB;QAAfO,GAAe,SAAfA,GAAe;QAAVV,MAAU,SAAVA,MAAU;;UACnD,qBAAN;WACO,KAAKE,gBAAL,CAAsB,EAAEjC,YAAF,EAASkC,cAAT,EAAtB,EACJ3J,IADI,CACC5F,IAAIvB,KAAJ,CADD,EAEJmH,IAFI,CAEC;aACJ6J,MAAMnQ,GAAN,cAAqByQ,MAArB,gBAAwC;gBAC9B;sBAAA;kBAEED,GAFF;oBAGIxM,UAAU,QAAV,GAAqBjC,SAHzB;wBAAA;cAKFrC,KAAKC,GAAL;SANgC;iBAQ7B;OARX,EASG2G,IATH,CAUE;eAAO8J,IAAI9F,IAAX;OAVF,EAWEhE,IAXF,CAWO5F,IAAIvB,KAAJ,CAXP,CADI;KAFD,CAAP;;;qBAkBFuR,2BAAS;QACH,KAAK5B,YAAT,EAAuB;WAChBA,YAAL,CAAkBxI,IAAlB,CAAuB;eAAc2I,WAAWhH,KAAX,EAAd;OAAvB;;WAEK,KAAK6G,YAAZ;;;;;;;;;;qBAQF5F,yBAAQ;QACA+F,aAAaxM,SAAS,IAAT,EAAewM,UAAlC;QACI,CAACA,UAAL,EAAiB;YACT,IAAI3K,KAAJ,CAAU,2BAAV,CAAN;;QAEE2K,WAAW0B,MAAX,CAAkB,OAAlB,CAAJ,EAAgC;YACxB,IAAIrM,KAAJ,wEACiE2K,WAAWvJ,OAD5E,CAAN;;WAIKuJ,WAAW/F,KAAX,EAAP;;;;;;;;;;;;qBAUFtC,yBAAQ;;;QAGAqI,aAAaxM,SAAS,IAAT,EAAewM,UAAlC;QACI,CAACA,UAAL,EAAiB;QACbA,WAAW7F,GAAX,CAAe,OAAf,CAAJ,EAA6B6F,WAAWrI,KAAX;;;;;;;;;;;qBAS/BE,2BAAS;;QAEDmI,aAAaxM,SAAS,IAAT,EAAewM,UAAlC;QACI,CAACA,UAAL,EAAiB;QACbA,WAAW7F,GAAX,CAAe,QAAf,CAAJ,EAA8B6F,WAAWnI,MAAX;;;qBAGhC8J,+BAAUvB,QAAQ;aACP,IAAT,EAAehB,OAAf,CAAuBwC,GAAvB,CAA2BxB,MAA3B;;;qBAGFyB,mCAAYzB,QAAQ;aACT,IAAT,EAAehB,OAAf,CAAuB0C,MAAvB,CAA8B1B,MAA9B;QACI5M,SAAS,IAAT,EAAe4L,OAAf,CAAuB2C,IAAvB,KAAgC,CAApC,EAAuC;WAChCN,MAAL;;;;qBAIJtB,6CAAiBtD,SAAS;WACjByB,gBAAgB,KAAKe,QAAL,CAAc2C,qBAA9B,EAAqD,CAACnF,OAAD,EAAU,IAAV,CAArD,EACJxF,IADI,CACC,UAACqH,cAAD,EAAoB;;UAEpBA,cAAJ,EAAoB,OAAOxO,MAAM,wCAAN,EAAgD6D,KAAK8I,OAAL,CAAhD,CAAP;aACb,KAAP;KAJG,CAAP;;;;EAnUkCtB;;ACTtC,IAAMrL,UAAQC,EAAE,2BAAF,CAAd;;AAEA,SAAS8R,kBAAT,GAAkD;MAAtBC,eAAsB,uEAAJ,EAAI;MAE9CC,SAF8C,GAK5CD,eAL4C,CAE9CC,SAF8C;MAG9CC,SAH8C,GAK5CF,eAL4C,CAG9CE,SAH8C;MAI9CC,KAJ8C,GAK5CH,eAL4C,CAI9CG,KAJ8C;;MAM5C,OAAOF,SAAP,KAAqB,QAArB,IACG,OAAOC,SAAP,KAAqB,QADxB,IAEG,OAAOC,KAAP,KAAiB,QAFxB,EAEkC;UAC1B,IAAIhN,KAAJ,CAAU,qBAAV,CAAN;;SAEK;wBAAA;wBAAA;;GAAP;;;AAOF,2BAAe,UAACiN,gBAAD,EAAmBC,MAAnB;SACb,SAAQtL,OAAR,GACGI,IADH,CACQ,YAAM;4CAC0BkL,MAApC;WACOD,qDAAoBC,MAApB,EAAP;GAHJ,EAKGlL,IALH,CAMI5F,IAAI;WAAmBvB,QAAM,gBAAN,EAAwBgS,eAAxB,CAAnB;GAAJ,CANJ,EAOI,UAACxJ,KAAD,EAAW;;UAEHxE,OAAN,oBAA+BwE,MAAMxE,OAArC;YACMwE,KAAN;UACMA,KAAN;GAXN,EAcGrB,IAdH,CAcQ4K,kBAdR,CADa;CAAf;;;;ACvBA,AAGA;;;;;;AAMA,IAAMO,gBAAgB;;QAEd,QAAO,MAAP,CAFc;;WAIX,QAAO,SAAP,CAJW;;QAMd,QAAO,MAAP,CANc;;aAQT,QAAO,WAAP,CARS;;UAUZ,QAAO,QAAP;CAVV;AAYA,eAAcA,aAAd;;AAEA,IAAMC,yEACHD,cAAcE,IADX,EACkB,IADlB,oCAEHF,cAAcG,OAFX,EAEqB,IAFrB,oCAGHH,cAAcI,IAHX,EAGkB,IAHlB,oCAIHJ,cAAcK,SAJX,EAIuB,IAJvB,oCAKHL,cAAcM,IALX,EAKkB,IALlB,oCAMHN,cAAcO,MANX,EAMoB,IANpB,mBAAN;;AASA,IACqBC;;;;;mBAKPC,OAAZ,EAAqB;;;mBACL,IAAd,EAAoB,EAAEA,gBAAF,EAApB,EAAiC;;;;;UAK3BC,MAL2B;;;;;;WAW1B,IAX0B;;;;;;iBAiBpB,IAAIzS,IAAJ,EAjBoB;;;;;;YAuBzBqC,SAvByB;;;;;;;mBA8BlB,KA9BkB;;;;;;;;;iBAuCpB;;;;;;KAvCb;SA8CKqQ,UAAL,CAAgBX,cAAcE,IAA9B;;;;;;;;;;;oBASFU,yCAAeC,aAAa;YAClB3M,IAAR,CAAa,6FAAb;SACK2M,WAAL,GAAmBA,WAAnB;WACO,IAAP;;;;;;;;;;;oBASFC,qCAAaC,WAAW;YACd7M,IAAR,CAAa,6FAAb;SACK6M,SAAL,GAAiBA,SAAjB;WACO,IAAP;;;;;;;;;;oBAQFC,2BAAS;WACA,KAAKP,OAAZ;;;;;;;;;;;oBAaFE,iCAAWM,QAAQ;QACb,CAAChB,eAAegB,MAAf,CAAL,EAA6B;YACrB,IAAIpO,KAAJ,CAAU,wBAAV,CAAN;;SAEGqO,OAAL,GAAeD,MAAf;;;;;;;;;;;;;;;;;UAsBKE,+BAAW;WACT,IAAP;;;;;;;;;;;;;;;;UAcK1P,uBAAM2P,MAAM1P,SAAS;WACnBA,WAAW,IAAI,IAAJ,CAAS0P,IAAT,CAAlB;;;;;wBA9CW;aACJ,KAAKF,OAAZ;;;;wBAec;aACP,KAAKG,UAAL,IAAmB,KAAKzB,SAA/B;;sBAEY/R,OAAO;WACdwT,UAAL,GAAkBxT,KAAlB;;;;;;;ACnJJ;AACA,AAEA;AACA,AAAO,IAAMyT,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAU;MAC/B,OAAOA,IAAP,KAAgB,QAApB,EAA8B;UACtB,IAAI3G,SAAJ,CAAiB2G,IAAjB,sBAAN;;SAEK,UAAC3P,MAAD,EAAY;WACV4P,IAAP,GAAcD,IAAd;WACOJ,QAAP,GAAkB;aAASC,KAAKK,OAAL,KAAiBF,IAA1B;KAAlB;WACOrI,SAAP,CAAiBwI,QAAjB,GAA4B;aAAO,EAAED,SAASF,IAAX,EAAP;KAA5B;GAHF;CAJK;;;AAYP,AAAO,IAAMI,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;MAClC,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;QAC1B,CAAC/P,MAAMC,OAAN,CAAc8P,MAAd,CAAL,EAA4B;YACpB,IAAIhH,SAAJ,CAAiBgH,MAAjB,sBAAN;KADF,MAEO,IAAIA,OAAO3D,IAAP,CAAY;aAAS,OAAOpQ,KAAP,KAAiB,QAA1B;KAAZ,CAAJ,EAAqD;YACpD,IAAI+M,SAAJ,CAAc,yCAAd,CAAN;;;SAGG,UAAChJ,MAAD,EAAY;;;;QAIbiQ,uBAAuB/R,SACvBI,kBAAkB0B,MAAlB,EAA0B,eAA1B,CADuB,GAEvBA,OAAOkQ,aAFX;2BAGuBjQ,MAAMC,OAAN,CAAc+P,oBAAd,IACnBA,oBADmB,GACI,EAD3B;WAEOC,aAAP,GAAuBD,qBAAqB3E,MAArB,CAA4B0E,MAA5B,CAAvB;GATF;CARK;;;;;;AAyBP,AAAO,IAAMG,iBAAiB,SAAjBA,cAAiB,CAACnQ,MAAD,EAAY;MACpC9B,MAAJ,EAAY;WACH2B,KAAP,GAAevB,kBAAkB0B,MAAlB,EAA0B,OAA1B,CAAf;;CAFG;;;;;ACzCP,AACA,AACA,AAEA;;;IAGqBoQ,yBAFpBL,aAAa,CAAC,SAAD,EAAY,UAAZ,CAAb;;;;;;;0BAOe;;;iDACZ,mBADY;;UAEPM,CAAL,GAAS,EAAT;;;;;;;;;;;;;;yBA0CFC,2BAAQC,MAAM;SACPC,OAAL,GAAeD,IAAf;WACO,IAAP;;;;;;;yBAKFE,6BAAU;WACD,KAAKD,OAAZ;;;;;;;;;yBAOFE,uCAAcC,YAAY;SACnBC,QAAL,GAAgBD,UAAhB;WACO,IAAP;;;;;;;yBAKFE,yCAAgB;WACP,KAAKD,QAAZ;;;yBAGFE,+CAAmB;;;QACXd,SAAS/P,MAAMC,OAAN,CAAc,KAAKsJ,WAAL,CAAiB0G,aAA/B,IACX,KAAK1G,WAAL,CAAiB0G,aADN,GACsB,EADrC;WAEOF,OAAOjS,MAAP,CAAc,UAACyJ,MAAD,EAASuJ,KAAT,EAAmB;UAClC,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOvJ,MAAP;aACxBuJ,KAAP,IAAgB,OAAKA,KAAL,CAAhB,CAFsC;aAG/BvJ,MAAP;KAHK,EAIJ,EAJI,CAAP;;;;;;yBAQFsI,+BAAW;UACH,IAAI7O,KAAJ,CAAU,iBAAV,CAAN;;;;yBAIFmO,2BAAS;WACA,eAAc;eACV,KAAKqB,OAAL,EADU;gBAET,KAAKI,aAAL;KAFL,EAGJ,KAAKC,gBAAL,EAHI,EAGqB,KAAKhB,QAAL,EAHrB,CAAP;;;;;;;;;;;;;;;;eAiBKjQ,uBAAM2P,MAA4B;QAAtB1P,OAAsB,uEAAZ,IAAI,IAAJ,EAAY;;YAC/B+O,OAAR,GAAkBW,IAAlB,CADuC;QAEjCwB,eAAe9S,SACjBI,kBAAkBwB,QAAQ0J,WAA1B,EAAuC,eAAvC,CADiB,GAEjB1J,QAAQ0J,WAAR,CAAoB0G,aAFxB;QAGIF,SAAS/P,MAAMC,OAAN,CAAc8Q,YAAd,IAA8BA,YAA9B,GAA6C,EAA1D;aACShB,OAAOjS,MAAP,CAAc,UAACyJ,MAAD,EAASuJ,KAAT,EAAmB;UACpC,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOvJ,MAAP;aACxBuJ,KAAP,IAAgBvB,KAAKuB,KAAL,CAAhB,CAFwC;aAGjCvJ,MAAP;KAHO,EAIN,EAJM,CAAT;mBAKc1H,OAAd,EAAuBkQ,MAAvB;WACO,SAAMnQ,KAAN,YAAY2P,IAAZ,EAAkB1P,OAAlB,CAAP;;;;;wBA3GS;aACF,KAAK0J,WAAL,CAAiBoG,IAAxB;;;;;;;sBAIOW,MAAM;aACN,KAAKD,OAAL,CAAaC,IAAb,CAAP;;wBAES;aACF,KAAKE,OAAL,EAAP;;;;;;;sBAIaE,YAAY;aAClB,KAAKD,aAAL,CAAmBC,UAAnB,CAAP;;wBAEe;aACR,KAAKE,aAAL,EAAP;;;;;;;;;;;;;wBAUY;aACL,KAAKN,IAAZ;;;;;EA1CsC3B;;;;;ACP1C,AACA,AAEA;;;;;;;IAOMqC,4BANLvB,YAAY,CAAC,GAAb;;;;;;;;;;;;;;;;;;wBAae;aACL,UAAP;;;;;EAR0BU,4BAW9B;;ACGA,IAAMtU,UAAQC,EAAE,iBAAF,CAAd;;IAEqBmV;;;;;;;8BAoBhBlF,MAfH,EAeW;QAdTmF,EAcS,QAdTA,EAcS;QAbTC,OAaS,QAbTA,OAaS;QAZTC,SAYS,QAZTA,SAYS;QAXTC,SAWS,QAXTA,SAWS;QAVTC,aAUS,QAVTA,aAUS;QATTC,WASS,QATTA,WASS;iCARTC,YAQS;QARTA,YAQS,qCARM,EAQN;4BAPTC,OAOS;QAPTA,OAOS,gCAPC,EAOD;8BANTvC,SAMS;QANTA,SAMS,kCANG,KAMH;2BALTwC,MAKS;QALTA,MAKS,+BALA,KAKA;0BAJTC,KAIS;QAJTA,KAIS,8BAJD,KAIC;QAFNjB,UAEM;;;;iDACT,wBADS;;0BAEW;;;;;;YAAA;;;;;;sBAAA;;;;;;0BAAA;;;;;;0BAAA;;;;;;kCAAA;;;;;;8BAAA;;;;;;gCAAA;;;;;;sBAAA;;;;;;0BAAA;;;;;;;oBAAA;;;;;;;KAApB;UAqEKkB,WAAL,GAAmBlB,UAAnB;UACKmB,MAAL;UACKJ,OAAL,GAAe,YAAW,SAAQ,MAAKA,OAAb,CAAX,CAAf;mBACctS,eAAd,EAA8B;iCACD,EADC;uBAEX,IAFW;kBAGhB,IAHgB;2BAIP;KAJvB;QAMI4M,kBAAkB+F,QAAtB,EAAgC;YACzBC,OAAL,GAAehG,MAAf;KADF,MAEO;YACC,IAAIhD,SAAJ,CAAc,gDAAd,CAAN;;KAGA,QADF,EAEE,eAFF,EAGE,aAHF,EAIE,SAJF,EAKE,SALF,EAME,uBANF,EAOE,kBAPF,EAQE,eARF,EASE,eATF,EAUEvI,OAVF,CAUU;aAAS,MAAKqL,EAAL,CACjBhH,KADiB,EAEjB;0CAAIG,OAAJ;iBAAA;;;eAAgB,MAAKgN,MAAL,CAAenN,KAAf,yBAA0CG,OAA1C,CAAhB;OAFiB,CAAT;KAVV;;oBAegB,MAAK+M,OAAL,CAAa/G,QAAb,CAAsBiH,oBAAtC;;;;yBA8CFC,mDAAoBlW,OAAO;QACnBuB,OAAOD,WAAWtB,KAAX,CAAb;QACI,EAAEuB,OAAO4B,SAAS,IAAT,EAAegT,eAAxB,CAAJ,EAA8C;eACnC,IAAT,EAAeA,eAAf,GAAiC5U,IAAjC;;;;;;WAMK0H,IAAL,CAAU,uBAAV;;;;;;;;;;yBAYJmN,yCAAepW,OAAO;QACduB,OAAOD,WAAWtB,KAAX,CAAb;QACI,EAAEuB,OAAO4B,SAAS,IAAT,EAAekT,UAAxB,CAAJ,EAAyC;eAC9B,IAAT,EAAeA,UAAf,GAA4B9U,IAA5B;;;;;;WAMK0H,IAAL,CAAU,kBAAV;;;;;;;;;;;;;;;;;;;yBAyBJwL,uCAAcvR,KAAqB;;;QAAhBoT,MAAgB,uEAAP,KAAO;;YACzBjQ,IAAR,CAAa,0IAAb;SACK2P,MAAL,4BAAqC,gBAAe9S,GAAf,CAArC,iBAAoEoT,MAApE;QACI,CAAChT,cAAcJ,GAAd,CAAL,EAAyB;YACjB,IAAI6J,SAAJ,CAAc,mCAAd,CAAN;;QAEE,CAACuJ,MAAL,EAAa;WACNzV,GAAL,CAAS,MAAT,EAAiBqC,GAAjB;KADF,MAEO;mBACOA,GAAZ,EAAiBsB,OAAjB,CAAyB;eAAO,OAAK+R,YAAL,CAAkB5V,GAAlB,EAAuBuC,IAAIvC,GAAJ,CAAvB,CAAP;OAAzB;;WAEK,IAAP;;;;;;;;;;;yBASF4V,qCAAa5V,KAAKX,OAAO;YACfqG,IAAR,CAAa,4JAAb;WACO,KAAKxF,GAAL,WAAiBF,GAAjB,EAAwBX,KAAxB,CAAP;;;;;;;;;;;;;;yBAkBFwW,2BAAQxW,OAAO;YACLqG,IAAR,CAAa,mJAAb;WACO,KAAKxF,GAAL,CAAS,MAAT,EAAiBb,KAAjB,CAAP;;;;;;;;;;;yBASFU,mBAAIC,KAAK;WACAwC,SAAS,IAAT,EAAesT,iBAAf,CAAiC9V,GAAjC,CAAP;;;;;;;;;;;;;;;;;;;;;yBAmBFE,mBAAIF,KAAKX,OAAO;SACTgW,MAAL,WAAoBrV,GAApB,WAA6BX,KAA7B;QACM0W,oBAAoBvT,SAAS,IAAT,EAAeuT,iBAAzC;QACMC,cAAc,aAAYD,iBAAZ,CAApB;;;QAGME,KAAK,IAAIC,MAAJ,OAAelW,GAAf,CAAX;QACMmW,YAAYH,YAAY7T,MAAZ,CAAmB8T,GAAGG,IAAH,CAAQ5P,IAAR,CAAayP,EAAb,CAAnB,CAAlB;cACUpS,OAAV,CAAkB,UAACwS,CAAD,EAAO;aAChBN,kBAAkBM,CAAlB,CAAP;KADF;QAGIF,UAAU7V,MAAd,EAAsB;wBACFN,GAAlB,IAAyBX,KAAzB;KADF,MAEO;;;;UAICiX,YAAY,YAAWN,WAAX,EAAwB;eAAKhW,IAAIyB,OAAJ,CAAY4U,CAAZ,MAAmB,CAAxB;OAAxB,CAAlB,CAJK;UAKDC,SAAJ,EAAe;iBACJP,kBAAkBO,SAAlB,CAAT,EAAuCtW,IAAIQ,KAAJ,CAAU8V,UAAUhW,MAAV,GAAmB,CAA7B,CAAvC,EAAwEjB,KAAxE;OADF,MAEO;0BACaW,GAAlB,IAAyBX,KAAzB;;;;aAIK,IAAT,EAAeyW,iBAAf,GAAmC,aAAYC,iBAAZ,EAChC5U,MADgC,CAE/B,UAACiC,MAAD,EAASiT,CAAT;aAAe9S,SAASH,MAAT,EAAiBiT,CAAjB,EAAoBN,kBAAkBM,CAAlB,CAApB,CAAf;KAF+B,EAG/BE,UAAU,KAAKtB,WAAf,CAH+B,CAAnC;WAKO,IAAP;;;yBAGFC,2BAAS;aACE,IAAT,EAAea,iBAAf,GAAmC,EAAnC;aACS,IAAT,EAAeD,iBAAf,GAAmC,KAAKb,WAAxC;;;yBAGFI,2BAAkB;uCAAR9D,MAAQ;YAAA;;;6BACPA,MAAT,eAAqB,KAAKgD,EAA1B;;;yBAGFiC,uBAAM3K,SAAkB;;;;QAElBA,QAAQW,GAAR,KAAgB,IAApB,EAA0B;cAChBA,GAAR,GAAc,MAAd;;QAEEX,QAAQW,GAAR,KAAgB,MAAhB,IAA0BX,QAAQ4K,WAAR,KAAwB,IAAtD,EAA4D;cAClDA,WAAR,GAAsB,IAAIzY,WAAJ,EAAtB;;QAEE6N,QAAQ4K,WAAR,IAAuB5K,QAAQ4K,WAAR,CAAoBC,GAApB,KAA4B,IAAvD,EAA6D;cACnDD,WAAR,CAAoBC,GAApB,GAA0B,KAAKnC,EAA/B;;;;uCATc5O,IAAM;UAAA;;;WAYf,gBAAKyP,OAAL,EAAaoB,KAAb,iBAAmB3K,OAAnB,SAA+BlG,IAA/B,EAAP;;;;;;;;yBAMFgR,uBAAO;;;SACAtB,MAAL,CAAY,MAAZ;QACMuB,OAAOpU,SAAS,IAAT,EAAeuT,iBAA5B;QACIc,QAAQD,IAAR,CAAJ,EAAmB;WACZvB,MAAL,CAAY,oCAAZ;aACO,SAAQpP,OAAR,CAAgB,IAAhB,CAAP;;SAEGoP,MAAL,CAAY,UAAZ,EAAwBuB,IAAxB;QACMH,cAAc,IAAIzY,WAAJ,CAAgB;YAC5B,IAAIT,iBAAJ,CAAsB;cACpB,gBAAeqZ,IAAf;OADF;KADY,CAApB;WAKO,KACJJ,KADI,CACE,IAAI/X,cAAJ,CAAmB;UACpB,QADoB;;KAAnB,CADF,EAKJ4H,IALI,CAKC,UAACyQ,UAAD,EAAgB;aACfpC,SAAL,GAAiBoC,WAAWL,WAAX,CAAuBM,KAAxC;aACK9B,WAAL,GAAmBzS,iBAAesT,iBAAlC;uBACeC,iBAAf,GAAmC,EAAnC;;KARG,CAAP;;;;;;;;;yBAiBFiB,yBAAQ;;;WACC,KACJ5B,OADI,CAEJ6B,QAFI,GAGJC,OAHI,CAGI,UAHJ,EAGgB,KAAK3C,EAHrB,EAIJ4C,IAJI,GAKJ9Q,IALI,CAKC;;KALD,CAAP;;;;;;;;;yBAYF+Q,uBAAO;;;SACA/B,MAAL,CAAY,MAAZ;WACO,KAAKmB,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;UAC/B;KADY,CAAX,EAEH4H,IAFG,CAEE,YAAM;UACT,CAAC,OAAKkM,SAAV,EAAqB;eACdyC,KAAL,GAAa,IAAb;eACKH,YAAL,GAAoB9S,MAAM,OAAK8S,YAAX,EAAyB,CAAC,OAAKO,OAAL,CAAab,EAAd,CAAzB,CAApB;;;KALG,CAAP;;;;;;;;;yBAeF8C,2BAAS;;;SACFhC,MAAL,CAAY,QAAZ;WACO,KAAKmB,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;UAC/B;KADY,CAAX,EAEH4H,IAFG,CAEE,YAAM;UACT,CAAC,OAAKkM,SAAV,EAAqB;eACdyC,KAAL,GAAa,KAAb;eACKH,YAAL,GAAoB3S,WAAW,OAAK2S,YAAhB,EAA8B,CAAC,OAAKO,OAAL,CAAab,EAAd,CAA9B,CAApB;;;KALG,CAAP;;;;;;;;;yBAeF+C,yBAAQ;SACDjC,MAAL,CAAY,QAAZ;WACO,KAAKmB,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;UAC/B;KADY,CAAX,EAEH4H,IAFG,CAEE;aAAcyQ,WAAWL,WAAX,CAAuBa,KAArC;KAFF,CAAP;;;;;;;;;;yBAUF1G,mBAAI2G,WAAW;;;SACRlC,MAAL,CAAY,KAAZ,EAAmBkC,SAAnB;QACI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;kBACrB,CAACA,SAAD,CAAZ,CADiC;;QAG7Bd,cAAc,IAAIzY,WAAJ,CAAgB;SAC/BuZ;KADe,CAApB;WAGO,SAAQtR,OAAR,CACL,IAAIxH,cAAJ,CAAmB;UACb,KADa;;KAAnB,CADK,EAKL4H,IALK,CAKA,UAACwF,OAAD,EAAa;UACd,OAAKuJ,OAAL,CAAavH,OAAb,CAAqB2J,4BAAzB,EAAuD;YAC/CjG,UAAS,CAAC,OAAKgD,EAAN,EAAU,OAAKa,OAAL,CAAab,EAAvB,EAA2BgD,UAAUE,IAAV,EAA3B,EAA6C,KAA7C,CAAf;eACOC,oBAAoB,OAAKtC,OAAL,CAAavH,OAAb,CAAqB2J,4BAAzC,EAAuEjG,OAAvE,EACJlL,IADI,CACC,UAAC6K,eAAD,EAAqB;yBACXrF,QAAQ4K,WAAtB,EAAmCzV,SAAS;uBAC/B,GAD+B;uBAE/B,GAF+B;mBAGnC;WAH0B,EAIhCkQ,eAJgC,CAAnC;iBAKOrF,OAAP;SAPG,CAAP;;aAUKA,OAAP;KAlBK,EAmBJxF,IAnBI,CAoBL,KAAKmQ,KAAL,CAAWhQ,IAAX,CAAgB,IAAhB,CApBK,EAqBLH,IArBK,CAqBA,YAAM;UACP,CAAC,OAAKkM,SAAN,IAAmB,CAAC,OAAKwC,MAA7B,EAAqC;eAC9BD,OAAL,GAAe/S,MAAM,OAAK+S,OAAX,EAAoByC,SAApB,CAAf;;;KAvBG,CAAP;;;;;;;;;;yBAkCFI,yBAAOJ,WAAW;;;SACXlC,MAAL,CAAY,QAAZ,EAAsBkC,SAAtB;QACI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;kBACrB,CAACA,SAAD,CAAZ,CADiC;;QAG7Bd,cAAc,IAAIzY,WAAJ,CAAgB;SAC/BuZ;KADe,CAApB;WAGO,SAAQtR,OAAR,CACL,IAAIxH,cAAJ,CAAmB;UACb,QADa;;KAAnB,CADK,EAKL4H,IALK,CAKA,UAACwF,OAAD,EAAa;UACd,OAAKuJ,OAAL,CAAavH,OAAb,CAAqB2J,4BAAzB,EAAuD;YAC/CjG,WAAS,CAAC,OAAKgD,EAAN,EAAU,OAAKa,OAAL,CAAab,EAAvB,EAA2BgD,UAAUE,IAAV,EAA3B,EAA6C,QAA7C,CAAf;eACOC,oBAAoB,OAAKtC,OAAL,CAAavH,OAAb,CAAqB2J,4BAAzC,EAAuEjG,QAAvE,EACJlL,IADI,CACC,UAAC6K,eAAD,EAAqB;yBACXrF,QAAQ4K,WAAtB,EAAmCzV,SAAS;uBAC/B,GAD+B;uBAE/B,GAF+B;mBAGnC;WAH0B,EAIhCkQ,eAJgC,CAAnC;iBAKOrF,OAAP;SAPG,CAAP;;aAUKA,OAAP;KAlBK,EAmBJxF,IAnBI,CAoBL,KAAKmQ,KAAL,CAAWhQ,IAAX,CAAgB,IAAhB,CApBK,EAqBLH,IArBK,CAqBA,YAAM;UACP,CAAC,OAAKkM,SAAN,IAAmB,CAAC,OAAKwC,MAA7B,EAAqC;eAC9BD,OAAL,GAAe5S,WAAW,OAAK4S,OAAhB,EAAyByC,SAAzB,CAAf;;;KAvBG,CAAP;;;;;;;;;yBAiCFK,uBAAO;SACAvC,MAAL,CAAY,MAAZ;WACO,KAAKzE,GAAL,CAAS,KAAKwE,OAAL,CAAab,EAAtB,CAAP;;;;;;;;;yBAOFsD,uBAAO;SACAxC,MAAL,CAAY,MAAZ;WACO,KAAKsC,MAAL,CAAY,KAAKvC,OAAL,CAAab,EAAzB,CAAP;;;;;;;;;;;;;;;;;;yBAgBFnK,qBAAKlH,SAAS2K,SAAS;;;SAChBwH,MAAL,CAAYnS,OAAZ,EAAqB,MAArB;QACI,EAAEA,mBAAmB8O,OAArB,CAAJ,EAAmC;YAC3B,IAAI5F,SAAJ,CAAiBlJ,OAAjB,uBAAN;;QAEI6K,WAAW,eAAc,EAAd,EAAkBF,OAAlB,CAAjB;;QAEIE,SAAS+J,OAAT,KAAqBhW,SAAzB,EAAoC;cAC1B4D,IAAR,CAAa,kFAAb;UACIqI,SAASgK,OAAT,KAAqBjW,SAAzB,EAAoCiM,SAASgK,OAAT,GAAmBhK,SAAS+J,OAA5B;;;0BAQlC;;;iBAGW5U,QAAQqP,SADrB;eAEWrP,QAAQmP;KAJjB;;YAOMzF,WAAR,CAAoBoL,WAPlB,EAQFjK,QARE,CAjBiB;QAYnBwE,SAZmB,mBAYnBA,SAZmB;QAanBwF,OAbmB,mBAanBA,OAbmB;QAcnBE,QAdmB,mBAcnBA,QAdmB;QAenBC,QAfmB,mBAenBA,QAfmB;QAgBnBC,IAhBmB,mBAgBnBA,IAhBmB;;QA2BjBJ,OAAJ,EAAa;UACP,KAAKxF,SAAT,EAAoB;gBACV7M,IAAR,CAAa,6DAAb;OADF,MAEO,IAAI6M,SAAJ,EAAe;gBACZ7M,IAAR,CAAa,+DAAb;OADK,MAEA,IAAI,KAAKoP,OAAL,CAAaxU,MAAb,GAAsB,CAA1B,EAA6B;gBAC1BoF,IAAR,CAAa,sEAAb,EADkC;;;QAIlCuS,YAAY,CAAC,KAAK1F,SAAtB,EAAiC;cACvB7M,IAAR,CAAa,kEAAb;;mBAEYxC,OAAd,EAAuB;WAChB,KAAKqR,EADW;YAEf,KAAKa,OAAL,CAAab;KAFrB;YAIQpC,UAAR,CAAmBX,cAAcG,OAAjC;QACItF,MAAMnJ,QAAQsP,MAAR,EAAV;QACI,OAAOnG,GAAP,KAAe,QAAnB,EAA6B;YACrB,gBAAeA,GAAf,CAAN;;QAEE+L,cAAc,KAAK5B,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;WACzC,QADyC;qBAE/B,IAAIZ,aAAJ,CAAkB;gBAAA;aAE1B,KAAK0W,EAFqB;WAG5BwD,OAH4B;4BAAA;YAK3B7U,QAAQqR,EALmB;kBAMrB,gBAAe2D,QAAf,CANqB;;OAAlB,CAF+B;;KAAnB,CAAX,EAYd,CAAC3F,SAZa,CAAlB;QAaI,CAACA,SAAL,EAAgB;oBACA6F,YAAY/R,IAAZ,CAAiB,UAACyQ,UAAD,EAAgB;oCASvCA,UATuC,CAE3CuB,UAF2C;YAGzCC,GAHyC,yBAGzCA,GAHyC;YAIzCC,CAJyC,yBAIzCA,CAJyC;YAKzCvO,IALyC,yBAKzCA,IALyC;YAMzCC,MANyC,yBAMzCA,MANyC;YAOzCe,OAPyC,yBAOzCA,OAPyC;;YAUzChB,SAAS,IAAb,EAAmB;gBACXc,YAAY;sBAAA,EACVb,cADU,EACFe;WADV,CAAN;;uBAIY9H,OAAd,EAAuB;cACjBoV,GADiB;qBAEV,IAAI7Y,IAAJ,CAAS8Y,EAAExX,QAAF,EAAT;SAFb;eAIK6T,WAAL,GAAmB1R,OAAnB;eACKyR,aAAL,GAAqBzR,QAAQkO,SAA7B;OApBY,CAAd;;WAuBKgH,YAAY/R,IAAZ,CAAiB,YAAM;cACpB8L,UAAR,CAAmBX,cAAcI,IAAjC;UACImG,OAAJ,EAAa;yBACIS,yBAAf,CAAyCtV,QAAQqR,EAAjD,IAAuDrR,OAAvD;;aAEKA,OAAP;KALK,EAMJ,UAACwE,QAAD,EAAW;cACJyK,UAAR,CAAmBX,cAAcO,MAAjC;YACMrK,QAAN;KARK,CAAP;;;yBAYF+Q,2BAAQvV,SAASwV,YAAYC,QAAQ;;;SAC9BtD,MAAL,CAAY,gBAAZ,EAA8BnS,OAA9B,EAAuCwV,UAAvC,EAAmDC,MAAnD;QACIzV,mBAAmB8O,OAAvB,EAAgC;UAC1B9O,QAAQiF,IAAR,KAAiB,KAAKiN,OAAL,CAAab,EAAlC,EAAsC;cAC9B,IAAIlQ,KAAJ,CAAU,6CAAV,CAAN;;UAEEnB,QAAQuP,MAAR,KAAmBjB,cAAcI,IAAjC,IAAyC1O,QAAQuP,MAAR,KAAmBjB,cAAcK,SAA9E,EAAyF;cACjF,IAAIxN,KAAJ,CAAU,qBAAV,CAAN;;KALJ,MAOO,IAAI,EAAEnB,QAAQqR,EAAR,IAAcrR,QAAQkO,SAAxB,CAAJ,EAAwC;YACvC,IAAIhF,SAAJ,CAAiBlJ,OAAjB,uBAAN;;QAEEmH,OAAO,IAAX;QACI,CAACsO,MAAL,EAAa;aACJD,WAAWlG,MAAX,EAAP;UACI,OAAOnI,IAAP,KAAgB,QAApB,EAA8B;eACrB,gBAAeA,IAAf,CAAP;;;WAGG,KAAKmM,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;WAC9BG,YAAYga,KADkB;UAE/B/Z,OAAOga,MAFwB;oBAGrB,IAAIna,YAAJ,CAAiB;iBACpB,CAAC,IAAIC,SAAJ,CAAc;eACjB,KAAK4V,EADY;eAEjBrR,QAAQqR,EAFS;qBAGX1J,OAAO3H,QAAQkO,SAAf,CAHW;wBAAA;;SAAd,CAAD,CADoB;uBAQd,KAAKgE,OAAL,CAAa0D;OARhB;KAHE,CAAX,EAaHzS,IAbG,CAaE,YAAM;UAEXkO,EAFW,GAGTrR,OAHS,CAEXqR,EAFW;UAEPmC,GAFO,GAGTxT,OAHS,CAEPwT,GAFO;UAEFtF,SAFE,GAGTlO,OAHS,CAEFkO,SAFE;UAESjJ,IAFT,GAGTjF,OAHS,CAESiF,IAFT;UAEeuK,OAFf,GAGTxP,OAHS,CAEewP,OAFf;;qBAICgG,UAAd,EAA0B;cAAA,EACpBhC,QADoB,EACftF,oBADe,EACJjJ,UADI,EACEuK;OAD5B;UAGI,QAAKkC,WAAL,CAAiBL,EAAjB,KAAwBmE,WAAWnE,EAAvC,EAA2C;gBACpCK,WAAL,GAAmB8D,UAAnB;;aAEKA,UAAP;KAvBK,CAAP;;;;;;;;;;yBAgCFK,yBAAO7V,SAASwV,YAAY;QACtB,EAAEA,sBAAsB1G,OAAxB,CAAJ,EAAsC;YAC9B,IAAI5F,SAAJ,CAAiBsM,UAAjB,uBAAN;;WAEK,KAAKD,OAAL,CAAavV,OAAb,EAAsBwV,UAAtB,EAAkC,KAAlC,CAAP;;;;;;;;;yBAOFC,yBAAOzV,SAAS;WACP,KAAKuV,OAAL,CAAavV,OAAb,EAAsB,IAAImR,eAAJ,EAAtB,EAA6C,IAA7C,CAAP;;;;;;;;;;;;;;;;yBAcF2E,yCAA4B;;;QAAdnL,OAAc,uEAAJ,EAAI;;SACrBwH,MAAL,CAAY,mBAAZ,EAAiCxH,OAAjC;QACIA,QAAQoL,eAAR,IAA2B,CAACpL,QAAQqL,UAAxC,EAAoD;YAC5C,IAAI7U,KAAJ,CAAU,kEAAV,CAAN;;QAEEwJ,QAAQsL,cAAR,IAA0B,CAACtL,QAAQuL,SAAvC,EAAkD;YAC1C,IAAI/U,KAAJ,CAAU,gEAAV,CAAN;;QAEIgV,aAAarY,SAAS;kBACd,GADc;uBAET,KAFS;iBAGf,IAHe;sBAIV,MAJU;aAKnB;KALU,EAMhB6M,OANgB,CAAnB;QAOIwL,WAAWd,CAAX,YAAwB9Y,IAA5B,EAAkC;iBACrB8Y,CAAX,GAAec,WAAWd,CAAX,CAAae,OAAb,EAAf;;QAEED,WAAWE,EAAX,YAAyB9Z,IAA7B,EAAmC;iBACtB8Z,EAAX,GAAgBF,WAAWE,EAAX,CAAcD,OAAd,EAAhB;;WAEK,KAAK9C,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;WAC9B,MAD8B;mBAEtB,IAAIP,WAAJ,CACX,eAAcmb,UAAd,EAA0B;aACnB,KAAK9E;OADZ,CADW;KAFG,CAAX,EAOHlO,IAPG,CAOE;aACP,SAAQmT,GAAR,CAAY1C,WAAW2C,WAAX,CAAuBC,IAAvB,CAA4BnX,GAA5B,CAAgC;YAC1CoX,KAD0C,SAC1CA,KAD0C;YAE1CvI,SAF0C,SAE1CA,SAF0C;YAG1CwI,cAH0C,SAG1CA,cAH0C;YAI1CzR,IAJ0C,SAI1CA,IAJ0C;YAK1C0R,KAL0C,SAK1CA,KAL0C;YAM1CC,MAN0C,SAM1CA,MAN0C;YAO1CzP,IAP0C,SAO1CA,IAP0C;eAS1C,QAAK+K,OAAL,CAAa2E,cAAb,CAA4B9W,KAA5B,CAAkCoH,IAAlC,EAAwChE,IAAxC,CAA6C,UAACnD,OAAD,EAAa;cAClD8W,eAAe;gBACfL,KADe;iBAEd,QAAKpF,EAFS;uBAGR,IAAI9U,IAAJ,CAAS2R,UAAUrQ,QAAV,EAAT,CAHQ;sBAAA;yBAKN8Y;WALf;cAOID,cAAJ,EAAoB;yBACLlF,SAAb,GAAyB,IAAIjV,IAAJ,CAASma,eAAe7Y,QAAf,EAAT,CAAzB;;yBAEYmC,OAAd,EAAuB8W,YAAvB;cACIvH,SAASjB,cAAcI,IAA3B;cACI,QAAKkD,OAAL,CAAaxU,MAAb,KAAwB,CAA5B,EAA+B;gBACzBuZ,KAAJ,EAAWpH,SAASjB,cAAcK,SAAvB;gBACPgI,KAAJ,EAAW,QAAKtE,mBAAL,CAAyBsE,KAAzB;gBACPC,MAAJ,EAAY,QAAKrE,cAAL,CAAoBqE,MAApB;;kBAEN3H,UAAR,CAAmBM,MAAnB;iBACOvP,OAAP;SAnBF,CAT0C;OAAhC,CAAZ,CADO;KAPF,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAoEF+W,2DAAoE;;;oFAAJ,EAAI;QAA3Cf,UAA2C,SAA3CA,UAA2C;QAA/BD,eAA+B,SAA/BA,eAA+B;QAAdiB,KAAc,SAAdA,KAAc;;QAC9D7Z,gBAAJ;WACO;YACC,gBAAM;YACNA,YAAYyB,SAAhB,EAA2B;;oBAEf,QAAKkX,aAAL,CAAmB;wBAAA;kCAAA;;WAAnB,CAAV;SAFF,MAOO;oBACK3Y,QAAQgG,IAAR,CAAa,UAAC8T,YAAD,EAAkB;gBACnCA,aAAa7Z,MAAb,KAAwB,CAAxB,IAA6B6Z,aAAa7Z,MAAb,GAAsB4Z,KAAvD,EAA8D;;qBAErD,EAAP;;mBAEK,QAAKlB,aAAL,CAAmB;0BACZmB,aAAa,CAAb,EAAgB/I,SADJ;+BAEP+I,aAAa,CAAb,EAAgB5F,EAFT;;aAAnB,CAAP;WALQ,CAAV;;eAYKlU,QAAQgG,IAAR,CAAa;iBAAU;mBACrB,YAAWhH,KAAX,CADqB;kBAEtBA,MAAMiB,MAAN,KAAiB,CAAjB,IAAsBjB,MAAMiB,MAAN,GAAe4Z;WAFzB;SAAb,CAAP;;KAtBJ;;;;;;;;;yBAkCFE,uBAAO;SACAC,mBAAL,GAA2B,CAA3B;;QAEI,KAAK9H,SAAT,EAAoB,OAAO,SAAQtM,OAAR,CAAgB,IAAhB,CAAP;QACdmJ,SAAS,KAAKgG,OAApB;QACI,CAAC5S,SAAS4M,MAAT,EAAiBkL,uBAAtB,EAA+C;eACpClL,MAAT,EAAiBkL,uBAAjB,GAA2C,UAA3C;;aAEOlL,MAAT,EAAiBkL,uBAAjB,CAAyC1J,GAAzC,CAA6C,IAA7C;WACO2J,WAAP;WACO,SAAQtU,OAAR,CAAgB,IAAhB,CAAP;;;;;;;;;;yBAQFuU,mCAAa;YACH9U,IAAR,CAAa,qEAAb;WACO,KAAK0U,IAAL,EAAP;;;yBAGFK,gDAA+C;QAA9BC,SAA8B,SAA9BA,SAA8B;QAAnBtJ,SAAmB,SAAnBA,SAAmB;QAARgJ,IAAQ,SAARA,IAAQ;;QACzCA,IAAJ,EAAU;WACH3E,cAAL,CAAoBrE,SAApB;KADF,MAEO;WACAmE,mBAAL,CAAyBnE,SAAzB;;;oBAEoC5O,SAAS,IAAT,CANO;QAMrCgW,yBANqC,aAMrCA,yBANqC;;QAOvCtV,UAAUsV,0BAA0BkC,SAA1B,CAAhB;QACI,CAACxX,OAAL,EAAc;YACNiP,UAAR,CAAmBX,cAAcK,SAAjC;YACQ8I,WAAR,GAAsBvJ,SAAtB;WACOoH,0BAA0BkC,SAA1B,CAAP;;;;;;;;;;SAUKpS,IAAL,CAAU,SAAV,EAAqB,EAAEpF,gBAAF,EAArB;;;;;;;;;;yBAQF0X,2DAAyB;;;WAChB,KAAKpE,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;UAC/B;KADY,CAAX,EAEH4H,IAFG,CAEE,iBAKH;oCAJJoQ,WAII;UAHFoE,gBAGE,qBAHFA,gBAGE;UAFFC,eAEE,qBAFFA,eAEE;;cACCvF,mBAAL,CAAyBuF,eAAzB;cACKrF,cAAL,CAAoBoF,gBAApB;;KATK,CAAP;;;yBAcFE,mEAA6B;QACrBtE,cAAc,IAAIzY,WAAJ,CAAgB;uBACjB;KADC,CAApB;WAGO,KAAKwY,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;UAC/B,UAD+B;;KAAnB,CAAX,EAGH4H,IAHG,CAGE;UAEL2U,aAFK,SACPvE,WADO,CAELuE,aAFK;aAIHA,cACH7Y,MADG,CACI;eAAgB8Y,aAAaH,eAAb,IAAgCG,aAAaJ,gBAA7D;OADJ,EAEHtY,GAFG,CAEC;YAAG2Y,GAAH,SAAGA,GAAH;YAAQJ,eAAR,SAAQA,eAAR;YAAyBD,gBAAzB,SAAyBA,gBAAzB;eAAiD;kBAAA;2BAEnCla,WAAWma,eAAX,CAFmC;sBAGxCna,WAAWka,gBAAX;SAHT;OAFD,CAJG;KAHF,CAAP;;;;;sBA9xBsBxb,OAAO;UACzBA,UAAU,KAAKgb,mBAAnB,EAAwC;iBAC7B,IAAT,EAAeA,mBAAf,GAAqChb,KAArC;aACK+V,OAAL,CAAa9M,IAAb,CAAkB,2BAAlB,EAA+C,CAAC,IAAD,CAA/C;;;;;;;;wBAOsB;aACjB9F,SAAS,IAAT,EAAe6X,mBAAtB;;;;sBAGYhb,OAAO;WACd8b,UAAL,GAAkBxa,WAAWtB,KAAX,CAAlB;;wBAEc;aACP,KAAK8b,UAAZ;;;;sBAEY9b,OAAO;WACdwT,UAAL,GAAkBlS,WAAWtB,KAAX,CAAlB;;wBAEc;aACP,KAAKwT,UAAZ;;;;sBAEgBxT,OAAO;UACjB+b,OAAOza,WAAWtB,KAAX,CAAb;UACI+b,QAAQ,KAAKC,cAAjB,EAAiC;WAC5BA,cAAL,GAAsBD,IAAtB;;wBAEkB;aACX,KAAKC,cAAZ;;;;;;;;;;wBAOoB;UAChB,KAAKvG,OAAL,CAAaxU,MAAb,KAAwB,CAA5B,EAA+B,OAAO,IAAP;aACxBkC,SAAS,IAAT,EAAegT,eAAtB;;;;wBAmBe;UACX,KAAKV,OAAL,CAAaxU,MAAb,KAAwB,CAA5B,EAA+B,OAAO,IAAP;aACxBkC,SAAS,IAAT,EAAekT,UAAtB;;;;wBAqBe;cACPhQ,IAAR,CAAa,+IAAb;aACO,KAAK3F,GAAL,CAAS,MAAT,CAAP;;sBAEaV,OAAO;cACZqG,IAAR,CAAa,sJAAb;WACKxF,GAAL,CAAS,MAAT,EAAiBb,KAAjB;;;;wBAqCS;aACF,KAAKU,GAAL,CAAS,MAAT,CAAP;;sBAEOV,OAAO;WACTa,GAAL,CAAS,MAAT,EAAiBb,KAAjB;;;;;EA7PsCkL;;ACxB1C,IAAMrL,UAAQC,EAAE,sBAAF,CAAd;;IAEqBmc;oBACZC,2BAAQlc,OAAO;QAChBA,iBAAiBI,IAArB,EAA2B;aAClB,EAAEoB,QAAQ,MAAV,EAAkBC,KAAKzB,MAAMmT,MAAN,EAAvB,EAAP;;QAEEnT,iBAAiB6W,MAArB,EAA6B;aACpB7W,MAAMmc,MAAb;;WAEKnc,KAAP;;;oBAGKoc,yBAAOC,GAAG;mBACFA,EAAEC,OAAF,CAAU,KAAV,EAAiB,aAAjB,CAAb;;;oBAGKC,yCAAe/N,SAAS;WACtB,CACL,2BADK,EAEL,SAFK,EAGL1M,MAHK;;cAKJ0a,IAAD,EAAO7b,GAAP;aAAe,CAAC6b,QAAQ,CAAT,IAAeC,OAAD,CAAUjO,QAAQ7N,GAAR,CAAV,CAA7B;KALK,EAML,CANK,CAAP;;;;;;;;;6BAcUoP,MAAZ,EAAoB;;;SACbgG,OAAL,GAAehG,MAAf;SACK2M,MAAL,GAAc,EAAd;SACKC,aAAL,GAAqB,EAArB;;;8BAGFC,uCAAcjc,KAAKkc,WAAW7c,OAAO;;QAE/B,CAAC,KAAK0c,MAAL,CAAY/b,GAAZ,CAAL,EAAuB;WAChB+b,MAAL,CAAY/b,GAAZ,IAAmB,EAAnB;;SAEG+b,MAAL,CAAY/b,GAAZ,EAAiBkc,SAAjB,IAA8B,KAAKtP,WAAL,CAAiB2O,OAAjB,CAAyBlc,KAAzB,CAA9B;WACO,IAAP;;;8BAGFmT,2BAAS;QACDI,OAAO;aACJ,KAAKmJ,MADD;YAEL,KAAKnP,WAAL,CAAiBgP,cAAjB,CAAgC,KAAKI,aAArC;KAFR;QAII,OAAO,KAAKG,KAAZ,KAAsB,WAA1B,EAAuCvJ,KAAKwJ,IAAL,GAAY,KAAKD,KAAjB;QACnC,OAAO,KAAKE,MAAZ,KAAuB,WAA3B,EAAwCzJ,KAAKsH,KAAL,GAAa,KAAKmC,MAAlB;QACpC,OAAO,KAAKC,MAAZ,KAAuB,WAA3B,EAAwC1J,KAAK6E,IAAL,GAAY,KAAK6E,MAAjB;YAClC1J,IAAN;WACOA,IAAP;;;;;;;;;;8BAQF2J,2CAAgBC,SAAS;WAChB,KAAKC,WAAL,CAAiB,GAAjB,EAAsBD,OAAtB,CAAP;;;;;;;;;;;;8BAUFE,mCAAYF,SAASG,aAAa;QAC1BC,aAAa,SAAQJ,OAAR,CAAnB;QACIG,WAAJ,EAAiB;iBACJ/L,GAAX,CAAe,KAAKwE,OAAL,CAAab,EAA5B;;SAEGsI,WAAL,CAAiB,GAAjB,EAAsBD,WAAW7L,IAAjC;WACO,KAAKwL,eAAL,CAAqB,YAAWK,UAAX,CAArB,CAAP;;;;;;;;;;;;8BAUF1F,2BAAQlX,KAAKX,OAAO;SACb0c,MAAL,CAAY/b,GAAZ,IAAmB,KAAK4M,WAAL,CAAiB2O,OAAjB,CAAyBlc,KAAzB,CAAnB;WACO,IAAP;;;;;;;;;;;8BASFyd,6BAAS9c,KAAKX,OAAO;WACZ,KAAK4c,aAAL,CAAmBjc,GAAnB,EAAwB,KAAxB,EAA+BX,KAA/B,CAAP;;;;;;;;;;;8BAWF0d,+CAAkB/c,KAAKX,OAAO;WACrB,KAAK4c,aAAL,CAAmBjc,GAAnB,EAAwB,MAAxB,EAAgCX,KAAhC,CAAP;;;;;;;;;;;8BAWF2d,mCAAYhd,KAAKX,OAAO;WACf,KAAK4c,aAAL,CAAmBjc,GAAnB,EAAwB,KAAxB,EAA+BX,KAA/B,CAAP;;;;;;;;;;;8BAWF4d,qDAAqBjd,KAAKX,OAAO;WACxB,KAAK4c,aAAL,CAAmBjc,GAAnB,EAAwB,MAAxB,EAAgCX,KAAhC,CAAP;;;;;;;;;;;;8BAUF6d,iCAAWld,KAAKX,OAAO;WACd,KAAK4c,aAAL,CAAmBjc,GAAnB,EAAwB,KAAxB,EAA+BX,KAA/B,CAAP;;;;;;;;;;;;8BAUF8d,yBAAOnd,KAAK;WACH,KAAKic,aAAL,CAAmBjc,GAAnB,EAAwB,SAAxB,EAAmC,IAAnC,CAAP;;;;;;;;;;;;8BAUFod,qCAAapd,KAAK;WACT,KAAKic,aAAL,CAAmBjc,GAAnB,EAAwB,SAAxB,EAAmC,KAAnC,CAAP;;;;;;;;;;;;8BAUFqd,mCAAYrd,KAAKsd,QAAQ;WAChB,KAAKrB,aAAL,CAAmBjc,GAAnB,EAAwB,KAAxB,EAA+Bsd,MAA/B,CAAP;;;;;;;;;;;;8BAUFC,uCAAcvd,KAAKsd,QAAQ;WAClB,KAAKrB,aAAL,CAAmBjc,GAAnB,EAAwB,MAAxB,EAAgCsd,MAAhC,CAAP;;;;;;;;;;;8BASFb,mCAAYzc,KAAKsd,QAAQ;WAChB,KAAKrB,aAAL,CAAmBjc,GAAnB,EAAwB,MAAxB,EAAgCsd,MAAhC,CAAP;;;;;;;;;;;;8BAUFE,6BAASxd,KAAKyd,WAAW;WAChB,KAAKxB,aAAL,CAAmBjc,GAAnB,EAAwB,QAAxB,EAAkCsb,kBAAkBG,MAAlB,CAAyBgC,SAAzB,CAAlC,CAAP;;;;;;;;;;;;8BAUFC,iCAAW1d,KAAK2d,QAAQ;WACf,KAAK1B,aAAL,CAAmBjc,GAAnB,EAAwB,QAAxB,QAAsCsb,kBAAkBG,MAAlB,CAAyBkC,MAAzB,CAAtC,CAAP;;;;;;;;;;;;8BAUFC,6BAAS5d,KAAK6d,QAAQ;WACb,KAAK5B,aAAL,CAAmBjc,GAAnB,EAAwB,QAAxB,EAAqCsb,kBAAkBG,MAAlB,CAAyBoC,MAAzB,CAArC,OAAP;;;;;;;;;;;;8BAUFC,2BAAQ9d,KAAK+d,OAAO;SACb9B,aAAL,CAAmBjc,GAAnB,EAAwB,QAAxB,EAAkC+d,KAAlC;;;;QAIIC,aAAa,EAAjB;QACID,MAAME,UAAV,EAAsB;oBAAgB,GAAd;;QACpBF,MAAMG,SAAV,EAAqB;oBAAgB,GAAd;;;QAEnBF,cAAcA,WAAW1d,MAA7B,EAAqC;WAC9B2b,aAAL,CAAmBjc,GAAnB,EAAwB,UAAxB,EAAoCge,UAApC;;WAEK,IAAP;;;;;;;;;;;;8BAUFnB,mCAAY7c,KAAKM,QAAQ;WAChB,KAAK2b,aAAL,CAAmBjc,GAAnB,EAAwB,OAAxB,EAAiCM,MAAjC,CAAP;;;;;;;;;;;8BASF4Z,uBAAMA,QAAO;SACNmC,MAAL,GAAcnC,MAAd;WACO,IAAP;;;;;;;;;;;8BASFkC,qBAAKA,OAAM;SACJD,KAAL,GAAaC,KAAb;WACO,IAAP;;;;;;;;;;;8BASF+B,+BAAUne,KAAK;SACRsc,MAAL,GAActc,GAAd;WACO,IAAP;;;;;;;;;;;8BASFoe,qCAAape,KAAK;QACZ,KAAKsc,MAAT,EAAiB;WACVA,MAAL,UAAmBtc,GAAnB;KADF,MAEO;WACAsc,MAAL,GAActc,GAAd;;WAEK,IAAP;;;;;;;;;;;8BASFqe,iCAAWre,KAAK;SACTsc,MAAL,SAAkBtc,GAAlB;WACO,IAAP;;;;;;;;;;;8BASFse,uCAActe,KAAK;QACb,KAAKsc,MAAT,EAAiB;WACVA,MAAL,WAAoBtc,GAApB;KADF,MAEO;WACAsc,MAAL,SAAkBtc,GAAlB;;WAEK,IAAP;;;;;;;;;;8BAQFue,iEAA0C;QAAhBC,OAAgB,uEAAN,IAAM;;SACnCxC,aAAL,CAAmBuC,yBAAnB,GAA+CC,OAA/C;WACO,IAAP;;;;;;;;;;8BAQFC,6CAAiBD,SAAS;YAChB9Y,IAAR,CAAa,qDACX,0DADF;WAEO,KAAK6Y,yBAAL,CAA+BC,OAA/B,CAAP;;;;;;;;;;8BAQFE,6BAAwB;QAAhBF,OAAgB,uEAAN,IAAM;;SACjBxC,aAAL,CAAmB0C,OAAnB,GAA6BF,OAA7B;WACO,IAAP;;;;;;;;;8BAOFrH,uBAAO;WACE,KAAK/B,OAAL,CAAauJ,aAAb,CAA2B,IAA3B,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjYJ,AACA,AACA,AACA,AACA,AAWA,AACA,AACA,AACA,AACA,AACA,AAEA,IAAMzf,UAAQC,EAAE,aAAF,CAAd;;IAEqBgW,mBAwdlBjR,SAAS,IAAT,WAoZAA,SAAS,IAAT;;;;;;;;;;;;oBAl2BWqQ,EAAZ,EAAiD;QAAjC1G,OAAiC,uEAAvB,EAAuB;QAAnBmB,UAAmB;QAAP4P,KAAO;;;;QAC3C,EAAErK,OAAOzS,SAAP,IAAoB,OAAOyS,EAAP,KAAc,QAApC,CAAJ,EAAmD;YAC3C,IAAInI,SAAJ,iBAA4BmI,EAA5B,uBAAN;;;iDAEF,wBAJ+C;;0BAK3B;;;;;YAAA;mBAMLvF,UANK;;KAApB,EAQG4P,KARH;;QAUI,CAAC,MAAK7E,cAAV,EAA0B;YAClB,IAAI1V,KAAJ,CAAU,mDAAV,CAAN;;UAEGwa,kBAAL,GAA0B,IAAIjf,KAAJ,aAAoB,MAAK2U,EAAzB,CAA1B;UACKuK,iBAAL,GAAyB,EAAzB;oBACeC,aAAf,GAA+Btf,KAAKC,GAAL,EAA/B;oBACesf,aAAf,GAA+B,IAAIzU,YAAJ,EAA/B;KAEE,SADF,EAEE,QAFF,EAGE,eAHF,EAIE,aAJF,EAKE,SALF,EAME,gBANF,EAOE,2BAPF,EAQE,OARF,EASE,UATF,EAUE,kBAVF,EAWE,WAXF,EAYE,gBAZF,EAaE1G,OAbF,CAaU;aAAS,MAAKqL,EAAL,CACjBhH,KADiB,EAEjB;0CAAIG,OAAJ;iBAAA;;;eAAgB,MAAKgN,MAAL,CAAenN,KAAf,yBAA0CG,OAA1C,CAAhB;OAFiB,CAAT;KAbV;;oBAkBgB,MAAKgG,QAAL,CAAc4Q,gBAA9B;;;;qBAGF5J,2BAAkB;uCAAR9D,MAAQ;YAAA;;;6BACPA,MAAT,eAAqB,KAAKgD,EAA1B;;;;;;;;;qBAOFpF,6CAAiBtD,SAAS;SACnBwJ,MAAL,CAAYtS,KAAK8I,OAAL,CAAZ,EAA2B,UAA3B;YACQA,QAAQW,GAAhB;WACO5N,YAAYsgB,IAAjB;eACS,KAAKC,oBAAL,CAA0BtT,OAA1B,CAAP;WACGjN,YAAYwgB,MAAjB;eACS,KAAKC,sBAAL,CAA4BxT,OAA5B,CAAP;WACGjN,YAAY0gB,OAAjB;eACS,KAAKC,uBAAL,CAA6B1T,OAA7B,CAAP;WACGjN,YAAY4gB,MAAjB;eACS,KAAKC,sBAAL,CAA4B5T,OAA5B,CAAP;WACGjN,YAAY8gB,GAAjB;eACS,KAAKC,mBAAL,CAAyB9T,OAAzB,CAAP;WACGjN,YAAYga,KAAjB;eACS,KAAKgH,qBAAL,CAA2B/T,OAA3B,CAAP;;aAEKvD,IAAL,CAAU,kBAAV,EAA8BuD,OAA9B;eACO,SAAQ5F,OAAR,EAAP;;;;qBAINsZ,2DAAwBrc,SAAS;gCAK3BA,OAL2B,CAE7B2c,cAF6B;QAG3B7V,IAH2B,yBAG3BA,IAH2B;QAGrBC,MAHqB,yBAGrBA,MAHqB;;YAMvB/G,QAAQ4c,EAAhB;WACOjhB,OAAOkhB,MAAZ;;cACM/V,SAASW,UAAUqV,gBAAvB,EAAyC;;;;;mBAKhC,KAAK1X,IAAL,CAAU,UAAV,EAAsB;;aAAtB,CAAP;;;;;;;;;iBAWK,KAAKA,IAAL,CAAU,OAAV,EAAmB;sBAAA,EAClB2B;WADD,CAAP;;;aAKK3B,IAAL,CAAU,kBAAV,EAA8BpF,OAA9B;eACO,SAAQgE,MAAR,CAAe,IAAI7C,KAAJ,CAAU,8BAAV,CAAf,CAAP;;;;qBAINob,+DAKG;;;kCAJDQ,aAIC;QAHCC,KAGD,sBAHCA,KAGD;QAFCC,SAED,sBAFCA,SAED;;aACQ,IAAT,EAAeC,mBAAf,GAAqCD,SAArC;;WAEO,KAAKE,gBAAL,CAAsBH,MAAM3d,GAAN,CAAU;aAAQ2c,KAAKxI,GAAb;KAAV,CAAtB,EAAmDrQ,IAAnD,CAAwD;;;iBAErDmT,GAAR,CAAY0G,MAAM3d,GAAN,CAAU;cAClBmU,GADkB,SAClBA,GADkB;cAElB8I,MAFkB,SAElBA,MAFkB;cAGlBc,GAHkB,SAGlBA,GAHkB;cAIPC,EAJO,SAIlBnP,SAJkB;cAKlBjJ,IALkB,SAKlBA,IALkB;cAMlBkC,IANkB,SAMlBA,IANkB;cAOlBuP,cAPkB,SAOlBA,cAPkB;iBAQd,OAAK4G,eAAL,CAAqB9J,GAArB,EAA0BrQ,IAA1B,CAA+B,UAACoa,YAAD,EAAkB;;gBAEjD,CAACA,YAAL,EAAmB,OAAO,IAAP;gBACfrP,kBAAJ;gBACImP,EAAJ,EAAQ;0BACM,IAAI9gB,IAAJ,CAAS8gB,GAAGxf,QAAH,EAAT,CAAZ;2BACa4T,aAAb,GAA6BvD,SAA7B,CAFM;;mBAID,CAACkP,MAAM,OAAKvG,cAAL,CAAoB9W,KAApB,CAA0BoH,IAA1B,EAAgChE,IAAhC,CAAqC,UAACnD,OAAD,EAAa;kBACxD8W,eAAe;oBACfsG,GADe;wBAAA;oCAAA;;eAArB;kBAMI1G,cAAJ,EAAoB;6BACLlF,SAAb,GAAyB,IAAIjV,IAAJ,CAASma,eAAe7Y,QAAf,EAAT,CAAzB;;6BAEYmC,OAAd,EAAuB8W,YAAvB;2BACapF,WAAb,GAA2B1R,OAA3B,CAX8D;aAAlD,CAAN,GAYH,SAAQ+C,OAAR,EAZE,EAYiBI,IAZjB,CAYsB,YAAM;kBAC3Bqa,kBAAkBlB,WAAWhd,SAASie,YAAT,EAAuBpG,mBAA1D;kBACIqG,eAAJ,EAAqB,OAAO,IAAP,CAFY;;uBAIxBD,YAAT,EAAuBpG,mBAAvB,GAA6CmF,MAA7C;;;;;;;;;;;qBAWKlX,IAAL,CAAU,gBAAV,EAA4B;uBACnBkX,MADmB;+BAEXc,GAFW;sCAGJlP;eAHxB,EAIGqP,YAJH;qBAKOA,YAAP;aAhCK,CAAP;WARI,CARc;;;SAAtB,EAoDGpa,IApDH,CAoDQ;iBAAiBsa,cAAcxe,MAAd,CAAqB;mBAAgBse,YAAhB;WAArB,CAAjB;SApDR;;KAFK,EAuDLpa,IAvDK,CAuDA,UAACsa,aAAD,EAAmB;UACpBA,cAAcrgB,MAAlB,EAA0B;;;;;;;eAOnBgI,IAAL,CAAU,2BAAV,EAAuCqY,aAAvC;;KA/DG,CAAP;;;qBAoEFhB,mDAAoBzc,SAAS;QAEzB0d,UAFyB,GAMvB1d,OANuB,CAEzB0d,UAFyB;QAIvBxG,IAJuB,GAMvBlX,OANuB,CAGzB0d,UAHyB,CAIvBxG,IAJuB;;QAOrByG,iBAAiBD,WAAWlK,GAAlC;QACMgE,YAAYkG,WAAWrM,EAA7B;QACMnD,YAAY,IAAI3R,IAAJ,CAASmhB,WAAWrI,CAAX,CAAaxX,QAAb,EAAT,CAAlB;QACM0f,eAAe,KAAK5B,kBAAL,CAAwB9e,GAAxB,CAA4B8gB,cAA5B,CAArB;;;QAGI,CAACJ,YAAL,EAAmB;iBACNhG,cAAb,CAA4B,EAAEC,oBAAF,EAAatJ,oBAAb,EAAwBgJ,UAAxB,EAA5B;;;qBAGFwF,8DAIK;;;QAFCkB,OAED,SAHDC,YAGC,CAFCD,OAED;;;WAEI,KAAKT,gBAAL,CAAsBS,QAAQve,GAAR,CAAY;aAASqW,MAAMlC,GAAf;KAAZ,CAAtB,EAAuDrQ,IAAvD,CAA4D;aACjE,SAAQmT,GAAR,CAAYsH,QAAQve,GAAR,CAAY;YACtBmU,GADsB,SACtBA,GADsB;YACjB4J,GADiB,SACjBA,GADiB;YACZlP,SADY,SACZA,SADY;YACDuH,MADC,SACDA,MADC;YACOtO,IADP,SACOA,IADP;YACauP,cADb,SACaA,cADb;YAC6BzR,IAD7B,SAC6BA,IAD7B;eAGtB,OAAKqY,eAAL,CAAqB9J,GAArB,EAA0BrQ,IAA1B,CAA+B,UAACoa,YAAD,EAAkB;;cAE3C,CAACA,YAAL,EAAmB,OAAO,IAAP;iBACZ,OAAK1G,cAAL,CAAoB9W,KAApB,CAA0BoH,IAA1B,EAAgChE,IAAhC,CAAqC,UAACnD,OAAD,EAAa;gBACjD8d,YAAYpH,eAAe7Y,QAAf,EAAlB;gBACMiZ,eAAe;kBACfsG,GADe;sBAAA;yBAGR,IAAI7gB,IAAJ,CAAS2R,UAAUrQ,QAAV,EAAT,CAHQ;yBAIR,IAAItB,IAAJ,CAASuhB,SAAT,CAJQ;;aAArB;2BAOc9d,OAAd,EAAuB8W,YAAvB;oBACQ7H,UAAR,CAAmBX,cAAcI,IAAjC;gBACIpP,iBAAeuc,aAAf,GAA+BiC,SAAnC,EAA8C;+BAC7BjC,aAAf,GAA+BiC,SAA/B;;;gBAGEP,aAAa7L,WAAb,IAA4B6L,aAAa7L,WAAb,CAAyBL,EAAzB,KAAgC+L,GAAhE,EAAqE;2BACtD1L,WAAb,GAA2B1R,OAA3B,CADmE;;gBAGjEyV,MAAJ,EAAY;;;;;;;qBAOLrQ,IAAL,CAAU,eAAV,EAA2BpF,OAA3B,EAAoCud,YAApC;;;;;;2BAManY,IAAb,CAAkB,eAAlB,EAAmCpF,OAAnC;aAbF,MAcO;;;;;;;qBAOAoF,IAAL,CAAU,eAAV,EAA2BpF,OAA3B,EAAoCud,YAApC;;;;;;2BAManY,IAAb,CAAkB,eAAlB,EAAmCpF,OAAnC;;WA7CG,CAAP;SAHF,CAHsB;OAAZ,CAAZ,CADiE;KAA5D,CAAP;;;qBA4DFic,qDAAqBjc,SAAS;;;QAE1BuT,WAF0B,GAMxBvT,OANwB,CAE1BuT,WAF0B;+BAMxBvT,OANwB,CAG1BuT,WAH0B;QAIxBwK,MAJwB,wBAIxBA,MAJwB;QAIhBC,CAJgB,wBAIhBA,CAJgB;;YAOpBhe,QAAQ4c,EAAhB;WACOjhB,OAAOsiB,MAAZ;;iBACS,KAAKX,eAAL,CAAqB/J,YAAYC,GAAjC,EAAsCrQ,IAAtC,CAA2C,UAACoa,YAAD,EAAkB;gBAC9D,CAACA,aAAalO,SAAlB,EAA6B;;2BAEduC,OAAb,GAAuB/S,MAAM0e,aAAa3L,OAAnB,EAA4B,CAAC,OAAKP,EAAN,CAA5B,CAAvB;;gBAEIlM,UAAU;yBACH4Y;aADb;;;;;;;;mBAUK3Y,IAAL,CAAU,SAAV,EAAqBD,OAArB,EAA8BoY,YAA9B;;;;;;;yBAOanY,IAAb,CAAkB,SAAlB,EAA6BD,OAA7B;WAtBK,CAAP;;WAyBGxJ,OAAOuiB,IAAZ;;iBACS,KAAKZ,eAAL,CAAqB/J,YAAYC,GAAjC,EAAsCrQ,IAAtC,CAA2C,UAACoa,YAAD,EAAkB;gBAC9D,CAACA,aAAalO,SAAlB,EAA6B;;2BAEduC,OAAb,GAAuB5S,WAAWue,aAAa3L,OAAxB,EAAiC,CAAC,OAAKP,EAAN,CAAjC,CAAvB;;gBAEIlM,UAAU;wBACJ4Y;aADZ;;;;;;;;mBAUK3Y,IAAL,CAAU,QAAV,EAAoBD,OAApB,EAA6BoY,YAA7B;;;;;;;yBAOanY,IAAb,CAAkB,QAAlB,EAA4BD,OAA5B;WAtBK,CAAP;;WAyBGxJ,OAAOwiB,cAAZ;;iBACS,KAAKb,eAAL,CAAqB/J,YAAYC,GAAjC,EAAsCrQ,IAAtC,CAA2C,UAACoa,YAAD,EAAkB;gBAC9D,CAACA,aAAalO,SAAlB,EAA6B;;2BAEduC,OAAb,GAAuB/S,MAAM0e,aAAa3L,OAAnB,EAA4B2B,YAAYyK,CAAxC,CAAvB;;gBAEI7Y,UAAU;yBACH4Y,MADG;uBAELC;aAFX;;;;;;;;;mBAYK5Y,IAAL,CAAU,eAAV,EAA2BD,OAA3B,EAAoCoY,YAApC;;;;;;;;yBAQanY,IAAb,CAAkB,eAAlB,EAAmCD,OAAnC;WAzBK,CAAP;;WA4BGxJ,OAAOyiB,YAAZ;;iBACS,KAAKd,eAAL,CAAqB/J,YAAYC,GAAjC,EAAsCrQ,IAAtC,CAA2C,UAACoa,YAAD,EAAkB;gBAC9D,CAACA,aAAalO,SAAlB,EAA6B;;2BAEduC,OAAb,GAAuB5S,WAAWue,aAAa3L,OAAxB,EAAiC2B,YAAYyK,CAA7C,CAAvB;;gBAEI7Y,UAAU;wBACJ4Y,MADI;uBAELC;aAFX;;;;;;;;;mBAYK5Y,IAAL,CAAU,aAAV,EAAyBD,OAAzB,EAAkCoY,YAAlC;;;;;;;;yBAQanY,IAAb,CAAkB,aAAlB,EAAiCD,OAAjC;WAzBK,CAAP;;;aA6BKC,IAAL,CAAU,kBAAV,EAA8BpF,OAA9B;eACO,SAAQgE,MAAR,CAAe,IAAI7C,KAAJ,CAAU,mCAAV,CAAf,CAAP;;;;qBAINgb,yDAAuBkC,iBAAiB;;;QAEpCC,aAFoC,GAMlCD,eANkC,CAEpCC,aAFoC;gCAMlCD,eANkC,CAGpCC,aAHoC;QAIlCjN,EAJkC,yBAIlCA,EAJkC;QAI9BmC,GAJ8B,yBAI9BA,GAJ8B;QAIzB+K,UAJyB,yBAIzBA,UAJyB;QAIbrQ,SAJa,yBAIbA,SAJa;QAIFmB,SAJE,yBAIFA,SAJE;QAISqH,cAJT,yBAISA,cAJT;;WAO/B,SAAQJ,GAAR,CAAY,CACjB,KAAKgH,eAAL,CAAqBgB,cAAc9K,GAAnC,CADiB,EAEjB,KAAKqD,cAAL,CAAoB9W,KAApB,CAA0Bue,cAAcnV,GAAxC,CAFiB,CAAZ,EAGJhG,IAHI,CAGC,iBAA6B;;UAA3Boa,YAA2B;UAAbvd,OAAa;;;UAE/B,CAACud,YAAL,EAAmB,OAAO3e,SAAP;UACbkY,eAAe;cAAA;gBAAA;mBAGR,IAAIva,IAAJ,CAAS2R,UAAUrQ,QAAV,EAAT,CAHQ;cAIb0gB,UAJa;;OAArB;UAOI7H,cAAJ,EAAoB;qBACLlF,SAAb,GAAyB,IAAIjV,IAAJ,CAASma,eAAe7Y,QAAf,EAAT,CAAzB;;qBAEYmC,OAAd,EAAuB8W,YAAvB;cACQ7H,UAAR,CAAmBX,cAAcI,IAAjC;aACO,OAAK8P,sBAAL,CAA4Bxe,OAA5B,EAAqCud,YAArC,CAAP;KAlBK,CAAP;;;qBAsBFiB,yDAAuBxe,SAASud,cAAc;;;;WAErCnT,gBAAgB,KAAKe,QAAL,CAAcsT,qBAA9B,EAAqD,CAACze,OAAD,EAAUud,YAAV,CAArD,EACJpa,IADI,CACC,UAACqH,cAAD,EAAoB;UACpBA,mBAAmB,KAAvB,EAA8B;mBACjBkH,WAAb,GAA2B1R,OAA3B,CAFwB;mBAGXyR,aAAb,GAA6BzR,QAAQkO,SAArC,CAHwB;;UAKpBlO,QAAQiF,IAAR,KAAiB,OAAKoM,EAA1B,EAA8B;qBACf8F,mBAAb,IAAoC,CAApC,CAD4B;YAExB,EAAEnX,QAAQqP,SAAR,IAAqBkO,aAAalO,SAApC,CAAJ,EAAoD;iBAC7CqP,QAAL,CAAc1e,OAAd;;;;;;;;;aASCoF,IAAL,CAAU,SAAV,EAAqBpF,OAArB,EAA8Bud,YAA9B;;;;;;mBAManY,IAAb,CAAkB,SAAlB,EAA6BpF,OAA7B;KAxBG,CAAP;;;qBA4BF0e,6BAAS1e,SAAS;SACXmS,MAAL,CAAY,iBAAZ,EAA+BnS,OAA/B;QACQwT,GAFQ,GAEAxT,OAFA,CAERwT,GAFQ;;QAGZ,CAACA,GAAL,EAAU;YACF,IAAIrS,KAAJ,CAAU,aAAV,CAAN;;QAEE,CAAC,KAAKya,iBAAL,CAAuBpI,GAAvB,CAAL,EAAkC;WAC3BoI,iBAAL,CAAuBpI,GAAvB,IAA8B,EAA9B;;SAEGoI,iBAAL,CAAuBpI,GAAvB,EAA4BmL,IAA5B,CAAiC3e,OAAjC;WACO,KAAK4e,UAAL,EAAP;;;;;;;qBAMFA,mCAAa;;;;QAEP,CAAC,KAAKC,WAAL,CAAiBxc,EAAjB,CAAoB,WAApB,CAAL,EAAuC;SAClC8P,MAAL,CAAY,gBAAZ,EAA8B,KAAKyJ,iBAAnC;aACQtF,GAAR,CAAY,aAAY,KAAKsF,iBAAjB,EAAoCvc,GAApC,CAAwC,UAACmU,GAAD,EAAS;UACrDsL,kBAAkB,OAAKlD,iBAAL,CAAuBpI,GAAvB,CAAxB;UACMuL,aAAaD,gBAAgBzf,GAAhB,CAAoB;eAAWW,QAAQkO,SAAnB;OAApB,CAAnB;UACMvF,UAAU,IAAIpN,cAAJ,CAAmB;aAC5B,KAD4B;oBAErB,IAAIX,UAAJ,CAAe;kBAAA;kBAEjBmH,KAAKC,GAAL,CAASN,KAAT,CAAe,IAAf,EAAqBqd,UAArB,CAFiB;gBAGnBhd,KAAKid,GAAL,CAAStd,KAAT,CAAe,IAAf,EAAqBqd,UAArB;SAHI;OAFE,CAAhB;aAQO,OAAKnD,iBAAL,CAAuBpI,GAAvB,CAAP;aACO,OAAKF,KAAL,CAAW3K,OAAX,EAAoB,KAApB,EAA2BtL,KAA3B,CAAiC,UAACmH,QAAD,EAAW;eAC5C2N,MAAL,CAAY,qBAAZ,EAAmC3N,QAAnC;eACKoX,iBAAL,CAAuBpI,GAAvB,IAA8BsL,eAA9B;OAFK,CAAP;KAZU,CAAZ;;;qBAmBFxL,uBAAMhK,KAAc;;;QACZX,UAAUW,GAAhB;QACI,KAAK+H,EAAT,EAAa;cACH4N,MAAR,GAAiB,KAAK5N,EAAtB;;;uCAHU5O,IAAM;UAAA;;;WAKX,oBAAKoc,WAAL,EAAiB3X,IAAjB,qBAAsByB,OAAtB,SAAkClG,IAAlC,EAAP;;;qBAGFiJ,uBAAMd,OAAOsU,KAAKC,UAA+B;;;QAArBC,WAAqB,uEAAP,KAAO;;SAC1CjN,MAAL,CAAY,cAAZ;;oBAII7S,SAAS,IAAT,CAL2C;QAG7C4d,mBAH6C,aAG7CA,mBAH6C;QAI7CrB,aAJ6C,aAI7CA,aAJ6C;;WAMxC,SACJ9Y,OADI,CACI,IAAIxH,cAAJ,CAAmB;WACrB,SADqB;UAEtB,MAFsB;kBAAA;sBAIV,IAAId,cAAJ,CAAmB;oBACvB4kB,OADuB;WAE9BD,WAF8B;gDAAA;oCAAA;sBAKnB;OALA;KAJT,CADJ,EAaJjc,IAbI,CAaC,UAACwF,OAAD,EAAa;UACbyW,WAAJ,EAAiB;;YAETE,eAAehgB,iBAAeggB,YAApC;YACIA,YAAJ,EAAkB;cACVnjB,QAAQmjB,aAAanjB,KAA3B;cACIA,SAASA,UAAUD,UAAUH,OAAjC,EAA0C;2BAC1B4M,QAAQgU,cAAtB,EAAsC;kBAChCxgB;aADN;mBAGOwM,OAAP;;;;qBAIQA,QAAQgU,cAAtB,EAAsC9c,KAAK;gBAAA;;OAAL,CAAtC;UAII,OAAK8K,OAAL,CAAayD,gBAAjB,EAAmC;eAC1BoG,oBAAoB,OAAK7J,OAAL,CAAayD,gBAAjC,EAAmD,CAAC,OAAKiD,EAAN,CAAnD,EACJlO,IADI,CACC,UAAC6K,eAAD,EAAqB;yBACXrF,QAAQgU,cAAtB,EAAsC7e,SAAS;uBAClC,GADkC;uBAElC,GAFkC;mBAGtC;WAH6B,EAInCkQ,eAJmC,CAAtC;iBAKOrF,OAAP;SAPG,CAAP;;aAUKA,OAAP;KA1CG,EA4CJxF,IA5CI,CA4CC,KAAKmQ,KAAL,CAAWhQ,IAAX,CAAgB,IAAhB,CA5CD,EA6CJH,IA7CI,CA6CC,UAACyQ,UAAD,EAAgB;UAElBqL,MAFkB,GAOhBrL,UAPgB,CAElBqL,MAFkB;kCAOhBrL,UAPgB,CAGlB+I,cAHkB;UAIZ4C,KAJY,yBAIhBC,EAJgB;UAKTC,QALS,yBAKhBC,KALgB;;UAQhB,CAACT,MAAL,EAAa;gBACHzc,IAAR,CAAa,2CAAb;;;aAGG6O,EAAL,GAAU4N,MAAV;UACIM,KAAJ,EAAW;yBACMD,YAAf,GAA8B,IAAIpjB,SAAJ,CAAcqjB,KAAd,EAAqBE,WAAW,IAAhC,CAA9B;;KA3DC,EA6DF,UAACjb,QAAD,EAAW;UACRA,SAAMsC,IAAN,KAAeW,UAAUkY,qBAA7B,EAAoD;YAC9CrgB,iBAAeggB,YAAf,KAAgC1gB,SAApC,EAA+C;;;gBAGvC,IAAIuC,KAAJ,CAAU,+BAAV,CAAN;;gBAEI,kCAAN;eACO7B,iBAAeggB,YAAtB;eACO,OAAK5T,KAAL,CAAWd,KAAX,EAAkBsU,GAAlB,EAAuBC,QAAvB,EAAiCC,WAAjC,CAAP;;YAEI5a,QAAN;KAxEG,CAAP;;;;;;;;;qBAgFFM,yBAAQ;;;SACDqN,MAAL,CAAY,eAAZ;QACMxJ,UAAU,IAAIpN,cAAJ,CAAmB;WAC5B,SAD4B;UAE7B;KAFU,CAAhB;WAIO,KAAK+X,KAAL,CAAW3K,OAAX,EAAoBxF,IAApB,CACL,YAAM;uBACW2Y,aAAf,CAA6B1W,IAA7B,CAAkC,OAAlC,EAA2C;cACnC;OADR;aAGKA,IAAL,CAAU,OAAV,EAAmB;cACX;OADR;KALG,CAAP;;;;;;;;;qBAgBFkB,qBAAK+N,WAAW;SACTlC,MAAL,CAAY,MAAZ;QACI,EAAEkC,qBAAqBlU,KAAvB,CAAJ,EAAmC;YAC3B,IAAI+I,SAAJ,gBAA2BmL,SAA3B,sBAAN;;QAEE,CAACA,UAAUjX,MAAf,EAAuB;aACd,SAAQ2F,OAAR,CAAgB,EAAhB,CAAP;;QAEI4F,UAAU,IAAIpN,cAAJ,CAAmB;WAC5B,SAD4B;UAE7B,OAF6B;sBAGjB,IAAId,cAAJ,CAAmB;wBACjB4Z;OADF;KAHF,CAAhB;WAOO,KAAKf,KAAL,CAAW3K,OAAX,EACJxF,IADI,CACC;aAAcyQ,WAAW+I,cAAX,CAA0BiD,oBAAxC;KADD,CAAP;;;;;;;;;;;qBAUFtC,2CAAgBjM,IAAqB;QAAjBwO,OAAiB,uEAAP,KAAO;;QAC/B,OAAOxO,EAAP,KAAc,QAAlB,EAA4B;YACpB,IAAInI,SAAJ,CAAiBmI,EAAjB,sBAAN;;QAEE,CAACwO,OAAL,EAAc;UACNC,qBAAqB,KAAKnE,kBAAL,CAAwB9e,GAAxB,CAA4BwU,EAA5B,CAA3B;UACIyO,kBAAJ,EAAwB;eACf,SAAQ/c,OAAR,CAAgB+c,kBAAhB,CAAP;;;WAGG,KACJ/L,QADI,GAEJC,OAFI,CAEI,UAFJ,EAEgB3C,EAFhB,EAGJ4C,IAHI,GAIJ9Q,IAJI,CAIC;aAAiBsa,cAAc,CAAd,KAAoB,IAArC;KAJD,CAAP;;;;;;;;;;;;qBAcFN,6CAAiB4C,KAAsB;;;QAAjBF,OAAiB,uEAAP,KAAO;;QAC/BG,wBACJH,UAAUE,GAAV,GAAgBA,IAAI9gB,MAAJ,CAAW;aAAM,QAAK0c,kBAAL,CAAwB9e,GAAxB,CAA4BwU,EAA5B,MAAoC,IAA1C;KAAX,CADlB;WAEO,CACL2O,sBAAsB5iB,MAAtB,GACA,KAAK2W,QAAL,GAAgBoG,WAAhB,CAA4B,UAA5B,EAAwC6F,qBAAxC,EAA+D/L,IAA/D,EADA,GAEA,SAAQlR,OAAR,EAHK,EAILI,IAJK,CAIA;aAAM4c,IAAI1gB,GAAJ,CAAQ;eAAM,QAAKsc,kBAAL,CAAwB9e,GAAxB,CAA4BwU,EAA5B,CAAN;OAAR,CAAN;KAJA,CAAP;;;;;;;;;qBAWF0C,+BAAW;WACF,IAAIqE,iBAAJ,CAAsB,IAAtB,CAAP;;;qBAGFqD,uCAAcwE,OAAO;;;QACbC,YAAYD,MAAM3Q,MAAN,EAAlB;cACU6Q,KAAV,GAAkB,IAAI9lB,iBAAJ,CAAsB;YAChC,gBAAe6lB,UAAUC,KAAzB;KADU,CAAlB;QAGMxX,UAAU,IAAIpN,cAAJ,CAAmB;WAC5B,MAD4B;UAE7B,OAF6B;mBAGpB,IAAIT,WAAJ,CAAgBolB,SAAhB;KAHC,CAAhB;WAKO,KACJ5M,KADI,CACE3K,OADF,EAEJxF,IAFI,CAEC,UAACyQ,UAAD,EAAgB;UAChB;eACK9T,KAAKC,KAAL,CAAW6T,WAAWL,WAAX,CAAuB6M,OAAvB,CAA+BjZ,IAA1C,CAAP;OADF,CAEE,OAAO3C,KAAP,EAAc;YACR6b,gBAAgB,gBAAexgB,KAAK+T,UAAL,CAAf,CAAtB;cACM,IAAIzS,KAAJ,iCAAwCqD,SAAMxE,OAA9C,mBAAmEqgB,aAAnE,CAAN;;KAPC,EAUJld,IAVI,CAUC;aAAiB,SAAQmT,GAAR,CAAYmH,cAAcpe,GAAd,CACjC,QAAKihB,6BAAL,CAAmChd,IAAnC,SADiC,CAAZ,CAAjB;KAVD,EAaJH,IAbI,CAaC;aAAiBsa,cAAcpe,GAAd,CAAkB,UAACkhB,mBAAD,EAAyB;YAC5DhD,eAAe,QAAK5B,kBAAL,CAAwB9e,GAAxB,CAA4B0jB,oBAAoBlP,EAAhD,CAAnB;YACI,CAACkM,YAAL,EAAmB;yBACFgD,mBAAf;kBACKpO,MAAL,CAAY,qBAAZ;kBACKwJ,kBAAL,CAAwB3e,GAAxB,CAA4BujB,oBAAoBlP,EAAhD,EAAoDkP,mBAApD;SAHF,MAIO;kBACApO,MAAL,CAAY,4BAAZ;WAEE,SADF,EAEE,WAFF,EAGE,WAHF,EAIE,eAJF,EAKE,aALF,EAME,cANF,EAOE,SAPF,EAQE,aARF,EASE,WATF,EAUE,OAVF,EAWExR,OAXF,CAWU,UAAC7D,GAAD,EAAS;gBACXX,QAAQokB,oBAAoBzjB,GAApB,CAAd;gBACIX,UAAUyC,SAAd,EAAyB2e,aAAazgB,GAAb,IAAoBX,KAApB;WAb3B;uBAea6V,MAAb;;eAEKuL,YAAP;OAzBqB,CAAjB;KAbD,CAAP;;;qBA0CF+C,uEAA8BE,SAAS;;;QAC/BrZ,OAAOrJ,SAAS;gBACV,IADU;UAEhB,eAFgB;WAGf,aAHe;gBAIV,iBAJU;eAKX,eALW;qBAML,sBANK;uBAOH,2BAPG;SAQjB,SARiB;UAShB,WATgB;WAUf,QAVe;SAWjB,SAXiB;UAYhB;KAZO,EAaV0iB,OAbU,CAAb;WAcO,SAAQzd,OAAR,GAAkBI,IAAlB,CAAuB,YAAM;UAC9BgE,KAAKuK,WAAT,EAAsB;eACb,QAAKmF,cAAL,CAAoB9W,KAApB,CAA0BoH,KAAKuK,WAA/B,EAA4CvO,IAA5C,CACL,UAACnD,OAAD,EAAa;;eAEN0R,WAAL,GAAmB1R,OAAnB;kBACQiF,IAAR,GAAekC,KAAKsZ,eAApB;kBACQpP,EAAR,GAAalK,KAAKuZ,aAAlB;kBACQxS,SAAR,GAAoB,IAAI3R,IAAJ,CAAS4K,KAAKwZ,oBAAd,CAApB;cACIxZ,KAAKyZ,yBAAT,EAAoC;oBAC1BpP,SAAR,GAAoB,IAAIjV,IAAJ,CAAS4K,KAAKyZ,yBAAd,CAApB;;kBAEM3R,UAAR,CAAmBX,cAAcI,IAAjC;iBACOvH,KAAKsZ,eAAZ;iBACOtZ,KAAKuZ,aAAZ;iBACOvZ,KAAKwZ,oBAAZ;iBACOxZ,KAAKyZ,yBAAZ;;SAdG,CAAP;;aAmBK,SAAQ7d,OAAR,EAAP;KArBK,EAsBJI,IAtBI,CAsBC;aAAM,IAAIiO,YAAJ,CAAiBjK,IAAjB,UAAN;KAtBD,CAAP;;;;;;;;;;;;;;;qBAmCF0Z,mDAAiC;;;QAAdlW,OAAc,uEAAJ,EAAI;;QAEpBqT,CAFoB,GAQ3BrT,OAR2B,CAE7BiH,OAF6B;QAG7BjV,OAH6B,GAQ3BgO,OAR2B,CAG7BhO,IAH6B;QAI7BkU,UAJ6B,GAQ3BlG,OAR2B,CAI7BkG,UAJ6B;QAK7BxB,SAL6B,GAQ3B1E,OAR2B,CAK7B0E,SAL6B;QAM7ByR,MAN6B,GAQ3BnW,OAR2B,CAM7BmW,MAN6B;QAO1BC,UAP0B,4BAQ3BpW,OAR2B;;QAS3B,EAAE0E,aAAalP,MAAMC,OAAN,CAAc4d,CAAd,CAAf,CAAJ,EAAsC;YAC9B,IAAI9U,SAAJ,2BAAsC8U,CAAtC,sBAAN;;QAEEpM,UAAU,SAAQoM,CAAR,CAAd;YACQtQ,GAAR,CAAY,KAAK2D,EAAjB;cACU,YAAWO,OAAX,EAAoB2C,IAApB,EAAV;QACIb,OAAOqN,cAAc,EAAzB;QACIpkB,OAAJ,EAAU;UACJ,OAAOA,OAAP,KAAgB,QAApB,EAA8B;cACtB,IAAIuM,SAAJ,wBAAmCvM,OAAnC,sBAAN;;WAEGA,IAAL,GAAYA,OAAZ;;QAEEkU,UAAJ,EAAgB;cACNrO,IAAR,CAAa,8JAAb;WACKkR,IAAL,GAAY7C,UAAZ;;WAEK,IAAIxW,iBAAJ,CAAsB;YACrB,gBAAeqZ,IAAf;KADD,CAAP;;QAIMsN,mBAAmB;SACpBpP,OADoB;gBAAA;0BAAA;;KAAzB;;WAOO,SAAQ7O,OAAR,CACH,IAAIxH,cAAJ,CAAmB;WACZ,MADY;UAEb,OAFa;mBAGJ,IAAIT,WAAJ,CAAgBkmB,gBAAhB;KAHf,CADG,EAOJ7d,IAPI,CAOC,UAACwF,OAAD,EAAa;UACb,QAAKgC,OAAL,CAAa2J,4BAAjB,EAA+C;YACvCjG,UAAS,CAAC,IAAD,EAAO,QAAKgD,EAAZ,EAAgBO,OAAhB,EAAyB,QAAzB,CAAf;eACO4C,oBAAoB,QAAK7J,OAAL,CAAa2J,4BAAjC,EAA+DjG,OAA/D,EACJlL,IADI,CACC,UAAC6K,eAAD,EAAqB;yBACXrF,QAAQ4K,WAAtB,EAAmCzV,SAAS;uBAC/B,GAD+B;uBAE/B,GAF+B;mBAGnC;WAH0B,EAIhCkQ,eAJgC,CAAnC;iBAKOrF,OAAP;SAPG,CAAP;;aAUKA,OAAP;KApBG,EAsBJxF,IAtBI,CAsBC,KAAKmQ,KAAL,CAAWhQ,IAAX,CAAgB,IAAhB,CAtBD,EAuBJH,IAvBI,CAuBC;aAAc,IAAIiO,YAAJ;qBAAA;cAEZP,UAFY;4BAAA;sBAAA;YAKd+C,WAAWL,WAAX,CAAuBC,GALT;mBAMPI,WAAWL,WAAX,CAAuB0N,KANhB;mBAOPrN,WAAWL,WAAX,CAAuB0N,KAPhB;uBAQH,IARG;iBAST,QAAK5P,EATI;iBAUThC,YAAY,EAAZ,GAAiBuC;SACvBmP,UAXe,WAAd;KAvBD,EAoCJ5d,IApCI,CAoCC5F,IAAI;aACR,QAAKoe,kBAAL,CAAwB3e,GAAxB,CAA4BugB,aAAalM,EAAzC,EAA6CkM,YAA7C,CADQ;KAAJ,CApCD,CAAP;;;;;;;;;;;;qBAgDF2D,uCAAczD,eAAe;YACnBjb,IAAR,CAAa,oEAAb;QACI,CAACrC,MAAMC,OAAN,CAAcqd,aAAd,CAAL,EAAmC;YAC3B,IAAIvU,SAAJ,CAAiBuU,aAAjB,sBAAN;;WAEK,SAAQnH,GAAR,CAAYmH,cAAcpe,GAAd,CAAkB;aAAgBke,aAAarG,IAAb,EAAhB;KAAlB,CAAZ,CAAP;;;;;;;qBAMFG,qCAAc;;;;QAER,CAAC,KAAKwH,WAAL,CAAiBxc,EAAjB,CAAoB,WAApB,CAAL,EAAuC;QACjC8e,SAAS7hB,SAAS,IAAT,EAAe8X,uBAA9B;QACMqG,gBAAgB,YAAW0D,MAAX,CAAtB;QACI,CAAC1D,cAAcrgB,MAAnB,EAA2B;QACrB2iB,MAAMtC,cAAcpe,GAAd,CAAkB,UAACke,YAAD,EAAkB;UAC1C,EAAEA,wBAAwBnM,YAA1B,CAAJ,EAA6C;cACrC,IAAIlI,SAAJ,CAAiBqU,YAAjB,4BAAN;;aAEKA,aAAalM,EAApB;KAJU,CAAZ;SAMKc,MAAL,YAAqB4N,GAArB;WACOqB,KAAP;SACKC,gBAAL,CAAsB5D,aAAtB,EAAqCpgB,KAArC,CAA2C,UAACmH,QAAD,EAAW;cAC/C2N,MAAL,CAAY,sBAAZ,EAAoC3N,QAApC;oBACc7D,OAAd,CAAsBwgB,OAAOzT,GAAP,CAAWpK,IAAX,CAAgB6d,MAAhB,CAAtB;KAFF;;;qBAKFE,6CAAiB5D,eAAe;;;WACvB,KAAKnK,KAAL,CAAW,IAAI/X,cAAJ,CAAmB;WAC9B,MAD8B;mBAEtB,IAAIH,WAAJ,CAAgB;eACpBqiB,cAAcpe,GAAd,CAAkB;iBAAgB,IAAInE,SAAJ,CAAc;iBAChDqiB,aAAalM,EADmC;iBAE/CkM,aAAa7L,WAAb,IAA4B6L,aAAa7L,WAAb,CAAyBzM,IAAzB,KAAkC,QAAKoM,EAApE,GACDkM,aAAa7L,WAAb,CAAyBL,EADxB,GAC6BzS,SAHmB;uBAI1C,CAAC2e,aAAa9L,aAAb,IAA8B,IAAIlV,IAAJ,EAA/B,EAA2C6Z,OAA3C;WAJ4B,CAAhB;SAAlB;OADI;KAFG,CAAX,EAUH,KAVG,CAAP;;;;EAl4BkC/O;;;;;ACxBtC,AACA,AAEA;;;IAIqBia,wBAHpB1R,YAAY,CAAC,CAAb,qBACAS;;;;;;;;;yBASwB;QAAXI,IAAW,uEAAJ,EAAI;;;;QACjB,OAAOA,IAAP,KAAgB,QAApB,EAA8B;YACtB,IAAIvH,SAAJ,CAAiBuH,IAAjB,sBAAN;;;iDAEF,wBAJqB;;UAKhBD,OAAL,CAAaC,IAAb;;;;;EAZqCH,yCAgBzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA,AACA,AACA,AAEA,IAAMtU,WAAQC,EAAE,kBAAF,CAAd;;AAEA,IAAMslB,eAAe,SAAfA,YAAe,CAACrhB,MAAD,EAASpD,GAAT,EAAcmE,UAAd,EAA6B;MAC1CugB,KAAKvgB,WAAW9E,KAAtB;;aAEWA,KAAX,GAAmB,SAASslB,OAAT,CAAiBhY,KAAjB,EAAwB;QACrCsF,gBAAJ;QACI,OAAOtF,KAAP,KAAiB,QAArB,EAA+B;gBACnBA,KAAV;KADF,MAEO;UACD;kBACQ3J,KAAKC,KAAL,CAAW0J,KAAX,CAAV;OADF,CAEE,OAAOjF,KAAP,EAAc;kBACJiF,KAAV;;;WAGG+X,GAAG5hB,IAAH,CAAQ,IAAR,EAAcmP,OAAd,CAAP;GAXF;CAHF;;AAkBA,IAAM2S,eAAe,SAAfA,YAAe,CAACxhB,MAAD,EAASpD,GAAT,EAAcmE,UAAd,EAA6B;MAC1CugB,KAAKvgB,WAAW9E,KAAtB;;aAEWA,KAAX,GAAmB,SAASslB,OAAT,CAAiB/R,IAAjB,EAAuB;;;WACjC,SAAQ3M,OAAR,CAAgB2M,IAAhB,EACJvM,IADI,CACC8G,iBAAiB,KAAKkB,QAAL,CAAcwW,kBAA/B,CADD,EAEJxe,IAFI,CAEC;aAAiBqe,GAAG5hB,IAAH,QAAcgiB,aAAd,CAAjB;KAFD,EAGJze,IAHI,CAGC8G,iBAAiB,KAAKkB,QAAL,CAAc0W,iBAA/B,CAHD,CAAP;GADF;CAHF;;IAWqBC;2BACO;QAAdzW,OAAc,uEAAJ,EAAI;;;;SACnBF,QAAL,GAAgBE,OAAhB;SACK0W,eAAL,GAAuB,EAAvB;;;0BAGFC,6BAASC,cAAc;QAEnBA,gBACAA,aAAaliB,KADb,IAEAkiB,aAAaza,SAFb,IAGAya,aAAaza,SAAb,CAAuB8H,MAJzB,EAKE;WACKyS,eAAL,CAAqBG,OAArB,CAA6BD,YAA7B;KANF,MAOO;YACC,IAAI/Y,SAAJ,CAAc,sBAAd,CAAN;;;;;;;;0BAQJnJ,uBAAMgP,SAAS;aACP,qBAAN,EAA6BA,OAA7B;;;;;;;wCAEoB,KAAKgT,eAAzB,4GAA0C;YAA/BI,KAA+B;;YAClCC,cAAc3iB,cAAcsP,OAAd,IAAyB,eAAc,EAAd,EAAkBA,OAAlB,CAAzB,GAAsDA,OAA1E;YACIsT,cAAJ;YACI3a,eAAJ;YACI;kBACMya,MAAM1S,QAAN,CAAe2S,WAAf,CAAR;SADF,CAEE,OAAO5d,KAAP,EAAc;;;YAGZ6d,KAAJ,EAAW;cACL;qBACOF,MAAMpiB,KAAN,CAAYqiB,WAAZ,CAAT;WADF,CAEE,OAAO5d,KAAP,EAAc;oBACNhC,IAAR,CAAa,uCAAb,EAAsD;0BAAA;0BAAA;uBAG3C4f;aAHX;;cAME1a,WAAW9I,SAAf,EAA0B;qBAClB,kBAAN,EAA0B8I,MAA1B;mBACOA,MAAP;;;;;;;;;;;;;;;;;;;UAIA,IAAIvG,KAAJ,CAAU,0BAAV,CAAN;;;;gEA/BDogB,cACAG;;ACxDH;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,IAAM1lB,UAAQC,EAAE,aAAF,CAAd;;;;;;;AAOA,IAAMqmB,kBAAkB;;QAEhB,CAFgB;;UAId,CAJc;;OAMjB;CANP;AAQA,eAAcA,eAAd;;;;;;;;;;;;;;;;;AAiBA,IAAMC,6BAA6B,SAA7BA,0BAA6B,CAAC7iB,IAAD,EAG7B;MAHoCuB,UAGpC,uEAHiD;OAAA,iBAC/C;aAAS,KAAKpE,GAAL,CAAS6C,IAAT,CAAP;KAD6C;OAAA,eAEjDvD,KAFiD,EAE1C;WAAOa,GAAL,CAAS0C,IAAT,EAAevD,KAAf;;GACT;;yBACkBiV,aAAa5J,SAAnC,EAA8C9H,IAA9C,EAAoDuB,UAApD;CAJF;;AAOA,AAsBA,AAyCA,IAAMwK,mBAAmB,SAAnBA,gBAAmB,CAAC+W,QAAD,EAAc;;MAE/BrD,WAAWnQ,MAAjB;WACSyT,UAAT,GAAsB,EAAtB;MACMC,gBAAgBF,SAAS3L,cAAT,GAA0B,IAAIiL,aAAJ,CAAkBU,SAASrX,QAA3B,CAAhD;;;;;;;;;;;;;;WAcS6W,QAAT,GAAoB;WAClB/hB,YAAYgiB,YAAZ,EAA0B5iB,GAA1B,CAA8BqjB,cAAcV,QAAd,CAAuB1e,IAAvB,CAA4Bof,aAA5B,CAA9B,CADkB;GAApB;WAESV,QAAT,CAAkB/hB,YAAYuiB,SAASrX,QAAT,CAAkBwX,cAA9B,CAAlB;;;;;;;;;;;WAWSC,cAAT,GAA0B,UAACvR,EAAD,EAAKwR,aAAL,EAAoB3D,GAApB,EAA4B;QAC9C4D,aAAa,OAAOzR,EAAP,KAAc,QAAjC;QACIyR,cAAcN,SAASC,UAAT,CAAoBpR,EAApB,MAA4BzS,SAA9C,EAAyD;aAChD,SAAQmE,OAAR,CAAgByf,SAASC,UAAT,CAAoBpR,EAApB,CAAhB,CAAP;;QAEIlU,UAAUqlB,SAAS9W,KAAT,GAAiBvI,IAAjB,CAAsB,UAAC2I,UAAD,EAAgB;UAC9CI,SAAS,IAAI+F,QAAJ,CAAaZ,EAAb,EAAiBwR,aAAjB,EAAgC/W,UAAhC,EAA4C;wBACzC4W,aADyC;kBAE/CF,SAASrX;OAFN,CAAf;iBAIWa,EAAX,CAAc,WAAd,EAA2B;eACzBE,OAAOR,KAAP,CAAa8W,SAAS3X,QAAT,CAAkBD,KAA/B,EAAsCsU,GAAtC,EAA2CC,QAA3C,EAAqD,IAArD;;;;;;;;;;;;SAYGhc,IAZH,CAaI;iBAAM+I,OAAO9G,IAAP,CAAY,WAAZ,CAAN;SAbJ,EAcI;iBAAS8G,OAAO9G,IAAP,CAAY,gBAAZ,EAA8BZ,KAA9B,CAAT;SAdJ,CADyB;OAA3B;eAkBS0H,MAAT,EAAiB4P,aAAjB,CAA+B9P,EAA/B,CAAkC,OAAlC,EAA2C,YAAM;eACxCwW,SAASC,UAAT,CAAoBvW,OAAOmF,EAA3B,CAAP;iBACS1D,WAAT,CAAqBzB,MAArB;OAFF,EAGGsW,QAHH;aAIOtW,OAAOR,KAAP,CAAa8W,SAAS3X,QAAT,CAAkBD,KAA/B,EAAsCsU,GAAtC,EAA2CC,QAA3C,EACJhc,IADI,CACC,YAAM;iBACDsf,UAAT,CAAoBvW,OAAOmF,EAA3B,IAAiCnF,MAAjC;iBACSuB,SAAT,CAAmBvB,MAAnB;eACOA,MAAP;OAJG,CAAP;KA3Bc,CAAhB;QAkCI4W,UAAJ,EAAgB;eACLL,UAAT,CAAoBpR,EAApB,IAA0BlU,OAA1B;;WAEKA,OAAP;GA1CF;;CA/BF;;AA8EA,IAAM2Q,wBAAwB,SAAxBA,qBAAwB,CAACnF,OAAD,EAAU6Z,QAAV,EAAuB;MAC/C7Z,QAAQsW,MAAR,KAAmB,IAAvB,EAA6B,OAAO,IAAP;MACvB8D,eAAeP,SAASC,UAAT,CAAoB9Z,QAAQsW,MAA5B,CAArB;MACI8D,YAAJ,EAAkB;iBACH9W,gBAAb,CAA8BtD,OAA9B,EAAuCtL,KAAvC,CAA6CrB,OAA7C;GADF,MAEO;YAEH,sEADF,EAEE6D,KAAK8I,OAAL,CAFF;;SAKK,KAAP;CAXF;;AAcA,AAAO,IAAMqa,WAAW;QAChB,8BADgB;oCAAA;8CAAA;kBAIN,CACdlU,OADc,EAEdqC,eAFc,EAGdmQ,WAHc;CAJX;;AC3MP5W,SAAS6X,0BAAT,GAAsCA,0BAAtC;AACA7X,SAASU,sBAAT,GAAkC,CAAC4X,QAAD,CAAlC,CAEA,AAEA;;;;;;;;;;;;;;;;;"}